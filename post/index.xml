<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Yowko&#39;s Notes</title><link>https://blog.yowko.com/post/</link><description>Recent content in Posts on Yowko&#39;s Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 22 Jul 2024 00:30:00 +0800</lastBuildDate><atom:link href="https://blog.yowko.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 C# 存取 redis JSON</title><link>https://blog.yowko.com/csharp-redis-json/</link><pubDate>Mon, 22 Jul 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-redis-json/</guid><description>使用 C# 存取 redis JSON 雖然一直以來持續都在使用 redis，只是用途一直是當做 cache，有訂閱著 redis 的更新消息，但除了 security patch 之外卻沒有額外關注，最近查指</description></item><item><title>.NET 中的 UUID(GUID) 與 ULID</title><link>https://blog.yowko.com/dotnet-uuid-guid-ulid/</link><pubDate>Wed, 10 Jul 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-uuid-guid-ulid/</guid><description>.NET 中的 UUID(GUID) 與 ULID 先來認識一下 UUID(GUID) 與 ULID UUID (Universally Unique Identifier) 128-bit 長的唯一標識符，通常用於生成唯一 ID UUID Version 1：基於時間和 MAC address 結構：60 bit 代表時間戳，48 bit 代表節點（通常</description></item><item><title>使用 C# 體驗 Apache Kafka Streams</title><link>https://blog.yowko.com/csharp-kafka-streams/</link><pubDate>Wed, 03 Jul 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-kafka-streams/</guid><description>使用 C# 體驗 Apache Kafka Streams 幾年前開始使用 Kafka 時，就有注意 Kafka Streams，但當時查資料發現 Kafka Streams 是 Java 的 library (僅支援 Java 與 Scala)，並不支援 .NET，最近看</description></item><item><title>在 Ubuntu 上安裝 IPsec VPN Server</title><link>https://blog.yowko.com/install-ipsec-vpn-server-on-ubuntu/</link><pubDate>Fri, 21 Jun 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-ipsec-vpn-server-on-ubuntu/</guid><description>在 Ubuntu 上安裝 IPsec VPN Server 之前筆記 在 Ubuntu 上安裝 OpenVPN Server 與 在 Ubuntu 上安裝有密碼保護的 OpenVPN Server 紀錄在如何在 Ubuntu 上安裝 OpenVPN Server，基本上已經可以滿足透過特定 ip 存取服務的</description></item><item><title>使用 Helm 安裝 Redis Cluster</title><link>https://blog.yowko.com/helm-redis-cluster/</link><pubDate>Thu, 06 Jun 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/helm-redis-cluster/</guid><description>使用 Helm 安裝 Redis Cluster 之前筆記 在 Kubernetes 部署 Redis Cluster 與 使用 Helm 在 Kubernetes 上安裝 Redis Cluster 紀錄到如何使用 Helm 在 Kubernetes 上安裝 Redis Cluster，最近因為專案需要打算首次將 Redis 安裝在 Kubernetes 上供</description></item><item><title>在 Ubuntu 上安裝有密碼保護的 OpenVPN Server</title><link>https://blog.yowko.com/install-openvpn-server-on-ubuntu-with-key/</link><pubDate>Wed, 05 Jun 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-openvpn-server-on-ubuntu-with-key/</guid><description>在 Ubuntu 上安裝有密碼保護的 OpenVPN Server 在之前筆記 在 Ubuntu 上安裝 OpenVPN Server 紀錄到如何在 Ubuntu 上安裝 OpenVPN Server，但身為一個有資安意識的工程師，使用時總覺得怪怪的，整個</description></item><item><title>在 Ubuntu 上安裝 OpenVPN Server</title><link>https://blog.yowko.com/install-openvpn-server-on-ubuntu/</link><pubDate>Tue, 04 Jun 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-openvpn-server-on-ubuntu/</guid><description>在 Ubuntu 上安裝 OpenVPN Servern 最近產品有些服務的異常存取增加，根據網站收到的 request log 數量與參數來看，推測是有人在嘗試找出系統上的 api 漏洞或是破解帳密，因此決定將服</description></item><item><title>使用 C# 取得 Redis 複雜型別 table 資料</title><link>https://blog.yowko.com/csharp-redis-table/</link><pubDate>Sun, 21 Apr 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-redis-table/</guid><description>使用 C# 取得 Redis 複雜型別 table 資料 之前筆記 使用 C# 取得 Redis key 的記憶體用量 提到如何使用 C# 取得 Redis key 的記憶體用量，但是把所有 redis key 全部拉回 C# 做處理，可以想見執行</description></item><item><title>使用 C# 取得 Redis key 的記憶體用量</title><link>https://blog.yowko.com/csharp-redis-key-memory-usage/</link><pubDate>Wed, 17 Apr 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-redis-key-memory-usage/</guid><description>使用 C# 取得 Redis key 的記憶體用量 團隊某個 redis cluster 中，有一組 replication (master-replica) 的 memory 用量特別高，推測是 key 的 hash tag 不夠分散，造成 key 都集中在某些 slot 上，進而使得一組 cluster replication (master-replica) 的 memory 用</description></item><item><title>使用 Helm Chart kube-prometheus-stack 透過 ServiceMonitor 自動蒐集 metrics</title><link>https://blog.yowko.com/kube-prometheus-stack-servicemonitor/</link><pubDate>Wed, 10 Apr 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/kube-prometheus-stack-servicemonitor/</guid><description>使用 Helm Chart kube-prometheus-stack 透過 ServiceMonitor 自動蒐集 metrics 過去團隊會在建立 storage service 連帶建立相對應的 exporter，以 MySql 為例，ansible 的腳本已經包含建立 mysql service 與 mysql exporter serv</description></item><item><title>從 arm64 macOS 建立 Linux x64 ASP.NET Docker Image 卡在 dotnet restore</title><link>https://blog.yowko.com/arm-docker-build-stuck-on-dotnet-restore/</link><pubDate>Thu, 04 Apr 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/arm-docker-build-stuck-on-dotnet-restore/</guid><description>從 arm64 macOS 建立 Linux x64 ASP.NET Docker Image 卡在 dotnet restore 之前筆記 為 ASP.NET Core 建立 Multi-Platform image 紀錄到如何使用 buildx 來建立 linux/amd64 與 linux/arm64 的 docker image，當時提到 .NET 8 以前需要使用條件式編譯，而 .NET 8 開始</description></item><item><title>在不同 mac 上共享 .NET 開發用憑證</title><link>https://blog.yowko.com/share-dotnet-certificate-on-mac/</link><pubDate>Tue, 02 Apr 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/share-dotnet-certificate-on-mac/</guid><description>在不同 mac 上共享 .NET 開發用憑證 最近團隊為了避免部份功能在開發階段因為憑證問題無法正常運作而造成開發與實際的 production code 有所差異，因此想要逐步套用 https everywhere 的機</description></item><item><title>從 macOS 中移除 .NET Runtime 與 SDK</title><link>https://blog.yowko.com/remove-dotnet-sdk-runtime-from-mac/</link><pubDate>Wed, 21 Feb 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/remove-dotnet-sdk-runtime-from-mac/</guid><description>從 macOS 中移除 .NET Runtime 與 SDK 之前筆記 從 Mac 移除 .NET Core Runtime 與 SDK 紀錄到因為團隊定期升級 .NET 版本，所以順手紀錄如何移除舊版本的 .NET Core SDK，隨著時間的推移，中間又升級</description></item><item><title>C# 在啟用 TLS 的 RabbitMQ 上收發訊息</title><link>https://blog.yowko.com/csharp-tls-rabbitmq/</link><pubDate>Thu, 01 Feb 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-tls-rabbitmq/</guid><description>C# 在啟用 TLS 的 RabbitMQ 上收發訊息 之前筆記 為 RabbitMQ container 啟用 TLS 連線 提到最近 partner 為了安全性考量，在與我們介接的 RabbitMQ 上啟用 TLS 連線，連線由 port 5672 改為 port 5671，造成 application 這邊</description></item><item><title>為 RabbitMQ container 啟用 TLS 連線</title><link>https://blog.yowko.com/rabbitmq-tls/</link><pubDate>Tue, 30 Jan 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-tls/</guid><description>為 RabbitMQ container 啟用 TLS 連線 最近 partner 為了安全性考量，在與我們介接的 RabbitMQ 上啟用 TLS 連線，連線由 port 5672 改為 port 5671，原以為是簡單的調整，想不到 application 這邊完全陣亡，為了</description></item><item><title>ClickHouse 使用 MySql Database Engine</title><link>https://blog.yowko.com/clickhouse-mysql-engine/</link><pubDate>Mon, 15 Jan 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/clickhouse-mysql-engine/</guid><description>ClickHouse 使用 MySql Database Engine 之前筆記 ClickHouse 在彙總資料時的效能優勢 紀錄到 ClickHouse 與 MySql 在特定查詢情境的效能差異，查閱官網文件時，發現 ClickHouse 除了支援自有的 table engine 之外，也支援其他 DB</description></item><item><title>為頻繁更新 ClickHouse 資料選擇適合的 Table Engine</title><link>https://blog.yowko.com/clickhouse-replacingmergetree-collapsingmergetree/</link><pubDate>Fri, 12 Jan 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/clickhouse-replacingmergetree-collapsingmergetree/</guid><description>為頻繁更新 ClickHouse 資料選擇適合的 Table Engine 雖然之前筆記 新增修改刪除查詢 ClickHouse 資料&amp;rdquo; 有紀錄到如何更新與刪除資料，但在 ClickHouse 官網文件：Avoid Mutations 就明確</description></item><item><title>新增修改刪除查詢 ClickHouse 資料</title><link>https://blog.yowko.com/clickhouse-insert-update-select-delete/</link><pubDate>Wed, 10 Jan 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/clickhouse-insert-update-select-delete/</guid><description>新增修改刪除查詢 ClickHouse 資料&amp;rdquo; 之前筆記 C# 如何新增資料至 ClickHouse 與 ClickHouse 在彙總資料時的效能優勢 分別紀錄到如何透過 C# 來新增大量資料至 ClickHouse 以及如何查詢 ClickHouse</description></item><item><title>ClickHouse 在彙總資料時的效能優勢</title><link>https://blog.yowko.com/clickhouse-aggregate-query-performance/</link><pubDate>Wed, 03 Jan 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/clickhouse-aggregate-query-performance/</guid><description>ClickHouse 在彙總資料時的效能優勢 前提：雖然本篇筆記中使用了 MySql 做為範例，但主要是因為目前團隊使用 MySql，我對 MySql 相同熟悉點，而不是為了踩 MySql 捧 Clic</description></item><item><title>C# 如何新增資料至 ClickHouse</title><link>https://blog.yowko.com/csharp-insert-clickhouse/</link><pubDate>Wed, 27 Dec 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-insert-clickhouse/</guid><description>C# 如何新增資料至 ClickHouse 最近在評估導入 ClickHouse 的可行性，首先除了測試環境建立之外，最重要的就是要能夠透過 C# 來新增資料，所以今天就來紀錄如何透過 C# 來新增資</description></item><item><title>erlang 降版的步驟</title><link>https://blog.yowko.com/apt-downgrade-erlang/</link><pubDate>Tue, 26 Dec 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/apt-downgrade-erlang/</guid><description>erlang 降版的步驟 這幾天有台與 partner 介接用的 server 異常，造成 rabbitmq 無法連線，團隊在這類的 service 安裝腳本一直透過 ansible 管理，安裝上很順利，只是安裝後 .NET application 卻無法成功連線 (</description></item><item><title>C# 如何快速新增大量資料至 MySQL</title><link>https://blog.yowko.com/csharp-mysql-bulk-insert/</link><pubDate>Fri, 22 Dec 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-mysql-bulk-insert/</guid><description>C# 如何快速新增大量資料至 MySQL 最近在重現系統上遇到的狀況，初步懷疑是資料量過大，造成相關處理效能不佳，而連帶影響到系統後續運作，但這是初步懷疑，</description></item><item><title>將 ASP.NET gRPC 的 Trace 整合至 Grafana Tempo</title><link>https://blog.yowko.com/aspdotnet-grpc-tempo/</link><pubDate>Fri, 01 Dec 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-grpc-tempo/</guid><description>將 ASP.NET gRPC 的 Trace 整合至 Grafana Tempo 之前筆記 將 ASP.NET 的 Trace 整合至 Grafana Tempo 紀錄到如何將 ASP.NET 的 Trace 整合至 Grafana Tempo，今天來看看如何將 ASP.NET gRPC 的 Trace 整合至 Grafana Tempo 過去 trace 相關筆記如下： OpenTracing</description></item><item><title>將 ASP.NET 的 Trace 整合至 Grafana Tempo</title><link>https://blog.yowko.com/aspdotnet-tempo/</link><pubDate>Wed, 29 Nov 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-tempo/</guid><description>將 ASP.NET 的 Trace 整合至 Grafana Tempo 之前筆記 使用 Docker Compose 啟動 Grafana Tempo 紀錄到如何透過 docker compose 快速建立 Grafana Tempo 測試環境，今天來看看如何將 ASP.NET 的 Trace 整合至 Grafana Tempo 過去 trace 相關筆記如下： OpenTracing .NET Core</description></item><item><title>使用 Docker Compose 啟動 Grafana Tempo</title><link>https://blog.yowko.com/docker-compose-grafana-tempo/</link><pubDate>Tue, 28 Nov 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-grafana-tempo/</guid><description>使用 Docker Compose 啟動 Grafana Tempo 過去筆記紀錄到團隊由 OpenTracing 轉換到 OpenTelemetry，其中一個原因是 OpenTracing 的專案已經不再維護，另一個原因是 OpenTelemetry 有提供更多的功能，</description></item><item><title>停用 C# 編譯時特定的警告</title><link>https://blog.yowko.com/csharp-disable-warn/</link><pubDate>Fri, 24 Nov 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-disable-warn/</guid><description>停用 C# 編譯時特定的警告 之前筆記 NuGet restore error NU1803 紀錄了在某次 build fail 後意外發現 Microsoft NuGet team 的 HTTPS everywhere 計劃，接著筆記 NuGet 設定 Insecure HTTP source 是根據 Microsoft NuGet team 的新計劃：HTTPS Everywhere Update 嘗</description></item><item><title>NuGet 設定 Insecure HTTP source</title><link>https://blog.yowko.com/nuget-insecure/</link><pubDate>Thu, 23 Nov 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-insecure/</guid><description>NuGet 設定 Insecure HTTP source 之前筆記 NuGet restore error NU1803 紀錄了在某次 build fail 後意外發現 Microsoft NuGet team 的 HTTPS everywhere 計劃，眼看著計劃中的時程慢慢接近，正在進行相應計劃：包含忽略 NU1803 error 與內部 dns 以</description></item><item><title>Helm 如何讓多個 value file 的 environment 變數合併</title><link>https://blog.yowko.com/helm-merge-environment-variable-value-file/</link><pubDate>Mon, 13 Nov 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/helm-merge-environment-variable-value-file/</guid><description>Helm 如何讓多個 value file 的 environment 變數合併 這是最近在調整 Helm 的時候遇到的問題：團隊為了增加安全性，將原本寫在 config 中的設定值移至 environment variable 中 (也就是從開發人員都可以看</description></item><item><title>使用 C# 設定 Single Active Consumer 讀取 RabbitMQ Streams</title><link>https://blog.yowko.com/csharp-rabbitmq-streams-single-active-consumer/</link><pubDate>Tue, 07 Nov 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-rabbitmq-streams-single-active-consumer/</guid><description>使用 C# 設定 Single Active Consumer 讀取 RabbitMQ Streams RabbitMQ 團隊在 RabbitMQ 3.9 導入 Streams，官網文件大致上說明了有哪些異動與效能改善，以下整理個人理解： 不會像過去 RabbitMQ 在 message 得到 ack 後</description></item><item><title>使用 C# 透過二進位協定存取 RabbitMQ Streams</title><link>https://blog.yowko.com/csharp-rabbitmq-streams-binary/</link><pubDate>Fri, 03 Nov 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-rabbitmq-streams-binary/</guid><description>使用 C# 透過二進位協定存取 RabbitMQ Streams RabbitMQ 團隊在 RabbitMQ 3.9 導入 Streams，官網文件大致上說明了有哪些異動與效能改善，以下整理個人理解： 不會像過去 RabbitMQ 在 message 得到</description></item><item><title>使用 C# 存取 RabbitMQ Streams</title><link>https://blog.yowko.com/csharp-rabbitmq-streams/</link><pubDate>Mon, 30 Oct 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-rabbitmq-streams/</guid><description>使用 C# 存取 RabbitMQ Streams RabbitMQ 團隊在 RabbitMQ 3.9 導入 Streams，官網文件大致上說明了有哪些異動與效能改善，以下整理個人理解： 不會像過去 RabbitMQ 在 message 得到 ack 後就刪除，處</description></item><item><title>如何指定 container 或是 .NET application 的時區</title><link>https://blog.yowko.com/timezone-in-container-or-dotnet/</link><pubDate>Thu, 26 Oct 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/timezone-in-container-or-dotnet/</guid><description>如何指定 container 或是 .NET application 的時區 最近經手的一個專案，使用到外部 partner 提供的 NuGet library，但這個 library 有個問題，就是 DateTime.UtcNow 與 DateTime.Now 同時都有用到，而且沒有提供任何的</description></item><item><title>使用 Container 做為 Ansible Host</title><link>https://blog.yowko.com/ansible-host-container/</link><pubDate>Tue, 24 Oct 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-host-container/</guid><description>使用 Container 做為 Ansible Host 過去在開發 ansible 腳本時為了做完整測試，都是在雲端建立 VM 來進行測試，但是這樣的方式有幾個缺點： 建立 VM 需要花費時間 VM 的建立沒有額外的 source</description></item><item><title>將 ASP.NET Core 的 log 透過 Grafana Loki 來顯示</title><link>https://blog.yowko.com/aspdotnet-loki/</link><pubDate>Mon, 04 Sep 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-loki/</guid><description>將 ASP.NET Core 的 log 透過 Grafana Loki 來顯示 之前筆記 使用 Docker Compose 啟動 Grafana Loki 提到過去幾年時間都是透過 Elastic Stack 來處理 log 集中化，因為團隊正在評估下一代產品所使用的 technical stack 於是將 Grafana Loki</description></item><item><title>為 ASP.NET Core 建立 Multi-Platform image</title><link>https://blog.yowko.com/docker-multi-platform-aspdotnetcore/</link><pubDate>Tue, 22 Aug 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-multi-platform-aspdotnetcore/</guid><description>為 ASP.NET Core 建立 Multi-Platform image 最近公司正在逐步汰換使用年限到期的電腦：由 MacBook Pro (intel) 換為 MacBook Pro (M2 Pro)，CPU 架構從 x86/x64 改為 arm64，許多軟體工具都需要改用特定版</description></item><item><title>Grafana Loki 搭配 Fluent Bit</title><link>https://blog.yowko.com/grafana-loki-fluentbit/</link><pubDate>Tue, 15 Aug 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grafana-loki-fluentbit/</guid><description>Grafana Loki 搭配 Fluent Bit 之前筆記 使用 Docker Compose 啟動 Grafana Loki 紀錄如何使用 docker compose 快速啟動 Grafana Loki 環境，其中使用的 log 蒐集器是 Grafana 預設的 Promtail，不過 Promtail 功能上只專注在把 log</description></item><item><title>使用 Docker Compose 啟動 Grafana Loki</title><link>https://blog.yowko.com/docker-compose-grafana-loki/</link><pubDate>Tue, 08 Aug 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-grafana-loki/</guid><description>使用 Docker Compose 啟動 Grafana Loki 過去幾年時間都是透過 Elastic Stack 來處理 log 集中化，從一開始使用 ELK (Elasticsearch, Logstash , Kibana) 到後來使用 EFK (Elasticsearch , Fluentd , Kibana) 到目前的 EFK (Elasticsearch, Fluent Bit , Kibana)，其中改</description></item><item><title>使用 Coravel 來進行 Schedule Job</title><link>https://blog.yowko.com/coravel/</link><pubDate>Fri, 04 Aug 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/coravel/</guid><description>使用 Coravel 來進行 Schedule Job 最近有個舊專案 (.NET Core 2.1) 需要增加功能，升級 framework 是絕對必要的，只是其中一段用來執行每天更新 cache 的背景作業引起了我的興趣，我忘記為什麼當</description></item><item><title>使用 Quartz.NET 來進行 Schedule Job</title><link>https://blog.yowko.com/quartz-net/</link><pubDate>Thu, 03 Aug 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/quartz-net/</guid><description>使用 Quartz.NET 來進行 Schedule Job 最近有個舊專案 (.NET Core 2.1) 需要增加功能，升級 framework 是絕對必要的，只是其中一段用來執行每天更新 cache 的背景作業引起了我的興趣，我忘記為什麼當</description></item><item><title>使用 Hangfire 來進行 Schedule Job</title><link>https://blog.yowko.com/hangfire/</link><pubDate>Wed, 02 Aug 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/hangfire/</guid><description>使用 Hangfire 來進行 Schedule Job 最近有個舊專案 (.NET Core 2.1) 需要增加功能，升級 framework 是絕對必要的，只是其中一段用來執行每天更新 cache 的背景作業引起了我的興趣，我忘記為什麼當</description></item><item><title>使用原生 HostedService 來進行 Schedule Job</title><link>https://blog.yowko.com/hostedservice-schedule-job/</link><pubDate>Tue, 01 Aug 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/hostedservice-schedule-job/</guid><description>使用原生 HostedService 來進行 Schedule Job 最近有個舊專案 (.NET Core 2.1) 需要增加功能，升級 framework 是絕對必要的，只是其中一段用來執行每天更新 cache 的背景作業引起了我的興趣，我忘記為什</description></item><item><title>jq 合併多個 json</title><link>https://blog.yowko.com/jq-merge-multiple-json/</link><pubDate>Mon, 31 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/jq-merge-multiple-json/</guid><description>jq 合併多個 json 之前筆記 使用 jq 達成覆寫相同 json key 的效果 紀錄到如何使用 jq 處理 json 讓 config 可以在不同環境有不同設定值，使用上沒遇到問題，只是最近想要強化部份</description></item><item><title>GitHub Action 自動建置 Hugo 網站並部署至 Github Pages</title><link>https://blog.yowko.com/github-pages-github-actions-hugo/</link><pubDate>Sun, 23 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/github-pages-github-actions-hugo/</guid><description>GitHub Action 自動建置 Hugo 網站並部署至 Github Pages 之前筆記 使用 markdown 搭配 Hugo 建立網站 有提到打算透過 markdown 與 hugo 來為學長建立個人網站，之前筆記 使用 markdown 搭配 Hugo 建立網站 已經在 local 環境</description></item><item><title>使用 markdown 搭配 Hugo 建立網站</title><link>https://blog.yowko.com/markdown-hugo/</link><pubDate>Sat, 22 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/markdown-hugo/</guid><description>使用 markdown 搭配 Hugo 建立網站 最近大學時的學長準備到師大去當老師，左思又右想不知道該送什麼慶賀，後來想起過去學長曾經想要使用 Google Sites 建立個人形象網站，但一</description></item><item><title>透過 Ansible 使用 APT 安裝指定版本套件</title><link>https://blog.yowko.com/ansible-apt-specific-version/</link><pubDate>Mon, 17 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-apt-specific-version/</guid><description>透過 Ansible 使用 APT 安裝指定版本套件 這是從之前筆記 透過 Ansible 加入 GPG key 的 APT repository 延伸而來，將使用 ansible 搭配 apt 來安裝 erlang 與 RabbitMQ 的指定版本，主要流程與步驟是參考 RabbitMQ 官網：I</description></item><item><title>透過 Ansible 加入 GPG key 的 APT repository</title><link>https://blog.yowko.com/ansible-apt-repository-gpg/</link><pubDate>Fri, 14 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-apt-repository-gpg/</guid><description>透過 Ansible 加入 GPG key 的 APT repository 最近正在將過去寫過的 Ansible 腳本改寫：由 CentOS 轉為 Ubuntu，因為 package management 工具不同，所以主要就是這部份改動較大，其他安裝流程大致沒變</description></item><item><title>APT 安裝指定版本套件</title><link>https://blog.yowko.com/apt-specific-version/</link><pubDate>Wed, 12 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/apt-specific-version/</guid><description>APT 安裝指定版本套件 原則上服務的版本升級應該都是樂見的，降低安全漏洞曝露風險、增加新的功能、避免日後跳版升級困難，除非有什麼特殊因素不能升級，</description></item><item><title>使用 C# 搭配 Avro 存取 Kafka</title><link>https://blog.yowko.com/csharp-avro-kafka/</link><pubDate>Mon, 10 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-avro-kafka/</guid><description>使用 C# 搭配 Avro 存取 Kafka 之前筆記 使用 Docker Compose 啟動 Avro Schema Registry 紀錄到如何使用 docker compose 來快速建立 Kafka 與 Schema Registry，當然沒事不會特別建立環境，今天就進入重點，紀</description></item><item><title>使用 Docker Compose 啟動 Avro Schema Registry</title><link>https://blog.yowko.com/docker-compose-avro-schema-registry/</link><pubDate>Wed, 05 Jul 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-avro-schema-registry/</guid><description>使用 Docker Compose 啟動 Avro Schema Registry 過去在使用 Kafka 時一直都沒有搭配 Avro 做序列化與反序列化，一來是偷懶，二來是都直接使用字串傳輸也方便，剛好最近看到 Kafka 序列化的介紹，</description></item><item><title>如何在 .NET6 上指定 HttpClient 使用 HTTP/2</title><link>https://blog.yowko.com/httpclient-http2/</link><pubDate>Tue, 30 May 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-http2/</guid><description>如何在 .NET6 上指定 HttpClient 使用 HTTP/2 之前筆記 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 紀錄到如何使用 ASP.NET Core 7 加入的 JSON 轉碼功能：可以讓 gRPC service 也可以透過 rest api 的方式來呼叫，所以就有了 HttpClient</description></item><item><title>允許 Kibana 可以匯出並下載 CSV</title><link>https://blog.yowko.com/kibana-csv/</link><pubDate>Sat, 20 May 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/kibana-csv/</guid><description>允許 Kibana 可以匯出並下載 CSV 最近在為外部團隊建立 EFK 讓部份查詢不用開發人員介入，保留開發能量為更有價值的功能做準備 團隊在 Production 環境中，有嚴格的權限管理，</description></item><item><title>使用 Docker Compose 建立啟用 X-Pack 的 Elasticsearch 與 Kibana</title><link>https://blog.yowko.com/docker-compose-elasticsearch-kibana-x-pack/</link><pubDate>Fri, 19 May 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-elasticsearch-kibana-x-pack/</guid><description>使用 Docker Compose 建立啟用 X-Pack 的 Elasticsearch 與 Kibana EFK (Elasticsearch Fluentd/Fluent-bit Kibana) 導入團隊正式使用已經好幾年，不同需求的筆記也有幾篇，只是過去都是 focus 在 EFK 的核心功能與配套整合上，剛好最近有個</description></item><item><title>ASP.NET Core 的 gRPC-Web 功能</title><link>https://blog.yowko.com/aspdotnetcore-grpc-web/</link><pubDate>Fri, 05 May 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnetcore-grpc-web/</guid><description>ASP.NET Core 的 gRPC-Web 功能 之前筆記 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 紀錄到如何使用 Transcoding 讓 gRPC service 同時提供 web rest api 的功能，過程中在 Microsoft 官方文件 gRPC JSON transcoding in ASP.NET Core gRPC apps 看到 Microsoft 官方將 gRPC JSON transcoding 與</description></item><item><title>Ansible 無法解析 module</title><link>https://blog.yowko.com/ansible-cloudnot-resolve-module/</link><pubDate>Thu, 04 May 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-cloudnot-resolve-module/</guid><description>Ansible 無法解析 module 這是前幾天使用 Helm 安裝 elastic filebeat 時遇到的狀況，除了 production 的其他環境都相當順利，原本 擔心 template 在 generate helm value file 時可能會因為 production 用的帳密，複雜度較高，會出現</description></item><item><title>使用 Google Api Gateway 為 Google Cloud Functions 加上 API Key 保護</title><link>https://blog.yowko.com/gcp-secure-cloud-function-with-api-key/</link><pubDate>Fri, 28 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/gcp-secure-cloud-function-with-api-key/</guid><description>使用 Google Api Gateway 為 Google Cloud Functions 加上 API Key 保護 這是之前筆記 Google Cloud Functions 發送訊息到 Google Cloud Pub/Sub 的延伸，因為 Google Cloud Functions 不適合也沒辦法直接公開讓外部服務呼叫，所以要想個辦法來為 Google</description></item><item><title>使用 Postman 來發送 gRPC request</title><link>https://blog.yowko.com/postman-grpc/</link><pubDate>Fri, 28 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/postman-grpc/</guid><description>使用 Postman 來發送 gRPC request 過去在測試 gRPC 時大部份都是依賴 BloomRPC，畢竟 grpcurl 還是語法上還是沒辦法像 GUI 一樣直覺，只是今年要更新 BloomRPC 時發現已停止維護，雖然</description></item><item><title>再探 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 (Streaming)</title><link>https://blog.yowko.com/grpc-aspdotnetcore7-json-streaming/</link><pubDate>Thu, 27 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-aspdotnetcore7-json-streaming/</guid><description>再探 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 (Streaming) 之前筆記 再探 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 紀錄到如何使用 ASP.NET Core 7 加入的 JSON 轉碼功能讓 gRPC service 與 rest api 有接近的使用體驗：使用 POST 方法搭</description></item><item><title>Google Cloud Functions 發送訊息到 Google Cloud Pub/Sub</title><link>https://blog.yowko.com/gcp-cloud-function-pubsub/</link><pubDate>Wed, 26 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/gcp-cloud-function-pubsub/</guid><description>Google Cloud Functions 發送訊息到 Google Cloud Pub/Sub 因為公司部份產品建置在 SaaS 基礎上，但這些 SaaS 都有自己維護的時間跟計劃，所以為了避免 SaaS 維護造成產品服務異常，所以想要將 SaaS 的相</description></item><item><title>再探 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能</title><link>https://blog.yowko.com/grpc-aspdotnetcore7-json-post/</link><pubDate>Wed, 26 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-aspdotnetcore7-json-post/</guid><description>再探 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 之前筆記 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 紀錄到如何使用 ASP.NET Core 7 加入的 JSON 轉碼功能：可以讓 gRPC service 也可以透過 rest api 的方式來呼叫。 不過眼尖</description></item><item><title>gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 (macOS)</title><link>https://blog.yowko.com/grpc-aspdotnetcore7-json-macos/</link><pubDate>Fri, 14 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-aspdotnetcore7-json-macos/</guid><description>gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 (macOS) 在之前筆記 gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 紀錄到如何使用 ASP.NET Core 7 加入的 JSON 轉碼功能：可以讓 gRPC service 也可以透過 rest api 的方式來呼叫 但由於該功</description></item><item><title>gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能</title><link>https://blog.yowko.com/grpc-aspdotnetcore7-json/</link><pubDate>Tue, 11 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-aspdotnetcore7-json/</guid><description>gRPC 在 ASP.NET Core 7 的 JSON 轉碼功能 .NET 7 跟過去幾個 .NET 版本一樣有不少效能的改善，也增加了好幾個語法糖以及功能，但因為單數版本的關係屬於 Standard Term Support (STS)：只有</description></item><item><title>Filebeat 自訂 Elasticsearch index name</title><link>https://blog.yowko.com/filebeat-custom-elasticsearch-index-name/</link><pubDate>Mon, 10 Apr 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/filebeat-custom-elasticsearch-index-name/</guid><description>Filebeat 自訂 Elasticsearch index name 這個是之前筆記 使用 filebeat 將 Redis slowlog 存至 Elasticsearch 遇到的狀況，筆記使用當時最新版本： 8.6.1，但團隊在部份環境還在使用 7.X 造成 index 名稱雜亂 filebeat 7.X 預設 index</description></item><item><title>Ansible 安裝 Kafka Cluster</title><link>https://blog.yowko.com/ansible-kafka-cluster/</link><pubDate>Mon, 27 Feb 2023 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-kafka-cluster/</guid><description>Ansible 安裝 Kafka Cluster 之前筆記 Ubuntu 安裝 Kafka KRaft cluster 紀錄到在 Ubuntu 上安裝 KRaft mode (不使用 ZooKeeper) 的 Kafka cluster，雖然內容大致算清楚，但畢竟在切換不同 host 時需要自行調整，彈性不</description></item><item><title>Ubuntu 安裝 Kafka KRaft cluster</title><link>https://blog.yowko.com/kafka-cluster-kraft-ubuntu/</link><pubDate>Thu, 23 Feb 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-cluster-kraft-ubuntu/</guid><description>Ubuntu 安裝 Kafka KRaft cluster 之前筆記 在 CentOS 上安裝 Apache Kafka cluster 紀錄到如何在 CentOS 上安裝基於 Zookeeper 的 Kafka cluster，最近團隊正在準備將 CentOS 以 Ubuntu 取代，另外也曾在 試試不依賴 ZooKeeper 的 Kafka 測</description></item><item><title>Ansible 直接將 template render 完成的結果作為 input</title><link>https://blog.yowko.com/ansible-template-result-as-input/</link><pubDate>Wed, 22 Feb 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-template-result-as-input/</guid><description>Ansible 直接將 template render 完成的結果作為 input 過去使用 ansible template 都是將 render 的結果暫存在某個資料夾中，需要套用的時候再指定這個暫存結果檔位置，雖然這樣的方式可以直接看到</description></item><item><title>使用 filebeat 將 Redis slowlog 存至 Elasticsearch</title><link>https://blog.yowko.com/redis-slowlog-elasticsearch/</link><pubDate>Fri, 10 Feb 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/redis-slowlog-elasticsearch/</guid><description>使用 filebeat 將 Redis slowlog 存至 Elasticsearch 產品功能愈來愈多，為了存取速度的考量，對於 redis 的依存度也愈來愈高，目前團隊的 redis 是所有 application 共用一座 redis cluster，但 hash slot 的使用</description></item><item><title>如何在 Kibana 8 與 Elasticsearch 8 上看到資料</title><link>https://blog.yowko.com/discover-elasticsearch8-kibana8/</link><pubDate>Thu, 09 Feb 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/discover-elasticsearch8-kibana8/</guid><description>如何在 Kibana 8 與 Elasticsearch 8 上看到資料 最近打算將 redis slowlog 倒進 Elasticsearch 中 (詳細資料可以參考 使用 filebeat 將 Redis slowlog 存至 Elasticsearch)，讓開發團隊可以更快速方便的查</description></item><item><title>使用 C# 訂閱 GKE 更新通知</title><link>https://blog.yowko.com/csharp-subscribe-gke-update/</link><pubDate>Mon, 30 Jan 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-subscribe-gke-update/</guid><description>使用 C# 訂閱 GKE 更新通知 目前團隊的產品在 production 有不少各式各樣的監控：有針對網站的 health check、有針對 log 異常情境的、有針對 kubernetes 上 application 運行狀態的&amp;helli</description></item><item><title>同時訂閱多個 Kafka topic</title><link>https://blog.yowko.com/subscribe-multiple-kafka-topics/</link><pubDate>Wed, 18 Jan 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/subscribe-multiple-kafka-topics/</guid><description>同時訂閱多個 Kafka topic 隨著產品的發展，團隊所建立的 application 也逐漸變多，不同 application 的溝通也變得複雜，為了避免直接相依，一部份的功能是透 kafka 來交換資料，但如果不加</description></item><item><title>在 CentOS 上使用 Kafkacat (更新) : 使用 container</title><link>https://blog.yowko.com/kafkacat-container/</link><pubDate>Fri, 02 Sep 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafkacat-container/</guid><description>在 CentOS 上使用 Kafkacat (更新) : 使用 container 今天在新建環境進行全面測試時，其中一個環節是確認 kafka 的連線狀況，如同之前筆記 在 CentOS 上使用 Kafkacat 提到的：不想因為需要 kafka cli 而</description></item><item><title>NuGet restore error NU1803</title><link>https://blog.yowko.com/nuget-restore-nu1803/</link><pubDate>Fri, 26 Aug 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-restore-nu1803/</guid><description>NuGet restore error NU1803 2023/11/26 update: Microsoft NuGet team 的新計劃：HTTPS Everywhere Update，筆記可以參考 NuGet 設定 Insecure HTTP source 或是 停用 C# 編譯時特定的警告 原本團隊使用 .NET SDK 6.0.201 ，考慮到近期幾個更</description></item><item><title>關於 gRPC 的 Load Test</title><link>https://blog.yowko.com/grpc-load-test/</link><pubDate>Fri, 29 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-load-test/</guid><description>關於 gRPC 的 Load Test 搜尋資訊的過程中，偶爾看到 Load testing for gRPC - the case，分析用來針對 gRPC service 做 load test 的三種方式： Gatling with gRPC plugin. 使用 scala 來建立測試腳本 支援四種 gRPC serv</description></item><item><title>使用 Gatling 來對 gRPC 做負載測試</title><link>https://blog.yowko.com/grpc-load-test-gatling/</link><pubDate>Thu, 28 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-load-test-gatling/</guid><description>使用 Gatling 來對 gRPC 做負載測試 關於 Gatling 先決條件：安裝 64bits OpenJDK LTS：8,11,17 &amp;gt; 其他 JVM 像是 JDK 12, client JVMs, 32bits systems or OpenJ9 都不支援 Gatling 3.7 開始支援 Java, Kotlin and Scala 來撰寫測試腳本 &amp;gt;</description></item><item><title>GCE 透過 Cloud VPN mount 不同 VPC networks 中的 Filestore</title><link>https://blog.yowko.com/gce-mount-other-vpc-filestore/</link><pubDate>Mon, 25 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/gce-mount-other-vpc-filestore/</guid><description>GCE 透過 Cloud VPN mount 不同 VPC networks 中的 Filestore 目前團隊 production 上 GKE 資料都是儲存在 Filestore 上，最近有計劃使用儲存在 Filestore 的 log 內容來做後續處理，大致概念是將 log 集中至某一台 server (預計會</description></item><item><title>安裝 Gatling</title><link>https://blog.yowko.com/gatling-install/</link><pubDate>Tue, 12 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/gatling-install/</guid><description>安裝 Gatling 原本想要使用 Gatling 來進行 gRPC 的 load test，但光安裝 Gatling 就不是很理解，所以先了解並紀錄一下 Gatling 的基本安裝，我認為應該是我平常熟悉的開發語言跟工具不</description></item><item><title>使用 k6 來對 gRPC 做負載測試</title><link>https://blog.yowko.com/grpc-load-test-k6/</link><pubDate>Fri, 08 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-load-test-k6/</guid><description>使用 k6 來對 gRPC 做負載測試 第一次聽到 k6 是 twMVC 的活動宣傳 讓我們用 k6 來進行壓測吧，雖然後來時間因素沒有到場聽到實際應用的分享，但為了不要與技術潮流脫節</description></item><item><title>使用 ghz 來對 gRPC 做負載測試</title><link>https://blog.yowko.com/grpc-load-test-ghz/</link><pubDate>Mon, 04 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-load-test-ghz/</guid><description>使用 ghz 來對 gRPC 做負載測試 最近興起想要比較幾個 gRPC load test 工具的使用心得，這才發現過去在建立 gRPC service 時因為專案時間壓力並沒有特別紀錄 ghz 的用法，後來工作也慢</description></item><item><title>如何讓 ASP.NET Core 3.1 以 amd64 image 在 arm 晶片 (M1) 上執行</title><link>https://blog.yowko.com/aspdotnet-core-31-amd64-arm/</link><pubDate>Sun, 03 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-31-amd64-arm/</guid><description>如何讓 ASP.NET Core 3.1 以 amd64 image 在 arm 晶片 (M1) 上執行 公司電腦準備做周期性汰換，所以開始評估搭載 arm cpu (M1) 的 macbook pro，經過一輪測試後，絕大部份工具都能正常使用，而團</description></item><item><title>在 Linux 上確認 dll 版本</title><link>https://blog.yowko.com/linux-dll-version/</link><pubDate>Sat, 02 Apr 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/linux-dll-version/</guid><description>在 Linux 上確認 dll 版本 這是為了解決 ASP.NET Core 3.1 的 amd64 image 無法在 arm 晶片 (M1) 上執行而衍生的問題 我嘗試在 ASP.NET Core 3.1 的 application 中升級一個 NuGet package 以套用在 .NET 5 以後加入的功能，為了確認</description></item><item><title>透過 container 啟動 Pulsar Manager</title><link>https://blog.yowko.com/pulsar-manager/</link><pubDate>Sun, 13 Mar 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/pulsar-manager/</guid><description>透過 container 啟動 Pulsar Manager Message Queue 在正式服務上運行時大部份不會啟用 GUI，甚至像 kafka 原生就沒有提供，不過開發階段有 GUI 來協助確認訊息或是設定還是便利不少 RabbitMQ 有官方</description></item><item><title>RabbitMQ 關於寫入部份 Queue 的權限設定</title><link>https://blog.yowko.com/rabbitmq-topic-permission-queue/</link><pubDate>Sat, 12 Mar 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-topic-permission-queue/</guid><description>RabbitMQ 關於寫入部份 Queue 的權限設定 之前筆記 RabbitMQ 為不同帳號設定不同 Queue 權限 紀錄到讓不同 user 有不同權限，當時的情境是以讀取資料為例，最近同事想要為寫入也加上不</description></item><item><title>在 ASP.NET Core 中從 Apache Pulsar 接收訊息 (Reader)</title><link>https://blog.yowko.com/aspdotnet-core-pulsar-reader/</link><pubDate>Fri, 11 Mar 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-pulsar-reader/</guid><description>在 ASP.NET Core 中從 Apache Pulsar 接收訊息 (Reader) Apache Pulsar 常常被拿來與 Kafka 做比較，孰優孰劣常常也是各自擁護者爭相討論的內容，以下條列幾項選擇 Pulsar 的正面意見 同時支援即時訊息與訊</description></item><item><title>在 ASP.NET Core 中從 Apache Pulsar 接收訊息</title><link>https://blog.yowko.com/aspdotnet-core-pulsar-consumer/</link><pubDate>Thu, 10 Mar 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-pulsar-consumer/</guid><description>在 ASP.NET Core 中從 Apache Pulsar 接收訊息 Apache Pulsar 常常被拿來與 Kafka 做比較，孰優孰劣常常也是各自擁護者爭相討論的內容，以下條列幾項選擇 Pulsar 的正面意見 同時支援即時訊息與訊息</description></item><item><title>在 ASP.NET Core 中發送訊息至 Apache Pulsar</title><link>https://blog.yowko.com/aspdotnet-core-pulsar-producer/</link><pubDate>Tue, 08 Mar 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-pulsar-producer/</guid><description>在 ASP.NET Core 中發送訊息至 Apache Pulsar Apache Pulsar 常常被拿來與 Kafka 做比較，孰優孰劣常常也是各自擁護者爭相討論的內容，以下條列幾項選擇 Pulsar 的正面意見 同時支援即時訊息與訊息</description></item><item><title>使用 Nexus 來建立 yum repository</title><link>https://blog.yowko.com/nexus-yum-repository/</link><pubDate>Fri, 25 Feb 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/nexus-yum-repository/</guid><description>使用 Nexus 來建立 yum repository 之前筆記 使用 yum 下載包含相依套件的完整 package 紀錄到如何將 package 與其相依 package 一次完整下載，但筆記最後也提到透過逐一安裝 package 實在太沒效率，所以</description></item><item><title>使用 yum 下載包含相依套件的完整 package</title><link>https://blog.yowko.com/yum-download-package-with-dependency/</link><pubDate>Thu, 24 Feb 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/yum-download-package-with-dependency/</guid><description>使用 yum 下載包含相依套件的完整 package production 環境上的所有 server 因為資安問題沒有開放主動對外連線，連帶著 package 的安裝就沒辦法透過公用 yum repository 的方式來進行，所以興起自建</description></item><item><title>Build 個可以自動建立 topic 又不需依賴 ZooKeeper 的 Kafka image 更新</title><link>https://blog.yowko.com/container-kafka-without-zookeeper-create-topic-update/</link><pubDate>Fri, 18 Feb 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/container-kafka-without-zookeeper-create-topic-update/</guid><description>Build 個可以自動建立 topic 又不需依賴 ZooKeeper 的 Kafka image 更新 之前筆記 Build 個可以自動建立 topic 又不需依賴 ZooKeeper 的 Kafka image 紀錄到如何使用 docker compose 啟動 kraft mode (不依賴 zookeeper) 的 kafka，並在 kafka</description></item><item><title>Build 個可以自動建立 topic 又不需依賴 ZooKeeper 的 Kafka image</title><link>https://blog.yowko.com/container-kafka-without-zookeeper-create-topic/</link><pubDate>Tue, 15 Feb 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/container-kafka-without-zookeeper-create-topic/</guid><description>Build 個可以自動建立 topic 又不需依賴 ZooKeeper 的 Kafka image 之前筆記 使用 Docker 啟動不依賴 ZooKeeper 的 Kafka 紀錄到如何使用 docker compose 啟動 kraft mode (不依賴 zookeeper) 的 kafka 為了讓 kraft mode 的 kafka 更符合團隊的使用情境</description></item><item><title>使用 Docker 啟動不依賴 ZooKeeper 的 Kafka</title><link>https://blog.yowko.com/docker-kafka-without-zookeeper/</link><pubDate>Mon, 07 Feb 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-kafka-without-zookeeper/</guid><description>使用 Docker 啟動不依賴 ZooKeeper 的 Kafka 之前筆記 試試不依賴 ZooKeeper 的 Kafka 紀錄到如何使用 Kafka 的 Preview Release (KRaft mode) 功能：不再依賴 ZooKeeper，雖然已經是大幅降低了安裝與設定的難</description></item><item><title>試試不依賴 ZooKeeper 的 Kafka</title><link>https://blog.yowko.com/kafka-without-zookeeper/</link><pubDate>Fri, 28 Jan 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-without-zookeeper/</guid><description>試試不依賴 ZooKeeper 的 Kafka Kafka 的優異效能一直為大家所稱道，但建置部署與管理的難度也相當高，其中對於 ZooKeeper 的直接相依，不僅讓 Kafka 變得笨重也因為 ZooKeeper 的分區特性而限縮</description></item><item><title>啟動 ASP.NET Core 時傳入參數</title><link>https://blog.yowko.com/aspdotnet-core-pass-parameters/</link><pubDate>Sat, 22 Jan 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-pass-parameters/</guid><description>啟動 ASP.NET Core 時傳入參數 團隊中有多個專案都有使用相同 source code，不過可以依據 config 不同而執行著不同任務的特性 sre 在處理這種類型的 application 時都是 build 一份 image</description></item><item><title>ASP.NET Core Configuration 中的 array 沒有正確覆寫</title><link>https://blog.yowko.com/aspdotnet-core-config-array-not-override/</link><pubDate>Fri, 21 Jan 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-config-array-not-override/</guid><description>ASP.NET Core Configuration 中的 array 沒有正確覆寫 之前筆記 在 ASP.NET Core Configuration 中使用 array 中紀錄到如何在 config 中使用 array，不過在使用後發現有些限制，趁著這個機會紀錄一下 基本環境說明</description></item><item><title>在 ASP.NET Core Configuration 中使用 array</title><link>https://blog.yowko.com/aspdotnet-core-config-array/</link><pubDate>Thu, 20 Jan 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-config-array/</guid><description>在 ASP.NET Core Configuration 中使用 array 這是之前專案遇到的需求：在 config 中設定多個值來供 application 使用，印象中之前有用過但沒找到筆記，順便嘗試一下不同做法，筆記一下 基本環境說明</description></item><item><title>MongoDB cli 中的 try catch</title><link>https://blog.yowko.com/mongo-tr-catch/</link><pubDate>Sun, 16 Jan 2022 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongo-tr-catch/</guid><description>MongoDB cli 中的 try catch 這是在調整團隊 MongoDB instance 時遇到的問題：某一隻 js 會在 db init 時執行 create user 的動作，完成後會繼續建立其他 collection 跟 index，但因為這個 user 是跨 db 的 user ，已</description></item><item><title>Bash 中的 try/catch</title><link>https://blog.yowko.com/bash-try-catch/</link><pubDate>Thu, 30 Dec 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/bash-try-catch/</guid><description>Bash 中的 try/catch 前幾天在做某個測試性專案，過程中調整 mongodb 的 automation build script 時遇到個狀況：module 會在 init 時執行 create role 跟 user，但有些 role 與 user 會被重複建立而出錯，</description></item><item><title>不啟動 container 複製檔案到 host 上</title><link>https://blog.yowko.com/docker-copy-file/</link><pubDate>Wed, 29 Dec 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-copy-file/</guid><description>不啟動 container 複製檔案到 host 上 從 container 複製檔案到 host 上，這樣的需求不算少見但也不到常用的地步，畢竟如果有常態性取得 container 中檔案的需求就會透過 volume mount 的方式來處理 不</description></item><item><title>使用 grep 搜尋多個值</title><link>https://blog.yowko.com/grep-multiple-values/</link><pubDate>Fri, 17 Dec 2021 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/grep-multiple-values/</guid><description>使用 grep 搜尋多個值 這是在 production 查資料時遇到的需求：想要從 log file 中同時查出符合 關鍵字1 或是 關鍵字2 的資料，相信熟悉的朋友一定可以馬上回答出這個需求的正</description></item><item><title>使用 jq 將多個檔案內容組成一份 key/value json</title><link>https://blog.yowko.com/jq-merge-files-with-filename/</link><pubDate>Fri, 17 Dec 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/jq-merge-files-with-filename/</guid><description>使用 jq 將多個檔案內容組成一份 key/value json 之前筆記 使用 jq 達成覆寫相同 json key 的效果 紀錄到使用 jq 來處理合併兩個檔案內容時：相同的 key 覆寫的做法，今天要來紀錄更</description></item><item><title>透過 docker compose 啟動 RabbitMQ cluster</title><link>https://blog.yowko.com/docker-compose-rabbitmq-cluster/</link><pubDate>Fri, 26 Nov 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-rabbitmq-cluster/</guid><description>透過 docker compose 啟動 RabbitMQ cluster 最近在驗證整合 RabbitMQ cluster 的相關功能，常常要重新建立 RabbitMQ cluster，不過直接重新安裝 RabbitMQ cluster 還是覺得耗時，所以興起想要透過 docker compose 快速啟動</description></item><item><title>使用 jq 達成覆寫相同 json key 的效果</title><link>https://blog.yowko.com/jq-merge-json/</link><pubDate>Tue, 16 Nov 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/jq-merge-json/</guid><description>使用 jq 達成覆寫相同 json key 的效果 過去網站開發需要的 config 都是透過 Configuration in ASP.NET Core 來處理，雖然沒有用過其他工具，不過使用上沒遇到什麼問題，也就一直延用至今 過去</description></item><item><title>Ansible 變數不存在時指定預設值</title><link>https://blog.yowko.com/ansible-vars-default/</link><pubDate>Tue, 09 Nov 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-vars-default/</guid><description>Ansible 變數不存在時指定預設值 這個技巧之前就已經頻繁用在專案上了，原本也以為掌握度相當高，不過隔了好陣子沒有寫 ansible script，當下要用時卻又腦袋打</description></item><item><title>為進到 RabbitMQ 的 message 加上時間</title><link>https://blog.yowko.com/rabbitmq-message-timestamp/</link><pubDate>Mon, 08 Nov 2021 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-message-timestamp/</guid><description>為進到 RabbitMQ 的 message 加上時間 同事懷疑某個外部的 RabbitMQ 訊息有 delay 的狀況，想要釐清到底是外部 RabbitMQ 發送慢了還是 application 處理慢了，所以打算在 RabbitMQ 上為每個 message 加上進 queue 的時間，供</description></item><item><title>RabbitMQ 無法啟用想要的 plugin</title><link>https://blog.yowko.com/rabbitmq-plugins-not-found/</link><pubDate>Mon, 08 Nov 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-plugins-not-found/</guid><description>RabbitMQ 無法啟用想要的 plugin 最近有個需求打算從 RabbitMQ 來進行，需要在 RabbitMQ 安裝額外的 plugin，但熟悉的指令卻出現意外的回應，快速筆記一下處理方式 執行指令 rabbitmq-plugins enable</description></item><item><title>取得 Kafka 與 zookeeper 版本</title><link>https://blog.yowko.com/kafka-zookeeper-version/</link><pubDate>Fri, 05 Nov 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-zookeeper-version/</guid><description>取得 Kafka 與 zookeeper 版本 雖然各個環境的軟體都是使用 ansible 腳本來安裝設定的，但畢竟各個環境的執行時間有些落差，後續可能有版本更新的狀況，所以還是直接至環境上</description></item><item><title>放大 kafka message size</title><link>https://blog.yowko.com/kafka-max-message-size/</link><pubDate>Fri, 05 Nov 2021 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-max-message-size/</guid><description>放大 kafka message size 今天 prod 監控噴出大量 Message size too large 的錯誤訊息，訊息內容很明確：就是傳到 kafka 的 message 太大 (預設為 1048588 約 1MB)，趁著這個機會紀錄一下 調整方式與使用方</description></item><item><title>Kibana 在 Visualize table buckets 中從 field 取部份值做為 row</title><link>https://blog.yowko.com/kibana-visualize-table-buckets-substring-field/</link><pubDate>Mon, 01 Nov 2021 00:39:29 +0800</pubDate><guid>https://blog.yowko.com/kibana-visualize-table-buckets-substring-field/</guid><description>Kibana 在 Visualize table buckets 中從 field 取部份值做為 row 為了後續 support 需要，想要在原本的 dashboard 中加上一個 visualize table 用來提供更詳細的資訊，原本也不是太困難的事，只是這次需要用來 group by 的</description></item><item><title>取得 kafka 運行中的設定值</title><link>https://blog.yowko.com/kafka-current-config/</link><pubDate>Tue, 26 Oct 2021 00:39:29 +0800</pubDate><guid>https://blog.yowko.com/kafka-current-config/</guid><description>取得 kafka 運行中的設定值 kafka 的 config 預設儲存在 kafka 根目錄/config/server.properties ，一般情境下可以直接查看該檔案來取得設定值，但</description></item><item><title>RedLock.net 使用 StackExchange.Redis 的連線設定</title><link>https://blog.yowko.com/redlock-stackexchange-redis-connection/</link><pubDate>Mon, 25 Oct 2021 00:39:29 +0800</pubDate><guid>https://blog.yowko.com/redlock-stackexchange-redis-connection/</guid><description>RedLock.net 使用 StackExchange.Redis 的連線設定 最近專案發現在大量並行處理時會出現重複建立資料的狀況，因為這個專案本來就是設計來進行分散式作業，同時會建立好幾個 instance 在不同的</description></item><item><title>ASP.NET Core 中 StackExchange.Redis 的註冊與使用方式</title><link>https://blog.yowko.com/stackexchange-redis-in-aspdotnet-core/</link><pubDate>Fri, 22 Oct 2021 00:39:29 +0800</pubDate><guid>https://blog.yowko.com/stackexchange-redis-in-aspdotnet-core/</guid><description>ASP.NET Core 註冊 StackExchange.Redis 的方式 最近有個專案需要用到 RedLock.net，在做可行性評估時發現 StackExchange.Redis 有幾個註冊方式自己都沒有紀錄過，趁著工作空檔簡單筆記一下 基</description></item><item><title>個別 HttpClient request 使用不同 Timeout 時間</title><link>https://blog.yowko.com/httpclient-different-timeout/</link><pubDate>Wed, 25 Aug 2021 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-different-timeout/</guid><description>個別 HttpClient request 使用不同 Timeout 時間 在透過 HttpClient 與 partner 介接時，常會使用同一個 named-client 來建立 instance，這也是可以共用 pool 與 存留期設定的推薦方式，雖然可以在 AddHttpClient 時加上</description></item><item><title>C# Socket 使用 proxy 連線</title><link>https://blog.yowko.com/csharp-socket-proxy/</link><pubDate>Mon, 23 Aug 2021 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-socket-proxy/</guid><description>C# Socket 使用 proxy 連線 合作的 partner 在資料介接上提供 socket 的接口來確保資料更新的即時性，但為了有基本安全性所以只允許 whitelist server 可以連線，這在 production server 是很常見的限制，甚至</description></item><item><title>使用 goproxy</title><link>https://blog.yowko.com/goproxy/</link><pubDate>Thu, 19 Aug 2021 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/goproxy/</guid><description>使用 goproxy 之前筆記 安裝 Redsocks 介紹到如何使用 Redsocks 來處理特定 request 需要導向上游 proxy 的情境，也提到因為 Squid 不支援 https 轉 http 、Mitmproxy 不支援 transparent 與 upstream 並行，所以當時</description></item><item><title>關於 ASP.NET Core ListenAnyIP</title><link>https://blog.yowko.com/aspdotnet-core-listenanyip/</link><pubDate>Wed, 18 Aug 2021 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-listenanyip/</guid><description>關於 ASP.NET Core ListenAnyIP 之前筆記 ASP.NET Core URLs 設定的套用順序 紀錄到 ASP.NET Core URL 幾種設定方式的套用順序，其中 WebHostBuilder 的 UseKestrel 方法，筆記使用的是 opts.ListenLocalhost(10000, opts =&amp;gt;opts.Protocols= HttpProtocols.Http1); 與 opts.ListenLocalhost(10001, opts =&amp;gt; opts.UseHtt</description></item><item><title>ASP.NET Core URLs 設定的套用順序</title><link>https://blog.yowko.com/aspdotnet-core-urls-setting-sequence/</link><pubDate>Mon, 16 Aug 2021 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-urls-setting-sequence/</guid><description>ASP.NET Core URLs 設定的套用順序 最近負責的專案需要為多個 ASP.NET Core 專案指定統一的對外 url (主要是 port)，所以花了點時間好好釐清幾個設定方式的優先順序，為了避</description></item><item><title>使用 dnf 升級 redis 版本</title><link>https://blog.yowko.com/dnf-upgrade-redis/</link><pubDate>Sun, 15 Aug 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dnf-upgrade-redis/</guid><description>使用 dnf 升級 redis 版本 又到了定期 review 各環境中使用服務與軟體版本的時間，這次發現 production 的 redis 從安裝時的 6.0.14 至今皆未升級，內網環境因為之前調整機器有重新安裝過，</description></item><item><title>找不到 rabbitmqadmin ？！</title><link>https://blog.yowko.com/rabbitmqadmin-not-found/</link><pubDate>Sat, 14 Aug 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmqadmin-not-found/</guid><description>找不到 rabbitmqadmin ？！ rabbimq 安裝完正要建立 queue 才發現 rabbitmqadmin 指令，google 了發現很簡單的方法可以解決，立馬筆記一下供日後備查 找不到 rabbitmqadmin 基本環境說明 Azure VM : 標準 B2s (2</description></item><item><title>使用 PerfTest 進行 RabbitMQ 效能測試</title><link>https://blog.yowko.com/rabbitmq-perftest/</link><pubDate>Tue, 03 Aug 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-perftest/</guid><description>使用 PerfTest 進行 RabbitMQ 效能測試 之前筆記 在 CentOS7 上建立 RabbitMQ Cluster 提到打算透過針對 RabbitMQ 的效能測試來確認使用的硬體規格，今天就來紀錄該怎麼 使用 PerfTest 進行 RabbitMQ 效能測試 為了專注於</description></item><item><title>在 CentOS7 上建立 RabbitMQ Cluster</title><link>https://blog.yowko.com/rabbitmq-cluster-centos7/</link><pubDate>Mon, 02 Aug 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-cluster-centos7/</guid><description>在 CentOS7 上建立 RabbitMQ Cluster 新功能上線會用到 RabbitMQ，為了可以在效能與成本間取得平衡，所以打算做個效能測試，看什麼水準的硬體才能符合新功能的效能需</description></item><item><title>HttpClient 使用 Polly 做 Timeout 重試</title><link>https://blog.yowko.com/httpclient-polly-timeout-retry/</link><pubDate>Wed, 28 Jul 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-polly-timeout-retry/</guid><description>HttpClient 使用 Polly 做 Timeout 重試 之前使用 HttpClient 做了一個內部的網頁回應偵測工具，原本沒有調整預設的 Timeout 時間 (預設為 100,000 毫秒 = 100 秒，相關說明可以參考 Microsoft docs:HttpClient.Timeout 屬性)，為了更即</description></item><item><title>使用 HttpClient 傳送檔案</title><link>https://blog.yowko.com/httpclient-file/</link><pubDate>Tue, 27 Jul 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-file/</guid><description>使用 HttpClient 傳送檔案 最近專案有個需求要將系統畫面 透過 RESTFul API 傳給其他平台做紀錄，這才發現這功能雖然過去待在專案公司時常做，但時間一久覺得好陌生，猛然發</description></item><item><title>HttpClient 使用 URL Parameters (Query Strings) 的方式</title><link>https://blog.yowko.com/httpclient-url-parameter/</link><pubDate>Sat, 24 Jul 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-url-parameter/</guid><description>HttpClient 使用 URL Parameters (Query Strings) 的方式 前陣子有個跟其他系統介接的需求，因為手上工作太滿，先由前端的同事使用 Node.js 開發，過陣子再接手改用 C# 開發；其中有個功能需要 post 幾</description></item><item><title>使用 sysbench 來取得 ProxySQL 效能差異</title><link>https://blog.yowko.com/proxysql-benchmark-sysbench/</link><pubDate>Fri, 16 Jul 2021 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/proxysql-benchmark-sysbench/</guid><description>使用 sysbench 來取得 ProxySQL 效能差異 在之前筆記 使用 ProxySQL 來簡化 MySQL 的讀寫分離 提到需要進行壓力測試取得透過 ProxySQL 與直接存取 MySQL 的效能數據差來評估是否採用 ProxySQL 今天就來紀錄使</description></item><item><title>使用 ProxySQL 來簡化 MySQL 的讀寫分離</title><link>https://blog.yowko.com/proxysql/</link><pubDate>Thu, 15 Jul 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/proxysql/</guid><description>使用 ProxySQL 來簡化 MySQL 的讀寫分離 隨著系統使用者愈來愈多，對於 MySQL 的存取量也跟提高許多，為了增加系統整體 capacity，首先打算從 MySQL 著手調整起，在經過</description></item><item><title>RabbitMQ Shovel 將訊息同步至不同 Vhost (Cluster)</title><link>https://blog.yowko.com/rabbitmq-shovel/</link><pubDate>Mon, 05 Apr 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-shovel/</guid><description>RabbitMQ Shovel 將訊息同步至不同 Vhost (Cluster) 之前筆記 RabbitMQ 為不同帳號設定不同 topic 權限 紀錄到為了讓不同 User 在可以在收發訊息時可以控制存取權限，當時有提到透過在同個 virtual host 下設</description></item><item><title>[Zipkin] 使用 OpenTelemetry 來追蹤 ASP.NET Core 上的 gRPC 呼叫</title><link>https://blog.yowko.com/aspdotnet-core-opentelemetry-grpc-zipkin/</link><pubDate>Sun, 04 Apr 2021 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-opentelemetry-grpc-zipkin/</guid><description>[Zipkin] 使用 OpenTelemetry 來追蹤 ASP.NET Core 上的 gRPC 呼叫 之前筆記 [Zipkin] 使用 OpenTelemetry 來追蹤 ASP.NET Core 紀錄到使用 OpenTelemetry 搭配 Zipkin 來追蹤 ASP.NET Core 也曾在 .NET Core 上使用 Jaeger 追蹤 gRPC 呼叫 紀錄使用 OpenTracing 來追蹤 gRPC 呼叫，之前筆</description></item><item><title>[Jaeger] 使用 OpenTelemetry 來追蹤 ASP.NET Core 上的 gRPC 呼叫</title><link>https://blog.yowko.com/aspdotnet-core-opentelemetry-grpc-jaeger/</link><pubDate>Sun, 04 Apr 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-opentelemetry-grpc-jaeger/</guid><description>[Jaeger] 使用 OpenTelemetry 來追蹤 ASP.NET Core 上的 gRPC 呼叫 之前筆記 [Jaeger] 使用 OpenTelemetry 來追蹤 ASP.NET Core 紀錄到使用 OpenTelemetry 搭配 Jaeger 來追蹤 ASP.NET Core 也曾在 .NET Core 上使用 Jaeger 追蹤 gRPC 呼叫 紀錄使用 OpenTracing 來追蹤 gRPC 呼叫，因為目</description></item><item><title>[Zipkin] 使用 OpenTelemetry 來追蹤 ASP.NET Core</title><link>https://blog.yowko.com/aspdotnet-core-opentelemetry-zipkin/</link><pubDate>Sat, 03 Apr 2021 22:00:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-opentelemetry-zipkin/</guid><description>[Zipkin] 使用 OpenTelemetry 來追蹤 ASP.NET Core 這是延續之前筆記 [Jaeger] 使用 OpenTelemetry 來追蹤 ASP.NET Core 進行嘗試的筆記，過去使用 OpenTracing 時因為 Zipkin 與 .NET Core 的整合程式較低，設定上繁瑣許多，加上無法處理主要</description></item><item><title>[Jaeger] 使用 OpenTelemetry 來追蹤 ASP.NET Core</title><link>https://blog.yowko.com/aspdotnet-core-opentelemetry-jaeger/</link><pubDate>Sat, 03 Apr 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-opentelemetry-jaeger/</guid><description>[Jaeger] 使用 OpenTelemetry 來追蹤 ASP.NET Core 前幾天看到微軟官方部落格 OpenTelemetry .NET reaches v1.0 公開了 OpenTelemetry .NET v1.0 版，之前在研究 OpenTracing 也有考慮過 OpenTelemetry 畢竟大一統的規格未來性跟前景應該都比較好，但當時相</description></item><item><title>使用 Elasticdump 來匯入與匯出 Elasticsearch index</title><link>https://blog.yowko.com/elasticdump/</link><pubDate>Fri, 02 Apr 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/elasticdump/</guid><description>使用 Elasticdump 來匯入與匯出 Elasticsearch index 外網的測試環境因為有外部服務介接的關係，有較多機會出現 exception，為了方便 debug，所以想要將外網的 log 倒回內</description></item><item><title>RabbitMQ 為不同帳號設定不同 Queue 權限</title><link>https://blog.yowko.com/rabbitmq-user-queue-authorisation/</link><pubDate>Sun, 14 Mar 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-user-queue-authorisation/</guid><description>RabbitMQ 為不同帳號設定不同 Queue 權限 同事在新功能的架構設計時想要讓不同 user 在 MQ 存取時可以有權限的概念，但以團隊之前使用的 Kafka 至少就我個人所知是無法達成的，</description></item><item><title>ASP.NET Core gRPC 的 Secure 與 Insecure 不同做法</title><link>https://blog.yowko.com/aspdotnetcore-grpc-secure-insecure/</link><pubDate>Sun, 07 Mar 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnetcore-grpc-secure-insecure/</guid><description>ASP.NET Core gRPC 的 Secure 與 Insecure 不同做法 之前筆記 ASP.NET Core gRPC 使用自發憑證時在 macOS 的特別處理 紀錄到如何在 macOS 與 container 間使用不同 port 與 protocol 來建立 gRPC service，當時查資料看到也許</description></item><item><title>ASP.NET Core gRPC 使用自發憑證時在 macOS 的特別處理</title><link>https://blog.yowko.com/aspdotnetcore-grpc-self-signed-certificate-macos/</link><pubDate>Fri, 05 Mar 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnetcore-grpc-self-signed-certificate-macos/</guid><description>ASP.NET Core gRPC 使用自發憑證時在 macOS 的特別處理 之前筆記 ASP.NET Core gRPC 使用自發憑證 紀錄到使用自發憑證來為 ASP.NET Core gRPC service 加上 tls，透過新的做法看似可以正確在 container 內執行，只</description></item><item><title>ASP.NET Core gRPC 使用自發憑證</title><link>https://blog.yowko.com/aspdotnetcore-grpc-self-signed-certificate/</link><pubDate>Thu, 04 Mar 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnetcore-grpc-self-signed-certificate/</guid><description>ASP.NET Core gRPC 使用自發憑證 距之前筆記 讓 container 中的 ASP.NET Core 也有憑證 也不過幾個月時間，最近想要搭配 Kubernetes 發行憑證給 ASP.NET Core 使用 透過 Kubernetes 的 cert-manager 使用自簽憑證，想不到一直不通，從</description></item><item><title>確認 MongoDB 驗證機制</title><link>https://blog.yowko.com/mongodb-authentication-mechanism/</link><pubDate>Sun, 28 Feb 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-authentication-mechanism/</guid><description>確認 MongoDB 驗證機制 前幾天在進行每日 server 狀態異常檢查時，偶然發現 MongoDB 的錯誤 log 很多，進一步整理後統整出每個 application 連線認證都會先出現一次 SCRAM-SHA-256 認證失敗之後才會出現</description></item><item><title>ASP.NET Core 避免工作執行到一半強制被關閉</title><link>https://blog.yowko.com/aspdotnetcore-graceful-shutdown/</link><pubDate>Sat, 27 Feb 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnetcore-graceful-shutdown/</guid><description>ASP.NET Core 避免工作執行到一半強制被關閉 最近同事反應部份 application 在不同環境間，有 stop log 沒有正常紀錄下來的情況，雖然只是 log，但很有可能就連原本預期執行完畢</description></item><item><title>Docker Container 佔用磁碟大小</title><link>https://blog.yowko.com/docker-container-size/</link><pubDate>Mon, 22 Feb 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-container-size/</guid><description>Docker Container 佔用磁碟大小 最近在做個功能優化的 POC，其他一個項目是評估資料儲存的大小，這個評估我打算透過 container 來進行比較 (雖然跟實際安裝 service 有一定程度的落</description></item><item><title>Kubernetes 發行憑證給 ASP.NET Core 使用</title><link>https://blog.yowko.com/kubernetes-certificate-aspdotnet-core/</link><pubDate>Fri, 12 Feb 2021 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubernetes-certificate-aspdotnet-core/</guid><description>Kubernetes 發行憑證給 ASP.NET Core 使用 之前筆記 使用 cert-manager 建立 PKCS12 格式 (.pfx) 憑證 紀錄到如何使用 cert-manager 來建立 ASP.NET Core 可以使用的 PKCS12 格式 (.pfx) 憑證，也在 將憑證 secret 以檔案掛戴至 Container 中 紀錄如何將 Kubernetes</description></item><item><title>將憑證 secret 以檔案掛戴至 Container 中</title><link>https://blog.yowko.com/certificate-secret-mount-volume-file/</link><pubDate>Tue, 09 Feb 2021 15:30:00 +0800</pubDate><guid>https://blog.yowko.com/certificate-secret-mount-volume-file/</guid><description>將憑證 secret 以檔案掛戴至 Container 中 之前筆記 使用 cert-manager 建立憑證 紀錄到如何使用 cert-manager 來建立憑證，只是透過 cert-manager 產生的憑證會以 Kubernetes secret 方式存在，一般 application 無法直接取用，所以今天</description></item><item><title>使用 cert-manager 建立 PKCS12 格式 (.pfx) 憑證</title><link>https://blog.yowko.com/cert-manager-pkcs12-pfx/</link><pubDate>Tue, 09 Feb 2021 10:30:00 +0800</pubDate><guid>https://blog.yowko.com/cert-manager-pkcs12-pfx/</guid><description>使用 cert-manager 建立 PKCS12 格式 (.pfx) 憑證 之前筆記 使用 cert-manager 建立憑證 紀錄到如何使用 cert-manager 來建立憑證，在預設情境下只會產生 .crt + .key 的憑證與 key，但 ASP.NET Core 使用的憑證格式為 PKCS12 (.PFX)</description></item><item><title>MongoDB Exporter 需要的權限</title><link>https://blog.yowko.com/mongodb-exporter-permission/</link><pubDate>Mon, 08 Feb 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-exporter-permission/</guid><description>MongoDB Exporter 需要的權限 之前筆記 安裝 MongoDB Exporter 紀錄到透過 MongoDB Exporter 蒐集 MongoDB metrics 資訊，不過就安全性來看有些不妥：原因是用了 root 這個在環境設定(詳細資訊可以參考之前筆記 使用</description></item><item><title>使用 cert-manager 建立憑證</title><link>https://blog.yowko.com/cert-manager-certificate/</link><pubDate>Mon, 08 Feb 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/cert-manager-certificate/</guid><description>使用 cert-manager 建立憑證 之前筆記 在 Kubernetes 上安裝 cert-manager 提到為什麼要使用 cert-manager 以及如何安裝 cert-manager，今天就來紀錄一下如何使用 cert-manager 來建立憑證 基本環境說明 macOS</description></item><item><title>在 Kubernetes 上安裝 cert-manager</title><link>https://blog.yowko.com/cert-manager/</link><pubDate>Mon, 08 Feb 2021 20:30:00 +0800</pubDate><guid>https://blog.yowko.com/cert-manager/</guid><description>在 Kubernetes 上安裝 cert-manager 之前 gRPC 都是透過 insecure 的設定來避免 gRPC 需要 SSL 的問題，雖然使用上並沒有遇到什麼狀況，但還是覺得不太正統，另外程式碼也多了一些設定，所以一直</description></item><item><title>安裝 MongoDB Exporter</title><link>https://blog.yowko.com/mongodb-exporter/</link><pubDate>Sun, 07 Feb 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-exporter/</guid><description>安裝 MongoDB Exporter 之前筆記 Prometheus 搭配 Alertmanager 發送警示 紀錄到如何使用 Prometheus 與 Alertmanager 來進行監控並主動發生通知，而 MongoDB 也可以是 Prometheus 監控的對象，透過安裝 MongoDB Exporter 將 metrics 資訊透過 http server 方式揭露</description></item><item><title>Prometheus 搭配 Alertmanager 發送警示</title><link>https://blog.yowko.com/prometheus-alertmanager/</link><pubDate>Wed, 27 Jan 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/prometheus-alertmanager/</guid><description>Prometheus 搭配 Alertmanager 發送警示 之前筆記 使用 ElastAlert 監控 Elasticsearch 發出通知 提到近期都在進行主動監控的相關設定與測試，之前紀錄了 Elasticsearch 上使用 application 所產生的 log 內容來進行條件偵測與通知</description></item><item><title>使用 ElastAlert 監控 Elasticsearch 發出通知</title><link>https://blog.yowko.com/elastalert-alert/</link><pubDate>Tue, 26 Jan 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/elastalert-alert/</guid><description>使用 ElastAlert 監控 Elasticsearch 發出通知 之前筆記 使用 Docker Compose 建立 ElastAlert 測試環境 紀錄到該如何使用 docker compose 快速建立 ElastAlert 的開發測試環境，今天要來筆記一下如何設定 ElastAlert 來發出警告 除了 Elasticsearch 外</description></item><item><title>使用 Docker Compose 建立 ElastAlert 測試環境</title><link>https://blog.yowko.com/docker-compose-elastalert/</link><pubDate>Sat, 23 Jan 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-elastalert/</guid><description>使用 Docker Compose 建立 ElastAlert 測試環境 ElastAlert 是套基於 elasticsearch 查詢使用 python 撰寫的 open source 監控報警工具，因為在前公司用的 Elasticsearch Watcher 現在被納入 X-Pack Alerting 中，高額授權費用對於起步中的團隊是不小</description></item><item><title>需要 kafka-topics.sh 嗎？ 可以試試 kafkactl</title><link>https://blog.yowko.com/kafka-topics-kafkactl/</link><pubDate>Wed, 23 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-topics-kafkactl/</guid><description>需要 kafka-topics.sh 嗎？ 可以試試 kafkactl 因應團隊策略：資料面的異動只能透過對外的 service 來進行，不能伸手進 server，所以在 kafka 需要新增 topic 時就無法使用 kafka 內建的 kafka-topics.sh (詳細</description></item><item><title>快速更換 mac 中的所有 git repository 位置</title><link>https://blog.yowko.com/mac-change-git-url/</link><pubDate>Tue, 22 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mac-change-git-url/</guid><description>快速更換 mac 中的所有 git repository 位置 最近團隊移動了 git server 的位置，所以 git repository 的 url 也就跟著改變了，只是這麼一來團隊那些數十個 repository 要逐一修改顯得有些浪費時間，所以</description></item><item><title>Shell 逐行處理檔案內容</title><link>https://blog.yowko.com/shell-read-file-by-line/</link><pubDate>Mon, 21 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/shell-read-file-by-line/</guid><description>Shell 逐行處理檔案內容 這是之前處理 data migrate 時遇到的問題：所有 data 類型的資料調整都使用 script 來進行，目的是希望避免人為操作造成的錯誤 以 influxdb 為例，將需要執行的 script</description></item><item><title>安裝 MongoDB client</title><link>https://blog.yowko.com/install-mongodb-client-only/</link><pubDate>Fri, 11 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-mongodb-client-only/</guid><description>安裝 MongoDB client 之前筆記 安裝 mysql client 紀錄到在 container 中安裝 mysql client 來進行連線測試，今天就來紀錄一下也是常用工具的 mongodb client 基本環境說明 CentOS 8.2.2004, Kernel 4.18.0 Debian 10, Kernel 5.4.49+ Debian 9, Kernel 5.4.39-linuxkit 安裝語法 CentOS</description></item><item><title>安裝 mysql client</title><link>https://blog.yowko.com/install-mysql-client-only/</link><pubDate>Mon, 07 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-mysql-client-only/</guid><description>安裝 mysql client 程式更迭的過程，隨著功能的增加，不免需要 db 的 change 來配合，為了增加安裝性，所以打算封鎖 user 登入 mysql server 操作，僅透過 mysql client 來進行 patch，但又不</description></item><item><title>GKE 透過 Private IP 連線 Cloud SQL</title><link>https://blog.yowko.com/gke-private-sql-cloud-sql/</link><pubDate>Sun, 06 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/gke-private-sql-cloud-sql/</guid><description>GKE 透過 Private IP 連線 Cloud SQL 因為團隊中沒有傳統 DBA (只有 BA 兼任 DBA 哈哈)，所以在 db 的選擇上一直都偏好使用外部服務 (自建環境時與其他團隊共享 DBA 資源) 所以在評</description></item><item><title>使用 gcloud shell 建立 GKE 並使用 Filestore 做為 NFS-Client</title><link>https://blog.yowko.com/gke-filestore-nfs-client/</link><pubDate>Mon, 23 Nov 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/gke-filestore-nfs-client/</guid><description>使用 gcloud shell 建立 GKE 並使用 Filestore 做為 NFS-Client 許多目前用到的 service 都需要使用 storageclass 來動態建立 volume，雖然使用預設的 standard 可以順利讓 service 啟動，但為了保存相關資料還是需要</description></item><item><title>使用 gcloud shell 建立 GCE 並設定允許使用 ssh 連線</title><link>https://blog.yowko.com/gcloud-create-gce-enable-ssh/</link><pubDate>Sun, 22 Nov 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/gcloud-create-gce-enable-ssh/</guid><description>使用 gcloud shell 建立 GCE 並設定允許使用 ssh 連線 最近在評估 GCP 的可行性，雖然雲端上有許多可用的 SaaS，但原本都是自建服務，要花時間去了解如何設定與調整 SaaS (</description></item><item><title>建立 MariaDB 備份與還原帳號</title><link>https://blog.yowko.com/mariadb-backup-restore-user/</link><pubDate>Sat, 21 Nov 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mariadb-backup-restore-user/</guid><description>建立 MariaDB 備份與還原帳號 之前筆記 建立 MongoDB 自訂角色 (role) 紀錄到如何在 MongoDB 上建立用來進行備份與還原的角色，再依這個角色建立使用者，相同的需求在 MariaDB 上也有，只是</description></item><item><title>Ansible 使用 dnf 安裝 Redis Cluster (Redis6)</title><link>https://blog.yowko.com/ansible-dnf-install-redis-cluster-redis6/</link><pubDate>Sat, 14 Nov 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-dnf-install-redis-cluster-redis6/</guid><description>Ansible 使用 dnf 安裝 Redis Cluster (Redis6) 之前筆記 Ansible 安裝 Redis Cluster 紀錄到在 CentOS 7 上透過 Ansible 使用 yum 來安裝 Redis Cluster，但最近 production 環境已經升級成 CentOS 8 + dnf，所以來更新一下 Ansible s</description></item><item><title>MAC 封鎖存取特定 IP</title><link>https://blog.yowko.com/mac-block-outgoing-ip/</link><pubDate>Fri, 13 Nov 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mac-block-outgoing-ip/</guid><description>MAC 封鎖存取特定 IP 這個需求源自連不到某個共用服務時的 exception handle 測試，一般來說直接將 mac 斷網就可以模擬，但想要測試的服務被包在一段流程中，斷網會讓該流程</description></item><item><title>Linux Service Status 203 無法啟動</title><link>https://blog.yowko.com/linux-service-status-203/</link><pubDate>Thu, 05 Nov 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/linux-service-status-203/</guid><description>Linux Service Status 203 無法啟動 這是最近團隊在升級 zookeeper 及 kafka 時遇到的問題，不過仔細想想應該不是只有 zookeeper 會有問題，所以標題就不限定軟體名稱，避免日後查資料時反而誤會</description></item><item><title>CentOS 7 安裝 Linux Kernel 5</title><link>https://blog.yowko.com/centos7-install-linux-kernel5/</link><pubDate>Fri, 30 Oct 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/centos7-install-linux-kernel5/</guid><description>CentOS 7 安裝 Linux Kernel 5 為了 server 管理方便傾向不升級 CentOS 8 與 Linux kernel 5，但在效能議題下只好犧牲一點管理上的方便性，於是決定暫時不升級 CentOS 8，而是在 CentOS 7 下使用 Linux kernel 5</description></item><item><title>避免執行 dnf update 時連帶升級特定套件</title><link>https://blog.yowko.com/dnf-update-exclude/</link><pubDate>Mon, 26 Oct 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dnf-update-exclude/</guid><description>避免執行 dnf update 時連帶升級特定套件 之前對於 linux 不熟悉，加上沒有系統化學習而對 linux 相關知識不足，造成不少問題：常常要安裝新套件前，就執行 yum update</description></item><item><title>使用 dnf 透過 module 安裝指定版本套件</title><link>https://blog.yowko.com/dnf-module-install-specific-artifact/</link><pubDate>Fri, 23 Oct 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dnf-module-install-specific-artifact/</guid><description>使用 dnf 透過 module 安裝指定版本套件 這是從過去使用 yum 時發現的問題：安裝套件時多是執行 yum install -y {套件名稱}，如此一來會直接安裝該套件的最新版本，對於日常</description></item><item><title>CentOS 8 降級 Linux Kernel 5</title><link>https://blog.yowko.com/centos-downgrade-kernel/</link><pubDate>Thu, 22 Oct 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/centos-downgrade-kernel/</guid><description>CentOS 8 降級 Linux Kernel 5 之前筆記 CentOS 7 升級 CentOS 8 連帶安裝 Linux Kernel 5 興高采烈地把環境升級到最新版本：CentOS 8 + Linux Kernel 5.9.1，結果遇到 Ansible 的 service module 出現 Service is in unknown</description></item><item><title>使用 dnf 安裝 Redis 6</title><link>https://blog.yowko.com/dnf-install-redis6/</link><pubDate>Wed, 21 Oct 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dnf-install-redis6/</guid><description>使用 dnf 安裝 Redis 6 之前筆記 使用 Yum 安裝 Redis 5 與 CentOS 使用 yum 安裝 Redis6 紀錄到在 CentOS 中分別使用不同 rpm 安裝 Redis 5 與 Redis 6 的做法，最近改用 dnf 做為套件管理工具，安裝方式有些</description></item><item><title>ASP.NET Core 的 gRPC Polly Retry</title><link>https://blog.yowko.com/aspdotnet-core-grpc-polly-retry/</link><pubDate>Mon, 19 Oct 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-grpc-polly-retry/</guid><description>ASP.NET Core 的 gRPC Polly Retry 之前曾經對 gRPC 的 keepalive 調整一輪 (server、kubernetes、container)，原本看似已解決，但最近斷線的錯誤又出現，於是</description></item><item><title>CentOS 7 升級 CentOS 8 連帶安裝 Linux Kernel 5</title><link>https://blog.yowko.com/centos7-upgrade-centos8-linux-kernel5/</link><pubDate>Sat, 10 Oct 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/centos7-upgrade-centos8-linux-kernel5/</guid><description>CentOS 7 升級 CentOS 8 連帶安裝 Linux Kernel 5 最近在 review 團隊各項技術的版本，準備再來次大升級，其中的較大的內容就是基礎環境的部份，原本之前就想升級 Kubernetes 1.18 但無奈 Kubespray 當時</description></item><item><title>Container 中沒有 sysctl 指令怎麼看 kernel 設定</title><link>https://blog.yowko.com/container-sysctl-command-not-found/</link><pubDate>Thu, 24 Sep 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/container-sysctl-command-not-found/</guid><description>Container 中沒有 sysctl 指令怎麼看 kernel 設定 這幾天因為某個 issue 需要檢查 linux kernel 的設定，但使用的 base image (mcr.microsoft.com/dotnet/core/aspnet:3.1) 沒有 sysctl 指令可以用，又找不到安裝的方式，幸虧在同事的強力支援下指點</description></item><item><title>使用 Kubernetes 搭配 ASP.NET Core BackgroundService 確保 gRPC 服務回應合乎預期</title><link>https://blog.yowko.com/kubernetes-aspdotnet-core-backgroundservice-grpc/</link><pubDate>Tue, 22 Sep 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubernetes-aspdotnet-core-backgroundservice-grpc/</guid><description>使用 Kubernetes 搭配 ASP.NET Core BackgroundService 確保 gRPC 服務回應合乎預期 之前在筆記 使用 Kubernetes Liveness 來檢查 ASP.NET Core gRPC 回應合乎預期 紀錄到使用 Kubernetes Liveness 在 pod 中的 service 回應如果不如預期時就直接重啟 pod 來嘗試</description></item><item><title>使用 Kubernetes Liveness 來檢查 ASP.NET Core gRPC 回應合乎預期</title><link>https://blog.yowko.com/kubernetes-liveness-aspdotnet-core-grpc/</link><pubDate>Mon, 21 Sep 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubernetes-liveness-aspdotnet-core-grpc/</guid><description>使用 Kubernetes Liveness 來檢查 ASP.NET Core gRPC 回應合乎預期 今天要紀錄透過 Kubernetes 搭配 使用 ASP.NET Core middleware 進行 gRPC healthy check (當然 使用 ASP.NET Core BackgroundService 進行 gRPC healthy check 也是可行的) 與 讓 container 中的 ASP.NET Core 也有憑證 來確保 service</description></item><item><title>讓 container 中的 ASP.NET Core 也有憑證</title><link>https://blog.yowko.com/aspdotnet-core-container-certificate/</link><pubDate>Sun, 20 Sep 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-container-certificate/</guid><description>讓 container 中的 ASP.NET Core 也有憑證 經 2021/03/04 測試，本文內容失效，請參考 ASP.NET Core gRPC 使用自發憑證 之前筆記 使用 ASP.NET Core middleware 進行 gRPC healthy check、使用 ASP.NET Core BackgroundService 進行 gRPC healthy check 以及 ASP.NET Core gRPC 無法</description></item><item><title>使用 dotnet-grpc-cli 取得 gRPC Service 內容</title><link>https://blog.yowko.com/dotnet-grpc-cli/</link><pubDate>Sun, 13 Sep 2020 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-grpc-cli/</guid><description>使用 dotnet-grpc-cli 取得 gRPC Service 內容 之前筆記 使用 grpc-cli 呼叫 gRPC Service 紀錄到 gprc 官方 command line tool 的使用方式，後來偶爾間發現竟然有 dotnet 版：dotnet-grpc-cli，還是 C# 撰寫的</description></item><item><title>使用 grpc-cli 呼叫 gRPC Service</title><link>https://blog.yowko.com/grpc-cli/</link><pubDate>Sat, 12 Sep 2020 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-cli/</guid><description>使用 grpc-cli 呼叫 gRPC Service 之前筆記 使用grpcurl 呼叫gRPC Service 紀錄到 grpcurl (curl for grpc) 的使用方式，最近在查其他資料時這才發現原來 gRPC 官方也有提供：grpc-cl</description></item><item><title>在 ASP.NET Core 上啟用 gRPC Reflection</title><link>https://blog.yowko.com/aspdotnet-core-grpc-reflection/</link><pubDate>Thu, 10 Sep 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-grpc-reflection/</guid><description>在 ASP.NET Core 上啟用 gRPC Reflection 系統功能愈來愈多，自然而然地 proto 檔也就熟變得愈來愈龐大，如果每次想要手動測試 gRPC 功能時都要手 key proto 實在沒效率 (測試工具可以參考之前</description></item><item><title>建立 MongoDB 自訂角色權限 (role)</title><link>https://blog.yowko.com/mongodb-custom-role/</link><pubDate>Tue, 08 Sep 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-custom-role/</guid><description>建立 MongoDB 自訂角色 (role) 最近在為系統的 storage 服務加上 data archival 流程，其中 MongoDB 的做法跟一般流程不同，雖然 MongoDB 有許多內建的角色權限 (Built-In Roles)，但沒找到適合的，我的</description></item><item><title>使用 ASP.NET Core BackgroundService 進行 gRPC healthy check</title><link>https://blog.yowko.com/aspdotnet-core-backgroundservice-grpc-healthy-check/</link><pubDate>Sun, 06 Sep 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-backgroundservice-grpc-healthy-check/</guid><description>使用 ASP.NET Core BackgroundService 進行 gRPC healthy check 之前筆記 使用 ASP.NET Core middleware 進行 gRPC healthy check 紀錄到如何使用 ASP.NET Core 內建的 Health Check middleware 來進行 gRPC service 的檢查，當時有看到 Steve Gordon 的 HEALTH CHECKS WITH GRPC AND ASP.NET CORE 3.0 使用 serive 本身的</description></item><item><title>使用 ASP.NET Core middleware 進行 gRPC healthy check</title><link>https://blog.yowko.com/aspdotnet-core-middleware-grpc-healthy-check/</link><pubDate>Mon, 31 Aug 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-middleware-grpc-healthy-check/</guid><description>使用 ASP.NET Core middleware 進行 gRPC healthy check 這個需求來自於某次的 issue：有個 service 的回應時好時壞，沒有規律，這讓我想起當年在壽險公司資訊部門使用 asp 提供服務的故事，當</description></item><item><title>kubectl patch 錯誤</title><link>https://blog.yowko.com/kubectl-patch-fail/</link><pubDate>Tue, 18 Aug 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubectl-patch-fail/</guid><description>kubectl patch 錯誤 這件事實在太瞎了，不得不紀錄一下 這幾天正在進行團隊各環境的 service 升級，其中的重點就是 kubernetes 版本，重新 refactor 所有 ansible scripts 後，終於沒有出錯，但在部署時都</description></item><item><title>Ansible 安裝 Redis Cluster (更新版)</title><link>https://blog.yowko.com/ansible-redis-cluster-update/</link><pubDate>Sun, 16 Aug 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-redis-cluster-update/</guid><description>Ansible 安裝 Redis Cluster 之前筆記 Ansible 安裝 Redis Cluster 紀錄了以 ansible 內建 function 為主的 redis cluster 安裝 script，最近因為需要將 redis5 更新至 redis6，重新 review 了 script，做了些調整</description></item><item><title>yum 安裝指定版本套件</title><link>https://blog.yowko.com/yum-specific-version/</link><pubDate>Sun, 16 Aug 2020 16:30:00 +0800</pubDate><guid>https://blog.yowko.com/yum-specific-version/</guid><description>yum 安裝指定版本套件 這個問題起因於要追查線上問題，但另建環境卻怎樣也模擬不出錯誤，後來才發現另建的環境使用的套件是較新版本，原本的 bug 也被修復；</description></item><item><title>CentOS 使用 yum 安裝 Redis6</title><link>https://blog.yowko.com/centos-yum-redis6/</link><pubDate>Sun, 16 Aug 2020 14:30:00 +0800</pubDate><guid>https://blog.yowko.com/centos-yum-redis6/</guid><description>CentOS 使用 yum 安裝 Redis6 之前筆記 使用 Yum 安裝 Redis 5 中提到預設的 centos yum repository 中僅能安裝 redis3，透過使用 ius repository 才能使用 yum 來安裝 redis5，不過 redis6 已經問市一陣子</description></item><item><title>在 Centos 上新增磁區</title><link>https://blog.yowko.com/centos-add-disk/</link><pubDate>Sat, 08 Aug 2020 20:30:00 +0800</pubDate><guid>https://blog.yowko.com/centos-add-disk/</guid><description>在 Centos 上新增磁區 最近在調整公司的 Ansible 各 service 的安裝腳本，而身為工程師出身的 SRE，當然不能沒有測試呀。之前寫單一目的 ansible role 時，都是透過建立 azure vm 來進行測</description></item><item><title>Container 中執行 apt-get update 時遇到 GPG KEYEXPIRED</title><link>https://blog.yowko.com/container-gpg-keyexpired/</link><pubDate>Sun, 26 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/container-gpg-keyexpired/</guid><description>Container 中執行 apt-get update 時遇到 GPG KEYEXPIRED 之前筆記 執行 apt-get update 時遇到 GPG KEYEXPIRED 紀錄到在使用 image : confluentinc/cp-kafka:5.5.0 建立 container 後需要安裝其他套件，但 apt-get update 卻遇到 GPG KEYEXPIRED 的錯誤，當時透過進到 container 中手動調整</description></item><item><title>讓特定 message 在 kafka 中可以有順序性</title><link>https://blog.yowko.com/kafka-message-immutable-sequence/</link><pubDate>Sat, 25 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-message-immutable-sequence/</guid><description>讓特定 message 在 kafka 中可以有順序性 之前專案為了保證 message 的順序性捨棄當時還在 0.8 版的 kafka 而選用 RabbitMQ，雖然 RabbitMQ 在效能數據上跟 kafka 不是同個量級水準，但已</description></item><item><title>Git Submodule partial clone</title><link>https://blog.yowko.com/git-submodule-partial-clone/</link><pubDate>Sun, 19 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-submodule-partial-clone/</guid><description>Git Submodule partial clone 之前筆記 Git partial clone 嘗試了期待已久的 partial clone 功能，雖然跟預期有落差，但對於想要的目標有了不同想法 之前以為 partial clone 可以在既有 repo 的內容中，疉加另個 repo 的</description></item><item><title>Git partial clone</title><link>https://blog.yowko.com/git-partial-clone/</link><pubDate>Sat, 18 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-partial-clone/</guid><description>Git partial clone Git 2.19.0 發表了 Partial Clone 功能，技術細節可以參考 Partial Clone Design Notes 這功能從我開始使用 Git 就覺得需要了，因為 Git 跟過去中央式版控不同，不是以路徑為使用基準，所以沒</description></item><item><title>執行 apt-get update 時遇到 GPG KEYEXPIRED</title><link>https://blog.yowko.com/debian-keyexpired/</link><pubDate>Sat, 18 Jul 2020 16:30:00 +0800</pubDate><guid>https://blog.yowko.com/debian-keyexpired/</guid><description>執行 apt-get update 時遇到 GPG KEYEXPIRED 這是在追查 kafka 問題時，使用 docker-compose 建立 local 環境時，在 kafka container 內透過 apt-get 安裝工具來調整 kafka 設定值時遇到的狀況 google 之後還試了好幾種方法才解決問題，</description></item><item><title>使用 Docker Compose 建立有 Auth 的 MongoDB Replica Set</title><link>https://blog.yowko.com/docker-compose-mongodb-replica-set-with-auth/</link><pubDate>Sun, 12 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-mongodb-replica-set-with-auth/</guid><description>使用 Docker Compose 建立有 Auth 的 MongoDB Replica Set 之前在筆記 使用 Docker Compose 建立有 Auth 的 MongoDB Replica Set (Single Node) 紀錄到如何使用 docker compose 建立啟用 auth 機制的單一 node MongoDB Replica Set，但單一 node 的 MongoDB Replica Set 對我來說不</description></item><item><title>使用 Docker Compose 建立有 Auth 的 MongoDB Replica Set (Single Node)</title><link>https://blog.yowko.com/docker-compose-mongodb-replica-set-with-auth-standalone/</link><pubDate>Sat, 11 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-mongodb-replica-set-with-auth-standalone/</guid><description>使用 Docker Compose 建立有 Auth 的 MongoDB Replica Set (Single Node) 之前在筆記 Docker Compose 建立 MongoDB Replica Set 紀錄到使用 Docker Compose 建立 MongoDB Replica Set，不過當時建立的 MongoDB Replica Set 主要目的是為了驗證資料同步以及讀寫分離</description></item><item><title>Ansible 安裝 Redis Cluster</title><link>https://blog.yowko.com/ansible-redis-cluster/</link><pubDate>Sun, 05 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-redis-cluster/</guid><description>Ansible 安裝 Redis Cluster 已有更新版，請參考 Ansible 安裝 Redis Cluster (更新版) 之前筆記 Ansible 安裝 Redis Replication 更新版 紀錄了以 ansible 內建 function 為主的 redis replication 安裝 script，順手紀錄一下 redis cluster 的安裝方</description></item><item><title>Ansible 安裝 Redis Replication 更新版</title><link>https://blog.yowko.com/ansible-redis-replication/</link><pubDate>Sat, 04 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-redis-replication/</guid><description>Ansible 安裝 Redis Replication 更新版 之前筆記 使用 Ansible 安裝 Redis Replication 中紀錄使用 Ansible 來安裝 Redis Replication，但畢竟是 Ansible 新手，很多好用的 function 都沒真的用上，多數都是土法鍊鋼</description></item><item><title>在 Helm (Go Template) 中檢查 Value 是否有值</title><link>https://blog.yowko.com/helm-check-values-null/</link><pubDate>Sun, 28 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/helm-check-values-null/</guid><description>在 Helm (Go Template) 中檢查 Value 是否有值 這個需求是延續之前筆記 在 Kubernetes 中使用自訂 Domain 而來的，其中提到某些服務會掛在自訂 domain 下，但內網測試環境可能因為無法對外連線 (連</description></item><item><title>在 Kubernetes 中使用自訂 Domain</title><link>https://blog.yowko.com/kubernetes-custom-domain/</link><pubDate>Sat, 27 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubernetes-custom-domain/</guid><description>在 Kubernetes 中使用自訂 Domain 在之前筆記 在 Windows 環境將特定網址指向不同 IP 與 讓 iOS 裝置可以存取自訂 domain 中都有提到過自訂域名的用法，大意就是避免因為 server ip 更動就要調整程</description></item><item><title>安裝 Redsocks</title><link>https://blog.yowko.com/redsocks/</link><pubDate>Fri, 26 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/redsocks/</guid><description>安裝 Redsocks 之前一連串幾篇筆記分別紀錄到 Squid 與 Mitmproxy 的使用方式，但因為 Squid 不支援 https 轉 http、Mitmproxy 不支援 transparent 與 upstream 並行，最後找到 Redsocks 可以滿足使用情</description></item><item><title>Mitmproxy 啟用 Transparent mode</title><link>https://blog.yowko.com/mitmproxy-transparent/</link><pubDate>Thu, 25 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mitmproxy-transparent/</guid><description>Mitmproxy 啟用 Transparent mode 之前筆記 安裝 Squid Proxy 提到如果每次 request 都需要指定 proxy，會讓 proxy 在使用上的便利性大打折扣，所以可以將 proxy 設為 trasparnet mode 並搭配 nat 設定從網路層攔劫特</description></item><item><title>Mitmproxy 啟用 Https</title><link>https://blog.yowko.com/mitmproxy-https/</link><pubDate>Sun, 21 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mitmproxy-https/</guid><description>Mitmproxy 啟用 Https 之前筆記 安裝 Mitmproxy 提到 Mitmproxy 在存取 https 資源時會出現問題，雖然在 curl 使用時加上 --insecure 或是 -k 就可以避免問題，但是總覺得麻煩也不夠漂亮，所以順手紀錄解決方</description></item><item><title>將 Mitmproxy log 存至檔案</title><link>https://blog.yowko.com/mitmproxy-log-to-file/</link><pubDate>Sun, 21 Jun 2020 18:30:00 +0800</pubDate><guid>https://blog.yowko.com/mitmproxy-log-to-file/</guid><description>將 Mitmproxy log 存至檔案 之前筆記 安裝 Mitmproxy 提到雖然 Mitmproxy 提供了互動式且資訊豐富的存取紀錄，但這對於日常維運上不方便，一般沒有問題時不會有人去看 log，但覺得行</description></item><item><title>安裝 Mitmproxy</title><link>https://blog.yowko.com/mitmproxy/</link><pubDate>Sat, 20 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mitmproxy/</guid><description>安裝 Mitmproxy 之前筆記 安裝 Squid Proxy 提到為了加強與 Partner 間資料介接交換時的安全性，所以在 server 間會需要互相 trust ip，但這麼一來在業務增長時就會失去彈性，所以打算透過</description></item><item><title>Squid Proxy Https 設定</title><link>https://blog.yowko.com/squid-proxy-https/</link><pubDate>Sun, 14 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/squid-proxy-https/</guid><description>Squid Proxy Https 設定 依據之前筆記 安裝 Squid Proxy 比照相同方式設定 https 的 request 無法取得正確回應 以下設定方式直接套用，會出現錯誤 iptables -t nat -A OUTPUT -p tcp -m tcp --dport 443 -m owner --uid-owner squid -j RETURN iptables -t nat</description></item><item><title>安裝 Squid Proxy</title><link>https://blog.yowko.com/squid-proxy/</link><pubDate>Sat, 13 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/squid-proxy/</guid><description>安裝 Squid Proxy 專案有個需求是跟 partner 之間的溝通只限定於註冊過的 server ip，雖然在資安的考量下是很常見的做法，但對於實際的營運上不免會有些限制：像是如果只綁</description></item><item><title>手動觸發 Redis failover</title><link>https://blog.yowko.com/redis-manual-failover/</link><pubDate>Sun, 07 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/redis-manual-failover/</guid><description>手動觸發 Redis failover 之前筆記 手動觸發 MongoDB failover 紀錄到如何透過 mongo cli 來進行 failover 今天接著紀錄如何使用 redis cli 來進行 failover 停止服務可以分為： server level (服務運作的實體機器無法提供</description></item><item><title>手動觸發 MongoDB failover</title><link>https://blog.yowko.com/mongodb-manual-failover/</link><pubDate>Sun, 07 Jun 2020 15:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-manual-failover/</guid><description>手動觸發 MongoDB failover 最近如火如塗地準備著產品上線工作，其中一項重要項目就是各個服務的 HA 的驗證 我自己的測試方式是輪流將服務的每個 instance 停掉再重啟，確保服務</description></item><item><title>批次刪除 Redis 特定 Key</title><link>https://blog.yowko.com/redis-batch-delete-by-pattern/</link><pubDate>Sat, 06 Jun 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/redis-batch-delete-by-pattern/</guid><description>批次刪除 Redis 特定 Key 將 Redis 當做 Cache Server 是滿普遍的做法，修改 Cache 內容格式也是常見的，不過程式部署時連帶清空 redis 可能就不是預設 sop 了 最近專案就遇到類似問題： Redis 預</description></item><item><title>Git Force Push 後如何更新 Repository</title><link>https://blog.yowko.com/git-pull-after-force-push/</link><pubDate>Sat, 23 May 2020 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-pull-after-force-push/</guid><description>Git Force Push 後如何更新 Repository 在之前筆記 清除 Git Commit 紀錄 提到打算將開發時期的 commit history 都清除，來個重新開始，但在完成 repository 整理後，團隊其他人還是得繼續往下開發，在找不</description></item><item><title>清除 Git Commit 紀錄</title><link>https://blog.yowko.com/clean-git-commit-history/</link><pubDate>Sat, 23 May 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/clean-git-commit-history/</guid><description>清除 Git Commit 紀錄 為了加快 Git clone 的速度，在之前筆記 加快大型 GIT Repository 下載速度(指定 depth) 曾經紀錄到使用 --depth 參數，用來限縮 clone 的資料量，只是預設情境下大家不會刻意加</description></item><item><title>使用 Docker Compose 建立 Redis Cluster</title><link>https://blog.yowko.com/docker-compose-redis-cluster/</link><pubDate>Tue, 19 May 2020 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-redis-cluster/</guid><description>使用 Docker Compose 建立 Redis Cluster 之前類似的主題至少有四、五篇，其中最後一版 使用 docker 建立 Redis Cluster - 更新版 已經滿足自己在全 container 環境中的測試需求，雖然該篇筆記下方有網友提</description></item><item><title>傳遞參數來執行 Docker Compose</title><link>https://blog.yowko.com/docker-compose-pass-parameter/</link><pubDate>Tue, 19 May 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-pass-parameter/</guid><description>傳遞參數來執行 Docker Compose 為了能動態決定 Docker Compose 中所使用到的參數值可以透過 environment variable , .env file 另外個人更偏好在執行 docker-compose up 時直接指定變數值，因為這樣一來不必設定 environment variable r</description></item><item><title>使用 Helm 在 mac 中的 Kubernetes 上安裝 Redis Cluster</title><link>https://blog.yowko.com/mac-helm-kubernetes-redis-cluster/</link><pubDate>Thu, 14 May 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mac-helm-kubernetes-redis-cluster/</guid><description>使用 Helm 在 Kubernetes 上安裝 Redis Cluster 請使用新版安裝方式，請參考 使用 Helm 安裝 Redis Cluster 之前筆記 在 Kubernetes 部署 Redis Cluster 曾經紀錄到使用 KubeDB Operator 與 Helm 在 Kubernetes 上安裝 Redis Cluster，最近剛好需</description></item><item><title>Docker Compose 建立 MongoDB Replica Set</title><link>https://blog.yowko.com/docker-compose-mongodb-replica-set/</link><pubDate>Sun, 10 May 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-mongodb-replica-set/</guid><description>Docker Compose 建立 MongoDB Replica Set 因為之前筆記 MongoDB Cli Replica Set 連線方式 需要建立測試環境，想起最早之前的筆記 使用 docker 建立 MongoDB Replica Set 但使用起來並不是很好用，所以興起筆記其他建立 MongoDB</description></item><item><title>MongoDB Cli Replica Set 連線方式</title><link>https://blog.yowko.com/mongodb-cli-replica-set/</link><pubDate>Sat, 09 May 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-cli-replica-set/</guid><description>MongoDB Cli Replica Set 連線方式 這是在建立 MongoDB patch 資料自動化流程時遇到的問題：需要進行 MongoDB data patch 的開發人員將需要執行的 MongoDB script 提供 .js 格式的檔案，再透過 MongoDB Cli 來匯入執行 從一</description></item><item><title>Fluentd 指定 Elasticsearch Index 名稱</title><link>https://blog.yowko.com/fluentd-elasticsearch-index-name/</link><pubDate>Thu, 30 Apr 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/fluentd-elasticsearch-index-name/</guid><description>Fluentd 指定 Elasticsearch Index 名稱 最近在 debug Fluentd parser 時老是覺得 log 沒進到 Elasticsearch，後來索性把預設的 index 換掉，至少一眼就看得出來 index 有沒有被建立起來 - Fluentd 是不</description></item><item><title>避免 Ansible 無法存取第一次登入的 Server</title><link>https://blog.yowko.com/ansible-bypass-fingerprint-check/</link><pubDate>Sat, 25 Apr 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-bypass-fingerprint-check/</guid><description>避免 Ansible 無法存取第一次登入的 Server 之前開始透過 Ansible 來安裝一組 server，原本想說腳本大致上也調得差不多了，結果新 server 一來，ansible playbook 所有 task 都沒</description></item><item><title>快速建立 EFK (Elasticsearch Fluentd Kibana) 環境</title><link>https://blog.yowko.com/docker-efk/</link><pubDate>Sun, 19 Apr 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-efk/</guid><description>快速建立 EFK (Elasticsearch Fluentd Kibana) 環境 在之前筆記 Fluentd 使用自定 Log 時間當做 Timestamp 中提到為了要測試 fluentd forwarder 的自訂 parser rule，所以偷懶使用 github 上的 docker-compose (Elastic stack (ELK) on Docker)來快速建</description></item><item><title>在 Debian container 中安裝 .NET Core SDK</title><link>https://blog.yowko.com/debian-container-install-dotnet-core-sdk/</link><pubDate>Mon, 13 Apr 2020 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/debian-container-install-dotnet-core-sdk/</guid><description>在 Debian container 中安裝 .NET Core SDK 之前筆記 在 Debian container 中無法成功註冊微軟金鑰 提到想要在 container 中利用 dotnet cli 做些測試，但經過 multi-stage builds 來建立 image 中只有 .NET Core runtime 沒有需要的 dotnet cli，所以</description></item><item><title>在 Debian container 中無法成功註冊微軟金鑰</title><link>https://blog.yowko.com/debian-container-broken-pipe/</link><pubDate>Mon, 13 Apr 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/debian-container-broken-pipe/</guid><description>在 Debian container 中無法成功註冊微軟金鑰 最近部署在 debian base 中的 .NET Core application 有些異常，所以打算在 container 中使用 dotnet cli 做些測試，不過身為追求 Container 優化的工程師，一定是使用 multi-stage builds 來建</description></item><item><title>取得 Consul 中的 Key/Value</title><link>https://blog.yowko.com/consul-kv-without-encoding/</link><pubDate>Sat, 11 Apr 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/consul-kv-without-encoding/</guid><description>取得 Consul 中的 kv 值 最近沒做什麼專案，大部份時間都在擔任 SRE，所以常常需要確認環境設定，因此打算簡單紀錄些平常工作用到的指令，避免每次急著要用時</description></item><item><title>在 Helm 中依不同變數使用不同設定值</title><link>https://blog.yowko.com/helm-values-by-env/</link><pubDate>Wed, 08 Apr 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/helm-values-by-env/</guid><description>在 Helm 中依不同變數使用不同設定值 Helm 使為一個 Kubernetes package 管理工具，在我的理解中它就是一個用來定義 Kubernetes 上的 application 如何進行部署、設定的 template，在不同環境</description></item><item><title>讓 Kafka 達成 Broadcast 效果</title><link>https://blog.yowko.com/kafka-broadcast-assign/</link><pubDate>Sun, 05 Apr 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-broadcast-assign/</guid><description>讓 Kafka 達成 Broadcast 效果 Kafka 在處理訊息上主要是透過 Consumer GroupId + Topic + Partition 做為 Unique 的派送訊息基準，預設(未指定 Partition)下會由 Kafka 自行決定 Partition 在上述的原則下，如</description></item><item><title>使用 grpcurl 使用 Timestamp 參數呼叫 gRPC Service</title><link>https://blog.yowko.com/grpcurl-timestamp/</link><pubDate>Mon, 09 Mar 2020 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpcurl-timestamp/</guid><description>使用 grpcurl 使用 Timestamp 參數呼叫 gRPC Service 之前筆記 使用 grpcurl 呼叫 gRPC Service 紀錄到使用 grpcurl 就可以不用 gui 工具以及自行撰寫程式來呼叫 gRPC Service，正以為可以順利解決問題時發</description></item><item><title>使用 grpcurl 呼叫 gRPC Service</title><link>https://blog.yowko.com/grpcurl/</link><pubDate>Sat, 07 Mar 2020 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpcurl/</guid><description>使用 grpcurl 呼叫 gRPC Service 一般情況下測試 gRPC 服務，我大多是透過簡易的 console 直接呼叫 (一來可以順便檢查程式，二來 stream 相關功能比較齊全)，如果想要測試的功能只是 simple call</description></item><item><title>使用 Ansible 安裝 InfluxDB 並建立 User，Database，Retention Policy</title><link>https://blog.yowko.com/ansible-influxdb-create-user-database-rententionpolicy/</link><pubDate>Sun, 01 Mar 2020 15:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-influxdb-create-user-database-rententionpolicy/</guid><description>使用 Ansible 安裝 InfluxDB 並建立 User，Database，Retention Policy 之前筆記 使用 Ansible 安裝 InfluxDB 紀錄到如何使用 Ansible 來安裝 InfluxDB，也提到透過 Ansible 安</description></item><item><title>使用 Ansible 安裝 InfluxDB</title><link>https://blog.yowko.com/ansible-install-influxdb/</link><pubDate>Sun, 01 Mar 2020 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-install-influxdb/</guid><description>使用 Ansible 安裝 InfluxDB 最近安裝實際 service instance 環境大多都用上了 Ansible，原本透過 Helm 安裝的 InfluxDB container 也想透過 Ansible 來建立實體 instance 不再使用 container，快速筆記一</description></item><item><title>Ansible 使用 Here document (cat &lt;&lt; EOF) 遇到的問題</title><link>https://blog.yowko.com/ansible-cat-eof/</link><pubDate>Sun, 01 Mar 2020 09:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-cat-eof/</guid><description>Ansible 使用 Here document (cat &amp;lt;&amp;lt; EOF) 遇到的問題 這是在嘗試使用 Ansible 來輸出多行 config 時遇到的問題，實際例子可以參考 在 CentOS 7 上安裝 Redis Replication (Redis 5) 其中要準備 redis.conf 的部份就有使用到 Here document (cat &amp;lt;&amp;lt;</description></item><item><title>Ansible 透過 Http Status Code 當做檢核條件</title><link>https://blog.yowko.com/ansible-when-http-status-code/</link><pubDate>Wed, 26 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-when-http-status-code/</guid><description>Ansible 透過 Http Status Code 當做檢核條件 最近 Ansible 使用的機會較多，簡單紀錄一下平常可能遇到的情境與解決方式，一般情況下我都是透過單一個 playbook 來處理某個工作，如果需要</description></item><item><title>在 Windows 上的 ASP.NET Core 中呼叫 gRPC</title><link>https://blog.yowko.com/windows-aspnetcore-grpc/</link><pubDate>Mon, 24 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/windows-aspnetcore-grpc/</guid><description>在 Windows 上的 ASP.NET Core 中呼叫 gRPC 現在的工作主力都在 mac 上，但最近在測試功能時覺得與過去認知不同，特別用 Windows 測試一下，證實在 Windows 平台上功能與印象相同，為了日後比</description></item><item><title>在 macOS 上的 ASP.NET Core 中呼叫 gRPC</title><link>https://blog.yowko.com/macos-aspnetcore-grpc/</link><pubDate>Sun, 23 Feb 2020 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/macos-aspnetcore-grpc/</guid><description>在 macOS 上的 ASP.NET Core 中呼叫 gRPC 最近為了進行某個專案需求的 poc，需要建立基本的 gRPC Server 與 Cient，這才想到之前都是在 .NET Core 2 上使用 gRPC，還沒紀錄過 .NET Core</description></item><item><title>在 macOS 上建立開發用 .NET Core 憑證</title><link>https://blog.yowko.com/macos-dotnet-cert/</link><pubDate>Sun, 23 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/macos-dotnet-cert/</guid><description>在 macOS 上建立開發用 .NET Core 憑證 現在的 web 環境幾乎都會要求 https，這樣的改變當然也套用在開發上，像是 HTTP/2 雖然在協定本身允許非加密的 HTTP 協定，但絕大部份</description></item><item><title>Redis Rename Config 後 Sentinel 無法正確執行 Failover</title><link>https://blog.yowko.com/redis-rename-config-sentinel-not-work/</link><pubDate>Sun, 16 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/redis-rename-config-sentinel-not-work/</guid><description>Redis Rename Config 後 Sentinel 無法正確執行 Failover 有些 Redis command (e.g. KEYS,SAVE) 在執行時會 block 其他操作，在 Redis 用量小時不明顯，但 Redis 日漸龐大後，執行這些 command 時會讓 Redis 被 block 的時間愈來愈長，最後可能</description></item><item><title>使用 Ansible 安裝 Redis Replication</title><link>https://blog.yowko.com/ansible-install-redis/</link><pubDate>Fri, 14 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ansible-install-redis/</guid><description>使用 Ansible 安裝 Redis Replication 之前筆記 在 CentOS 7 上安裝 Redis Replication (Redis 5) 紀錄到使用單一 shell script 來安裝完整 Redis Replication (Master，Slave 與 Sentinell)，後來同事提到這類</description></item><item><title>在 CentOS 7 上安裝 Redis Replication (Redis 5)</title><link>https://blog.yowko.com/install-redis/</link><pubDate>Wed, 12 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-redis/</guid><description>在 CentOS 7 上安裝 Redis Replication (Redis 5) 之前筆記 安裝 Redis 時遇到的錯誤排除 紀錄到安裝 Redis Replication 時的幾個可能遇到的錯誤，經過數日小弟終於完成了初版可以一次安裝多個 Redis Replication 與 sentinel 的</description></item><item><title>安裝 Redis 時遇到的錯誤排除</title><link>https://blog.yowko.com/install-redis-error/</link><pubDate>Sun, 09 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-redis-error/</guid><description>安裝 Redis 時遇到的錯誤排除 之前筆記 使用 Yum 安裝 Redis 5 提到最近嘗試撰寫 script 在 CentOS 上建立 Redis 環境，也才發現幾個 yum package 的版本差異與 epel、ius 兩個 yum repository 的相依</description></item><item><title>[C#] 將 .NET Core 中的 Configuration 輸出為 JSON</title><link>https://blog.yowko.com/configuration-to-json/</link><pubDate>Sat, 08 Feb 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/configuration-to-json/</guid><description>[C#] 將 .NET Core 中的 Configuration 輸出為 JSON 之前筆記 [C#] 將 Dictionary 轉為 JSON 紀錄到 將 Dictionary 轉為 JSON 的方式，對 .NET Core 有些認識的朋友馬上就想到是為了處理 .NET Core Configuration，主</description></item><item><title>使用 Yum 安裝 Redis 5</title><link>https://blog.yowko.com/yum-install-redis5/</link><pubDate>Sat, 08 Feb 2020 10:30:00 +0800</pubDate><guid>https://blog.yowko.com/yum-install-redis5/</guid><description>使用 Yum 安裝 Redis 5 最近嘗試撰寫 script 在 CentOS 上建立 Redis 環境，嘗試過程中無意間發現不同的 yum repository 間有不同的 redis 套件版本，像是常用的 epel-release 上的 redis 就是 3.2.12，雖說</description></item><item><title>[C#] 將 Dictionary 轉為 JSON</title><link>https://blog.yowko.com/dictionary-to-json/</link><pubDate>Sun, 02 Feb 2020 14:30:00 +0800</pubDate><guid>https://blog.yowko.com/dictionary-to-json/</guid><description>[C#] 將 Dictionary 轉為 JSON 之前筆記 [C#] 將 JSON 轉為 Dictionary 紀錄到如果將 JSON file 轉為 C# 的 Dictionary 來做後續加工處理，當然有 JSON to Dictionary 就需要有 Dictionary to JSON 囉 基本環境說明 macOS Catalina 10.15.2 .NET Core SDK 3.1.101 C# 8.0 程式碼</description></item><item><title>[C#] 將 JSON 轉為 Dictionary</title><link>https://blog.yowko.com/json-to-dictionary/</link><pubDate>Sat, 01 Feb 2020 14:30:00 +0800</pubDate><guid>https://blog.yowko.com/json-to-dictionary/</guid><description>[C#] 將 JSON 轉為 Dictionary 使用 JSON 做為避免在程式中寫死固定值的解決方案是種常見做法，不過一旦系統日漸龐大複雜起來時，可能就需要有良好的管理方式或是流程，像是</description></item><item><title>將 ConfigMap 做為 Helm volume mount 的來源</title><link>https://blog.yowko.com/configmap-helm-volume-mount/</link><pubDate>Wed, 29 Jan 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/configmap-helm-volume-mount/</guid><description>將 ConfigMap 做為 Helm volume mount 的來源 有用過 container 的朋友相信對於 volume mount 有一定的了解，如果有用過 db 類型的 container (mysql、mongodb&amp;hellip;) 對於透過 docker-entrypoint-initdb.d 來建</description></item><item><title>使用 Docker 版 Nginx 建立靜態頁面網站</title><link>https://blog.yowko.com/nginx-docker-static-html/</link><pubDate>Wed, 29 Jan 2020 14:30:00 +0800</pubDate><guid>https://blog.yowko.com/nginx-docker-static-html/</guid><description>使用 Docker 版 Nginx 建立靜態頁面網站 最近經手的小專案，需要一個呈現靜態頁面的網站，因為需要動態改變網站上顯示頁面的 routing 所以第一時間還是想到透過 ASP.NET Core 的機制</description></item><item><title>將打包好的 Helm Chart Push 至 Nexus</title><link>https://blog.yowko.com/helm-push-nexus/</link><pubDate>Tue, 28 Jan 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/helm-push-nexus/</guid><description>將打包好的 Helm Chart Push 至 Nexus 之前筆記 打包 Helm Chart 簡單紀錄該如何打包 Helm Chart，但打包後的 Helm Chart 如果無法提供其他 server 使用就失去意義了，所以延伸紀錄將打包後的</description></item><item><title>打包 Helm Chart</title><link>https://blog.yowko.com/helm-package/</link><pubDate>Mon, 27 Jan 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/helm-package/</guid><description>打包 Helm Chart 最近專案常需要調整或建立 Helm Chart，但畢竟還不是很熟悉，常常用完一次過沒幾天就又忘記語法，同事都快被我煩死了，趁著假日簡單紀錄一下</description></item><item><title>從 mac 使用 Container Ip 直連 (更新版)</title><link>https://blog.yowko.com/mac-access-container-via-ip/</link><pubDate>Tue, 14 Jan 2020 22:20:00 +0800</pubDate><guid>https://blog.yowko.com/mac-access-container-via-ip/</guid><description>從 mac 使用 Container Ip 直連 (更新版) 之前筆記 從 mac 使用 Container Ip 直連 紀錄到如何在 mac 上直接透過 container ip 存取相關服務，不過設定過程還需要動用到 Kubernetes，讓</description></item><item><title>如何看到不可視字元</title><link>https://blog.yowko.com/show-invisible-char/</link><pubDate>Mon, 13 Jan 2020 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/show-invisible-char/</guid><description>如何看到不可視字元 今天同事遇到個奇異現象：編輯器上看來完全正常的檔案內容，實際執行時卻出現錯誤訊息；刪除提示錯誤位置後重新輸入，git 還真的</description></item><item><title>不 Pull Image 直接新增 Image Tag</title><link>https://blog.yowko.com/add-tag-without-pulling/</link><pubDate>Wed, 08 Jan 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/add-tag-without-pulling/</guid><description>不 Pull Image 直接新增 Image Tag 最近發現整個 CI/CD 的流程耗時愈來愈長，雖說隨著愈來愈多的功能、測試，時間變長是可以預期的，但還是想要儘可能做些優化，同事在檢查</description></item><item><title>使用 Docker 建立 Nexus3 的 Image Registry</title><link>https://blog.yowko.com/nexus-docker-image-rergistry/</link><pubDate>Tue, 07 Jan 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/nexus-docker-image-rergistry/</guid><description>使用 Docker 建立 Nexus3 的 Image Registry Nexus 全名是 nexus repository oss 是套免費 (有付費的 pro 版，差異請參考 COMPARE to PRO VERSION) 產出物倉庫，支援多種類型產出物(摘錄至 Manage these formats) Bower Docker Git LFS Maven npm NuGet PyPI Ruby Gems Yum</description></item><item><title>解決 Helm init 時出現找不到 tiller pod 問題</title><link>https://blog.yowko.com/helm-init-could-not-find-ready-tiller/</link><pubDate>Thu, 26 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/helm-init-could-not-find-ready-tiller/</guid><description>解決 Helm init 時出現找不到 tiller pod 問題 這是在嘗試 Docker for Mac 上的 Kubernetes 與 Helm 時遇到的問題，成功版的安裝過程可以參考之前筆記 在Docker for Mac 啟用Kubernete</description></item><item><title>讓 iOS 裝置可以存取自訂 domain</title><link>https://blog.yowko.com/ios-private-domain/</link><pubDate>Wed, 25 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/ios-private-domain/</guid><description>讓 iOS 裝置可以存取自訂 domain 近幾年行動裝置的瀏覽量佔比有愈來愈高的趨勢，身為 web 工程師也得朝著 mobile first 的方向做調整優化，所以在不同行動裝置上做測試也在</description></item><item><title>從 mac 使用 Container Ip 直連</title><link>https://blog.yowko.com/mac-access-container-ip-host/</link><pubDate>Sun, 22 Dec 2019 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/mac-access-container-ip-host/</guid><description>從 mac 使用 Container Ip 直連 大約一年前開發環境從 Windows 轉換至 mac 後，開發上最痛苦的就是沒有 Visual Studio 可以用，痛苦指數第二高的我個人認為是 Docker for Mac 沒有 docker0 網卡 (這是已知的</description></item><item><title>在 Docker for Mac 啟用 Kubernetes 後安裝 Helm</title><link>https://blog.yowko.com/docker-mac-kubernetes-helm/</link><pubDate>Sun, 22 Dec 2019 10:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-mac-kubernetes-helm/</guid><description>在 Docker for Mac 啟用 Kubernetes 後安裝 Helm 在之前筆記 在Docker for Mac 上啟用Kubernetes 中曾經紀錄到如果想在 mac 中嘗試 Kubernetes 可以透過 Docker Desktop for Mac 的內建功能來啟用 Kubernetes</description></item><item><title>使用 Homebrew 安裝舊版 Helm</title><link>https://blog.yowko.com/brew-install-specific-version-helm/</link><pubDate>Sat, 21 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/brew-install-specific-version-helm/</guid><description>使用 Homebrew 安裝舊版 Helm 前幾天筆記 使用 Homebrew 安裝舊版工具 紀錄到使用 Homebrew 來安裝舊版本工具(筆記中以 mariadb 為例)，這幾天在 mac 上測試 Helm 功能時，需要配合團隊目前技術使</description></item><item><title>使用 Homebrew 安裝舊版工具</title><link>https://blog.yowko.com/brew-install-old-version/</link><pubDate>Sat, 21 Dec 2019 20:30:00 +0800</pubDate><guid>https://blog.yowko.com/brew-install-old-version/</guid><description>使用 Homebrew 安裝舊版工具 前幾天筆記 使用 Homebrew Cask 安裝舊版本軟體 紀錄到使用 Homebrew Cask 來安裝舊版本的 .NET SDK，這幾天在 mac 上測試功能時，為了配合團隊目前技術而需要 Homebrew</description></item><item><title>使用客製 config 在 kubenetes 上建立 Redis cluster</title><link>https://blog.yowko.com/redis-config-cluster-kubernetes/</link><pubDate>Tue, 17 Dec 2019 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/redis-config-cluster-kubernetes/</guid><description>使用客製 config 在 kubenetes 上建立 Redis cluster 之前筆記 在 Kubernetes 部署 Redis Cluster 紀錄到如何使用 KubeDB Operator 來建立 redis cluster，不過之前筆記內容是透過預設值來進行安裝與設定，而在面對</description></item><item><title>JetBrains Rider 在升級 .NET Core 3.1 後無法編譯紀錄 (更新)</title><link>https://blog.yowko.com/rider-dotnetcore31-cannot-build/</link><pubDate>Sat, 14 Dec 2019 15:30:00 +0800</pubDate><guid>https://blog.yowko.com/rider-dotnetcore31-cannot-build/</guid><description>JetBrains Rider 在升級 .NET Core 3.1 後無法編譯紀錄 (更新) 前幾天的筆記 JetBrains Rider 在升級 .NET Core 3.1 後無法編譯紀錄 提到在升級 .NET Core SDK 3.1.100 我就無法成功透過 JetBrains Rider 來 build project (無論是既有專案</description></item><item><title>使用 Homebrew Cask 安裝舊版本軟體</title><link>https://blog.yowko.com/homebrew-cask-install-older-version/</link><pubDate>Fri, 13 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/homebrew-cask-install-older-version/</guid><description>使用 Homebrew Cask 安裝舊版本軟體 前幾天筆記 JetBrains Rider 在升級 .NET Core 3.1 後無法編譯紀錄 簡單紀錄到在 macOS 上升級 .NET Core 3.1 後，JetBrains Rider 無法 build 的狀況，經同事反應各式</description></item><item><title>C# 使用 Lua 取得 Redis 自訂複雜型別</title><link>https://blog.yowko.com/csharp-lua-redis-custom-type/</link><pubDate>Mon, 09 Dec 2019 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-lua-redis-custom-type/</guid><description>C# 使用 Lua 取得 Redis 自訂複雜型別 之前筆記 在 Redis 中使用 Lua 的 Dictionary 紀錄到在 Redis 中使用 Lua 時可以如何模擬並使用 Dictionary，而筆記最後也提到透過這樣的方式</description></item><item><title>C# - Property 與 Value 的 Dictionary 轉為 Object</title><link>https://blog.yowko.com/property-value-dictionary-to-object/</link><pubDate>Mon, 09 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/property-value-dictionary-to-object/</guid><description>C# - Property 與 Value 的 Dictionary 轉為 Object 之前筆記 C# - 將 Object 的 Property 與 Value 轉換為 Dictionary 紀錄到將 C# object 的 property name 與 value 透過 dictionary 的資料型態存放，當時主要是為了配合 InfluxDB 的 insert 而做的筆記 ，想不到時</description></item><item><title>JetBrains Rider 在升級 .NET Core 3.1 後無法編譯紀錄</title><link>https://blog.yowko.com/rider-dotnetcore3-cannot-build/</link><pubDate>Sat, 07 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/rider-dotnetcore3-cannot-build/</guid><description>JetBrains Rider 在升級 .NET Core 3.1 後無法編譯紀錄 已有更新版本，請參考 JetBrains Rider 在升級 .NET Core 3.1 後無法編譯紀錄 (更新) 前幾天 .NET Core 3.1 正式 release 了，身為新技術的愛好者，當然是立馬</description></item><item><title>ZeroBraneStudio 無法在 macOS Catalina 中開啟？！</title><link>https://blog.yowko.com/zerobranestudio-macos-catalina/</link><pubDate>Thu, 05 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/zerobranestudio-macos-catalina/</guid><description>ZeroBraneStudio 無法在 macOS Catalina 中開啟？！ 上個禮拜專案終於告個段落，立馬按下了幾個 pending 的更新，其中一個就是 macOS Catalina，基本上使用沒有發生異常，但許多軟體設</description></item><item><title>Polly retry 之後的行為是？</title><link>https://blog.yowko.com/polly-after-retry/</link><pubDate>Sun, 01 Dec 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/polly-after-retry/</guid><description>Polly retry 之後的行為是？ 同事在追查 bug 時，問到在執行某個動作時使用的 Polly policy 來進行失敗重試，如果 policy 中設定的 retry 次數結束仍然失敗會發生什麼事？ 印象中之前測試</description></item><item><title>在 CentOS 上使用 Kafkacat</title><link>https://blog.yowko.com/centos-kafkacat/</link><pubDate>Sun, 01 Dec 2019 10:30:00 +0800</pubDate><guid>https://blog.yowko.com/centos-kafkacat/</guid><description>在 CentOS 上使用 Kafkacat 原文做法已失敗，請參考 在 CentOS 上使用 Kafkacat (更新) : 使用 container (更新版) 之前筆記 在CentOS 上安裝 Apache Kafka cluster 與 在 CentOS 上安裝 Apache Kafka cluster - One Script 都紀錄到如</description></item><item><title>在 CentOS 上安裝 Apache Kafka cluster - One Script</title><link>https://blog.yowko.com/kafka-cluster-centos-script/</link><pubDate>Fri, 29 Nov 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-cluster-centos-script/</guid><description>在 CentOS 上安裝 Apache Kafka cluster - One Script 之前筆記 在CentOS 上安裝 Apache Kafka cluster 紀錄到如何在CentOS 上安裝 Apache Kafka cluster，簡單說明了有哪些設定需要做修改以及</description></item><item><title>C# (.NET Core 2) 啟用 gRPC 壓縮</title><link>https://blog.yowko.com/dotnet-core-2-grpc-compression/</link><pubDate>Sat, 16 Nov 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-core-2-grpc-compression/</guid><description>C# (.NET Core 2) 啟用 gRPC 壓縮 目前專案在大資料量傳遞時會透過 gRPC stream，不過因為是非對稱式資料內容，採用 chunk byte 來傳輸，以避免單次 gRPC 的 message size 限制問題，但以</description></item><item><title>C# (.NET Core 2) Log 與 Trace gRPC</title><link>https://blog.yowko.com/dotnet-core-2-log-grpc/</link><pubDate>Tue, 12 Nov 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-core-2-log-grpc/</guid><description>C# (.NET Core 2) Log 與 Trace gRPC gRPC 在 .NET Core 3 被官方宣告重點發展項目之一，而身為追求系統更快更好又愛嚐鮮的工程師團隊的一員，早在一年前的 .NET Core 2 專案中就用上了 gR</description></item><item><title>在 CentOS 上安裝 Apache Kafka cluster</title><link>https://blog.yowko.com/kafka-cluster-centos/</link><pubDate>Sun, 10 Nov 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-cluster-centos/</guid><description>在 CentOS 上安裝 Apache Kafka cluster 之前筆記 在 CentOS 上安裝 Apache ZooKeeper cluster 紀錄到如何建立 ZooKeeper 的 cluster，雖然 ZooKeeper 還有其他用途，不過我主要打算用來與 Kafka 搭配做為 Message Queue，單</description></item><item><title>在 CentOS 上安裝 Apache ZooKeeper cluster</title><link>https://blog.yowko.com/zookeeper-cluster-centos/</link><pubDate>Sat, 02 Nov 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/zookeeper-cluster-centos/</guid><description>在 CentOS 上安裝 Apache ZooKeeper cluster 之前開發時都透過 dcoker 來啟動，最近才猛然想起我沒有實際安裝過 Apache ZooKeeper cluster，趕緊趁著假日空閒時間惡補一下 Apache ZooKeeper cluster 安裝 只是小弟既</description></item><item><title>在 Redis 中使用 Lua 的 Dictionary</title><link>https://blog.yowko.com/redis-lua-dictionary/</link><pubDate>Sat, 26 Oct 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/redis-lua-dictionary/</guid><description>在 Redis 中使用 Lua 的 Dictionary 最近幾周一直在趕專案進度，也累積了好幾篇筆記沒有動手，想著如果再不紀錄可能就想不起來當時遇到問題的情境了 ~~~ 最近專案主要都是使</description></item><item><title>ASP.NET Core gRPC 無法在 macOS 上啟動？！</title><link>https://blog.yowko.com/aspdotnet-core-grpc-macos/</link><pubDate>Sat, 28 Sep 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-grpc-macos/</guid><description>ASP.NET Core gRPC 無法在 macOS 上啟動？！ 隨著 .NET Core 3 正式發表，也代表 gRPC 相關功能開始內建在 ASP.NET Core 3 中並由官方直接支援，前幾個月專案在團隊進行效能評估後已率先於 .NET Core</description></item><item><title>[Benchmark] 使用 C# 對 InfluxDB insert 操作的效能數據</title><link>https://blog.yowko.com/csharp-influxdb-benchmark/</link><pubDate>Sun, 22 Sep 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-influxdb-benchmark/</guid><description>[Benchmark] 使用 C# 對 InfluxDB insert 操作的效能數據 之前筆記 使用 C# 存取 InfluxDB 紀錄了 C# 在 InfluxDB 的基本 CRUD，也提到新專案可能會使用 InfluxDB 儲存資料，在了解 C# 的基本用法後接著就來確</description></item><item><title>C# - 將 Object 的 Property 與 Value 轉換為 Dictionary</title><link>https://blog.yowko.com/csharp-object-to-dictionary/</link><pubDate>Sat, 21 Sep 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-object-to-dictionary/</guid><description>C# - 將 Object 的 Property 與 Value 轉換為 Dictionary 之前筆記 使用 C# 存取 InfluxDB 提到正在嘗試導入 InfluxDB，POC 使用到的 library - InfluxData.Net 在儲存資料時僅接受 Dictionary，如</description></item><item><title>使用 C# 存取 InfluxDB</title><link>https://blog.yowko.com/csharp-influxdb-curd/</link><pubDate>Sun, 15 Sep 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-influxdb-curd/</guid><description>使用 C# 存取 InfluxDB 最近專案可能會用到 InfluxDB，之前嘗試過的經驗主要是用在監控上，不是直接使用 C# 存取，所以趁著專案開始前先試試看可以如何存取</description></item><item><title>設定 Azure Portal 存取 Azure Storage Files</title><link>https://blog.yowko.com/azure-portal-access-azure-files/</link><pubDate>Sat, 14 Sep 2019 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/azure-portal-access-azure-files/</guid><description>設定 Azure Portal 存取 Azure Storage Files 一直以來我需要 Linux 環境時都是建立在 Azure 上，一來是沒有自己的硬體，二來是可以無痛快速重建整個環境，練習 Kubernetes 更是如此，可以滿足動態增</description></item><item><title>[JMeter] 跨 Thread 取得變數內容 - 設定 Load Test 的前置動作</title><link>https://blog.yowko.com/jmeter-set-get-variable-cross-thread/</link><pubDate>Wed, 11 Sep 2019 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/jmeter-set-get-variable-cross-thread/</guid><description>[JMeter] 跨 Thread 取得變數內容 - 設定 Load Test 的前置動作 之前筆記 [JMeter] 從 Http Response Body 解密 Token 做為 Http Request Header 參數 紀錄到使用 JSR223 PostProcessor 來針對加密的 response body 做解密後再設定為 JMeter 的參數供後續其他</description></item><item><title>[JMeter] 從 Http Response Body 解密 Token 做為 Http Request Header 參數</title><link>https://blog.yowko.com/jmeter-decrypt-to-parameter/</link><pubDate>Tue, 10 Sep 2019 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/jmeter-decrypt-to-parameter/</guid><description>[JMeter] 從 Http Response Body 解密 Token 做為 Http Request Header 參數 之前筆記 [JMeter] 取得 JSON Token 做為 Http Request Header 參數 紀錄到如何在測試目標 Api 前先執行 login 取得 token 後當做目標 api 的 header，當時有提到實</description></item><item><title>docker images 指令筆記</title><link>https://blog.yowko.com/docker-images-command/</link><pubDate>Sun, 08 Sep 2019 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-images-command/</guid><description>docker images 指令筆記 最近內部的 docker registry 在團隊努力地開發下，images 增長的速度相當地快速，不僅讓空間消耗快速，也讓整個 docker registry 顯得雜亂，於是我就在調整 docker registry</description></item><item><title>[JMeter] 取得 JSON Token 做為 Http Request Header 參數</title><link>https://blog.yowko.com/jmeter-json-parameter/</link><pubDate>Mon, 02 Sep 2019 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/jmeter-json-parameter/</guid><description>[JMeter] 取得 JSON Token 做為 Http Request Header 參數 一般公開對外的 REST API 基於安全性考量都會有認驗證機制，做法很多，其中一種做法就是透過使用指定格式來取得 token，後續的</description></item><item><title>在 Mac 上安裝 JMeter</title><link>https://blog.yowko.com/mac-jmeter/</link><pubDate>Wed, 28 Aug 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mac-jmeter/</guid><description>在 Mac 上安裝 JMeter 之前只在 Windows 安裝過 JMeter，沒有 Mac 上的 JMeter 使用經驗，趁著最近專案需要順手紀錄一下遇到的問題 關於 JMeter Apache JMeter 是一個 Apache 專案，目的是用來作 load</description></item><item><title>在 Kubernetes 部署 Redis Cluster</title><link>https://blog.yowko.com/kubernetes-redis-cluster/</link><pubDate>Thu, 15 Aug 2019 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubernetes-redis-cluster/</guid><description>在 Kubernetes 部署 Redis Cluster 請使用新版安裝方式，請參考 使用 Helm 安裝 Redis Cluster 最近在 Kubernetes 上部暑相關基礎服務，大部份的服務都有對應的 Helm 可以使用，沒有遇到太多問題，唯獨 Re</description></item><item><title>需要在 return 前自行 new ValueTask 嗎？</title><link>https://blog.yowko.com/new-valuetask-or-not/</link><pubDate>Sun, 11 Aug 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/new-valuetask-or-not/</guid><description>需要在 return 前自行 new ValueTask 嗎？ 上個月黑大的 閱讀筆記 - 使用 .NET Async/Await 的常見錯誤 跟同事討論起 ValueTask 的用法，大意是 ValueTask 在使用上只需要將方法簽章改為 ValueTask&amp;lt;T&amp;gt; 就好嗎？ 還是應該在</description></item><item><title>使用 Kubespray 開啟 Kubernetes Dashboard</title><link>https://blog.yowko.com/kubespray-kubernetes-dashboard/</link><pubDate>Sat, 10 Aug 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubespray-kubernetes-dashboard/</guid><description>使用 Kubespray 開啟 Kubernetes Dashboard 前同事問到 Kubernetes Dashboard 安裝的問題，這才發現我只用過別人裝好的，自己沒有真的裝過 XD，趁著假日時間紀錄一下囉 Kubernetes Dashboard 是 Kubernetes 官方製作用來管理 Kubernetes clusters</description></item><item><title>建立 Redis Cluster (Redis 5)</title><link>https://blog.yowko.com/create-redis-cluster/</link><pubDate>Fri, 09 Aug 2019 18:30:00 +0800</pubDate><guid>https://blog.yowko.com/create-redis-cluster/</guid><description>建立 Redis Cluster (Redis 5) 最近在部署上線用的各項服務，其中一個就是近幾年系統中不可獲缺的 redis，目前團隊打算採用 Redis Cluster 來增加 redis 處理效能及水平擴展能力，只</description></item><item><title>MongoDB CPU High 問題追查紀錄</title><link>https://blog.yowko.com/mongodb-cpu-high/</link><pubDate>Sun, 04 Aug 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-cpu-high/</guid><description>MongoDB CPU High 問題追查紀錄 在之前筆記 取得 MongoDB SDK 實際產生的指令 中提到是為了追查 MongoDB 的效能問題而需要取得 MongoDB driver 實際產生的 script，既然 script 已經順利取得，就可</description></item><item><title>取得 MongoDB SDK 實際產生的指令</title><link>https://blog.yowko.com/mongodb-interceptor/</link><pubDate>Sat, 03 Aug 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-interceptor/</guid><description>取得 MongoDB SDK 實際產生的指令 之前曾經在 取得 Entity Framework 存取 DB 時的實際 SQL Script 提到如果都透過 EntityFramework 來存取 DB，有時候遇到的效能瓶頸是因為 EntityFramework 沒有使用正確的 index 或是執行計</description></item><item><title>gRPC stream 如何傳送單一大物件 (Client 版)</title><link>https://blog.yowko.com/grpc-stream-chunk-client/</link><pubDate>Thu, 01 Aug 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-stream-chunk-client/</guid><description>gRPC stream 如何傳送單一大物件 (Client 版) 繼之前筆記 gRPC stream 如何傳送單一大物件 提到該如何使用 gRPC stream 來傳送不是整齊 collection 物件後，公司專案已逐步將可能傳送超出預設 4mb 限制</description></item><item><title>.Net Core 操作 MongoDB 出現 MongoWaitQueueFullException</title><link>https://blog.yowko.com/csharp-mongodb-waitqueuefullexception/</link><pubDate>Sun, 28 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-mongodb-waitqueuefullexception/</guid><description>.Net Core 操作 MongoDB 出現 MongoWaitQueueFullException 之前筆記 在 Docker Compose file 3 下限制 CPU 與 Memory 中提到同事反應說某個專案在執行時會造成 MongoDB CPU high，最後引發 docker service crash，一直沒有找到 root ca</description></item><item><title>在 Docker Compose file 3 下限制 CPU 與 Memory</title><link>https://blog.yowko.com/docker-compose-3-cpu-memory-limit/</link><pubDate>Wed, 24 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-compose-3-cpu-memory-limit/</guid><description>在 Docker Compose file 3 下限制 CPU 與 Memory 這幾天某個 job 在進行最終階段測試時發現用到的某個 container 會出現 cpu high 的現象，而且狀況嚴重到會讓 docker process cpu 衝到 400% 以上，接著 docker service 掛了 XD</description></item><item><title>Test 中驗證 Object 是否相同的方法</title><link>https://blog.yowko.com/object-compare-in-test/</link><pubDate>Tue, 23 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/object-compare-in-test/</guid><description>Test 中驗證 Object 是否相同的方法 最近花了不少時間在重構先前專案中的 Unit Test 與 Integration Test，其中對於 reference type 的物件比對有幾種不同的寫法 當然我個人大多配合團隊規範</description></item><item><title>從 Mac 移除 .NET Core Runtime 與 SDK</title><link>https://blog.yowko.com/remove-dotnet-from-mac/</link><pubDate>Mon, 22 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/remove-dotnet-from-mac/</guid><description>從 Mac 移除 .NET Core Runtime 與 SDK 2024-02-21 更新版，請參考 從 macOS 中移除 .NET Runtime 與 SDK 可以不時更新 .NET Core SDK 是幸福，也是痛苦; 幸福的是可以使用新的語言特性或是新功能，而痛苦的是不</description></item><item><title>在 Docker for Mac 上啟用 Kubernetes</title><link>https://blog.yowko.com/docker-for-mac-kubernetes/</link><pubDate>Sun, 21 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-for-mac-kubernetes/</guid><description>在 Docker for Mac 上啟用 Kubernetes 現在工作的部暑都是透過 Kubernetes 來執行，不過我還是常常會卡東卡西，又不能老是使用團隊環境來練習，加上工作內部的資料也無法部署至自己建</description></item><item><title>使用 Homebrew 安裝 Docker</title><link>https://blog.yowko.com/homebrew-docker/</link><pubDate>Sat, 20 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/homebrew-docker/</guid><description>使用 Homebrew 安裝 Docker 現在工作上都是使用 mac，但為了保留可以比較 macOS 與 Windows 在部份行為上的差異，自己的家用電腦一直都是 macbook pro 使用 bootcamp 開機直接進入 Windows 10，最近因</description></item><item><title>在 Kubernetes 上使用 Helm 安裝 Istio</title><link>https://blog.yowko.com/kubernetes-helm-istio/</link><pubDate>Sun, 14 Jul 2019 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubernetes-helm-istio/</guid><description>在 Kubernetes 上使用 Helm 安裝 Istio 其實對於 Istio 到底解決了什麼問題，我沒有把握可以講得很清楚，就我粗淺地理解是為了更有效地簡化 Pod 間的溝通與管理，但好壞都要等實際</description></item><item><title>透過 Kubespray 在 Kubernetes 上安裝 Helm</title><link>https://blog.yowko.com/kubespray-helm/</link><pubDate>Sun, 14 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubespray-helm/</guid><description>透過 Kubespray 在 Kubernetes 上安裝 Helm 經過一段時間的發展 Kubernetes 目前是 container 調度工具中最受重視的，不過 Kubernetes 只是用來管理 container 的調度，該如何決定調度的計劃以及內容就成了新課題，而</description></item><item><title>透過 Kubespray 來架設 Kubernetes</title><link>https://blog.yowko.com/kubespray-kubernetes/</link><pubDate>Sat, 13 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kubespray-kubernetes/</guid><description>透過 Kubespray 來架設 Kubernetes 最近剛好有機會可以參與專案的部署作業，雖然過去也持續進行過不同方式的 CI/CD，但真正部署至 Kubernetes 上則是全新的體驗，為了降低扯團隊</description></item><item><title>gRPC stream 如何傳送單一大物件</title><link>https://blog.yowko.com/grpc-stream-big-object/</link><pubDate>Sun, 07 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-stream-big-object/</guid><description>gRPC stream 如何傳送單一大物件 之前筆記 C# 搭配 gRPC 中使用 stream RPC 提到為了對於較大資料量以及即時性資料內容，可以透過 gRPC 的 stream RPC 來處理，不過官方範例是用在傳送 repeated 內</description></item><item><title>C# 中使用 Protocol Buffers 協定來序列化與反序列化物件</title><link>https://blog.yowko.com/csharp-protobuf-serialize-deserialize/</link><pubDate>Sat, 06 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-protobuf-serialize-deserialize/</guid><description>C# 中使用 Protocol Buffers 協定來序列化與反序列化物件 專案上剛好需要將 object 進行序列化，過去常用的方式都是序列為 json，後來同事覺得既然都使用 protobuf 了，為什麼不直</description></item><item><title>ASP.NET Core WebAPI 回應 406 Not Acceptable</title><link>https://blog.yowko.com/aspdotnetcore-webapi-406-not-acceptable/</link><pubDate>Sun, 30 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnetcore-webapi-406-not-acceptable/</guid><description>ASP.NET Core WebAPI 回應 406 Not Acceptable 照著之前筆記 從 Empty 建立 ASP.NET Core Web API 從空專案開始建立 ASP.NET Core WebAPI ，過程中一切順利直到開始加入商業邏輯時卻出現意料外的錯誤，雖然事後覺得我應</description></item><item><title>從 Empty 建立 ASP.NET Core Web API</title><link>https://blog.yowko.com/add-webapi-to-aspdotnetcore-empty/</link><pubDate>Sat, 29 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/add-webapi-to-aspdotnetcore-empty/</guid><description>從 Empty 建立 ASP.NET Core Web API 之前曾經在筆記 建立ASP.NET Web API 專案的幾種方式- Yowko&amp;rsquo;s Notes 提到專案的起源分為兩派： 使用 Empty 專案範本再手動安裝需要的 framework 直接使用需要</description></item><item><title>gRPC 出現 `8 RESOURCE_EXHAUSTED` 錯誤</title><link>https://blog.yowko.com/grpc-8-resource-exhausted/</link><pubDate>Sun, 23 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/grpc-8-resource-exhausted/</guid><description>gRPC 出現 8 RESOURCE_EXHAUSTED 錯誤 隨著系統一步步成形，資料量也愈來愈大，在原本只是先求功能正常而未進行資料分頁的功能逐漸露出原型，今天就來筆記 gRPC 在傳送龐大資料可</description></item><item><title>在 ASP.NET Core 中將 log 寫至 GCP 的 Stackdriver</title><link>https://blog.yowko.com/aspdotnet-core-log-stackdriver/</link><pubDate>Sat, 22 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-log-stackdriver/</guid><description>在 ASP.NET Core 中將 log 寫至 GCP 的 Stackdriver 之前剛好有個功能在內部環境運作時都一直出現錯誤，經過一輪測試後決定將功能搬至 GCP 的 GKE 上執行來確認問題是不是內部環境設定所</description></item><item><title>嘗試為gRPC 中的 stream RPC 加上 Unit Test</title><link>https://blog.yowko.com/csharp-grpc-stream-unit-test/</link><pubDate>Wed, 19 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-grpc-stream-unit-test/</guid><description>嘗試為gRPC 中的 stream RPC 加上 Unit Test 之前筆記 C# 搭配 gRPC 中使用 stream RPC 紀錄到在 gRPC 中使用 stream RPC 的操作語法，但實際應用在專案上時卻卡關，主因是單元測試出現錯誤，</description></item><item><title>C# 搭配 gRPC 中使用 stream RPC</title><link>https://blog.yowko.com/csharp-grpc-stream/</link><pubDate>Sun, 16 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-grpc-stream/</guid><description>C# 搭配 gRPC 中使用 stream RPC gRPC 允許使用四種則型的 service 方法： 簡單 RPC (simple RPC) 主機端串流 RPC (server-side streaming RPC) 用戶端串流 RPC (client-side streaming RPC) 雙向串流 RPC (bidirectional streaming RPC) 過去的筆記都是使用 簡單 RPC (simple RPC</description></item><item><title>ASP.NET Core 中 Controller 與 ControllerBase 的差別</title><link>https://blog.yowko.com/aspdotnet-core-controller-controllerbase/</link><pubDate>Sun, 09 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-controller-controllerbase/</guid><description>ASP.NET Core 中 Controller 與 ControllerBase 的差別 之前筆記 ASP.NET Core 中 AddMvc() 與 AddMvcCore() 的差別 提到 AddMvc() 與 AddMvcCore() 的差別，今天剛好在整理如何從 Empty 專案加入 Web API 時聯想到似乎沒有很清楚實際差別，趁著自己查資</description></item><item><title>ASP.NET Core 中 AddMvc() 與 AddMvcCore() 的差別</title><link>https://blog.yowko.com/aspdotnet-core-addmvc-addmvccore/</link><pubDate>Sat, 08 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-addmvc-addmvccore/</guid><description>ASP.NET Core 中 AddMvc() 與 AddMvcCore() 的差別 ASP.NET Core 將過去 ASP.NET MVC 與 ASP.NET Web API 兩套 framework 整合在一起，對於開發人員是種福音：不用再想到底該引用哪個 NameSpace、不用再為該繼承哪個</description></item><item><title>調整 Kafka 中 Topic 的 Partition 數量</title><link>https://blog.yowko.com/change-kafka-topic-partition/</link><pubDate>Fri, 07 Jun 2019 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/change-kafka-topic-partition/</guid><description>調整 Kafka 中 Topic 的 Partition 數量 最近積極在針對 Kafka 做些設定調整與效能測試，其中也包含了 Topic 的 Partition 數量產生的影響，也就常常需要調整 Topic 中的 Partition 數量來檢視對效能的影響，</description></item><item><title>建立 Kafka 的 Topic</title><link>https://blog.yowko.com/create-kafka-topic/</link><pubDate>Fri, 07 Jun 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/create-kafka-topic/</guid><description>建立 Kafka 的 Topic 最近系統效能瓶頸主要落在在 Kafka 上，所以經常需要對 Kafka 做些設定調整與效能測試，而在那之前首先就是要建立 Topic，過去都是透過 kafka 預設值來</description></item><item><title>Kafka Producer 不同壓縮方式對發送速度的影響</title><link>https://blog.yowko.com/dotnet-kafka-producer-compresstype/</link><pubDate>Sun, 02 Jun 2019 19:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-kafka-producer-compresstype/</guid><description>Kafka Producer 不同壓縮方式對發送速度的影響 這兩天在測試 Kafka consumer 各項設定對於處理速度的影響 (詳細內容可以參考 Kafka Consumer 處理速度緩慢，設定調整紀實)，經過一輪比較後</description></item><item><title>Kafka Consumer 處理速度緩慢，設定調整紀實</title><link>https://blog.yowko.com/dotnet-kafka-consumer-setting/</link><pubDate>Sat, 01 Jun 2019 19:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-kafka-consumer-setting/</guid><description>Kafka Consumer 處理速度緩慢，設定調整紀實 最近專案用了 Kafka 做為中介的 message queue，近期已經陸陸續續開始準備上線的前置作業，其中一項就是壓測數據，不過 Kafka 的 consumer</description></item><item><title>使用 GenericHost 來 Host gRPC Server</title><link>https://blog.yowko.com/generichost-grpc-server/</link><pubDate>Sun, 26 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/generichost-grpc-server/</guid><description>使用 GenericHost 來 Host gRPC Server 之前筆記 在 .NET Core console 上使用 Dependency Injection - DI 提到 ASP.NET Core 有兩種 host 方式： WebHost Generic Host 而在之前另一則筆記 使用 ASP.NET Core 2.2 來 Host gRPC Server 使用到 WebHost 來 host gRPC Server，經同</description></item><item><title>使用 ASP.NET Core 2.2 來 Host gRPC Server</title><link>https://blog.yowko.com/aspdotnet-core-2-host-grpc-server/</link><pubDate>Tue, 21 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-2-host-grpc-server/</guid><description>使用 ASP.NET Core 2.2 來 Host gRPC Server 之前筆記 Protobuf 該如何處理不定型別, .NET Core 上使用 Jaeger 追蹤 gRPC 呼叫, Protobuf 時間屬性該如何表示？ 在 host gRPC Server 時都是透過 console project 來進行，但 console 專案需要使用</description></item><item><title>將 .NET Core Console 專案轉換為 ASP.NET Core</title><link>https://blog.yowko.com/dotnet-core-console-to-aspdotnet-core/</link><pubDate>Tue, 21 May 2019 19:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-core-console-to-aspdotnet-core/</guid><description>將 .NET Core Console 專案轉換為 ASP.NET Core console 因為組成簡單、建立快速，常被用來確認語法或是 POC 特定功能需求，不過一旦 POC 沒問題就會遇到程式碼彙總的狀況，如果程式碼數量</description></item><item><title>Generated Columns - MariaDB 上的 Computed Columns</title><link>https://blog.yowko.com/computed-colums-mariadb/</link><pubDate>Sun, 19 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/computed-colums-mariadb/</guid><description>Generated Columns - MariaDB 上的 Computed Columns 之前有個需求會用到合併既有的兩個欄位來進行資料檢索，當下想起了 SQL Server 上的 Computed Columns (計算欄位)，雖然後來採用了其他做法，不過既然都查</description></item><item><title>關於 ASP.NET Core IMemoryCache RegisterPostEvictionCallback 的觸發時機</title><link>https://blog.yowko.com/aspdotnet-core-imemorycache-registerpostevictioncallback/</link><pubDate>Tue, 14 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-imemorycache-registerpostevictioncallback/</guid><description>關於 ASP.NET Core IMemoryCache RegisterPostEvictionCallback 的觸發時機 同事提到想用 ASP.NET Core 的 IMemoryCache 來處理 application 本身的 cache，無奈小弟學藝不精沒有太多想法可以參與討論，所以趕緊惡補，藉這個機會學習也</description></item><item><title>讓 ASP.NET Core MVC 自行停止運作</title><link>https://blog.yowko.com/aspdotnet-core-mvc-stop-by-itself/</link><pubDate>Sun, 12 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspdotnet-core-mvc-stop-by-itself/</guid><description>讓 ASP.NET Core MVC 自行停止運作 公司專案有個系統在啟動時執行 init script，接著就等待後台管理者下指令才會有後續動作，但開發階段暫時還不會有後台管理者的</description></item><item><title>TimeZoneInfo 在 Mac/Linux 找不到 time zone ID</title><link>https://blog.yowko.com/timezoneinfo-time-zone-id-not-found/</link><pubDate>Fri, 10 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/timezoneinfo-time-zone-id-not-found/</guid><description>TimeZoneInfo 在 Mac/Linux 找不到指定 time zone ID 同事提到 TimeZoneInfo 的操作在 Linux server 會出現錯誤，想說我怎麼沒遇到立馬試試，於是發現原來是 time zone ID 在 Windows 與 Linux 不同造成的 XD 雖說可以理解，但不</description></item><item><title>將 Object 序列化為 Json 時，攤平 Json string 欄位</title><link>https://blog.yowko.com/not-serialize-json-string/</link><pubDate>Sun, 05 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/not-serialize-json-string/</guid><description>將 Object 序列化為 Json 時，攤平 Json string 欄位 在不同系統間透過 Json 來交換資料是很常見的設計，甚至在某些系統上還可以見到將 Json string 儲存在屬性中，當然有人會質疑這樣就</description></item><item><title>Fluentd 使用自定 Log 時間當做 Timestamp</title><link>https://blog.yowko.com/fluentd-log-time/</link><pubDate>Sat, 04 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/fluentd-log-time/</guid><description>Fluentd 使用自定 Log 時間當做 Timestamp 之前筆記 Fluentd 安裝 Elasticsearch Output Plugin 封裝成 Docker image 提到最近需要 debug EFK 起因就是發現 Kibana 顯示儲存在 Elasticsearch 中的時間與過濾條件都是 log 的處理時間並非 log 真正的</description></item><item><title>Fluentd 安裝 Elasticsearch Output Plugin 封裝成 Docker image</title><link>https://blog.yowko.com/fluentd-elasticsearch-docker/</link><pubDate>Thu, 02 May 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/fluentd-elasticsearch-docker/</guid><description>Fluentd 安裝 Elasticsearch Output Plugin 封裝成 Docker image 近期專案的 log 集中化採用 EFK - Elasticsearch + Fluentd + Kibana (log parser 改用 Fluentd 而非 Logstash 主要是因為 Logstash 有 memory 使用量大的問題)，這幾天發現設定上有些問題導致資料</description></item><item><title>為 .NET Core Middleware 加上 Unit Test</title><link>https://blog.yowko.com/dotnet-core-middieware-unit-test/</link><pubDate>Sun, 28 Apr 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-core-middieware-unit-test/</guid><description>為 .NET Core Middleware 加上 Unit Test .NET Core 的 Middleware 在 .NET Core 的 pipeline 中扮演了非常重要的角色，因此在實際應用上更需要確保功能與結果符合預期。第一次寫 middleware 的 unit test 順手紀錄過程，看看在</description></item><item><title>使用 Play-With-Kubernetes 服務建立 Kubernetes Cluster</title><link>https://blog.yowko.com/play-with-kubernetes-cluster/</link><pubDate>Fri, 26 Apr 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/play-with-kubernetes-cluster/</guid><description>使用 Play-With-Kubernetes 服務建立 Kubernetes Cluster 之前都是透過 Azure VM 來建立 Kubernetes 環境，使用上沒什麼問題，唯一缺點就是勞民傷財，想測個功能才來架整個 Kubernetes cluster 有點緩不濟急，但常態保留 Kubernetes Cluster</description></item><item><title>將 ASP.NET Core 部署至 Docker 中</title><link>https://blog.yowko.com/aspnet-core-docker/</link><pubDate>Wed, 24 Apr 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-core-docker/</guid><description>將 ASP.NET Core 部署至 Docker 中 最近專案在 macOS 上開發 ASP.NET Core 的 Web API，完成後再透過 Docker 包成 image 準備建立 container，流程很直覺，加上 CI CD 同事都已經準備好了，所</description></item><item><title>使用 Jaeger 追蹤 ASP.NET Core 中的 class 呼叫</title><link>https://blog.yowko.com/jaeger-trace-aspdotnet-core-class-call/</link><pubDate>Sun, 14 Apr 2019 15:30:00 +0800</pubDate><guid>https://blog.yowko.com/jaeger-trace-aspdotnet-core-class-call/</guid><description>使用 Jaeger 追蹤 ASP.NET Core 中的 class 呼叫 之前筆記 .NET Core 上使用 Jaeger 追蹤 gRPC 呼叫 與 使用 Jaeger 追蹤 ASP.NET Core 呼叫 分別紀錄到使用 Jaeger 來紀錄 gRPC call 與 ASP.NET Core Web API 的呼叫歷程內容，接著紀錄另個常</description></item><item><title>使用 Jaeger 追蹤 ASP.NET Core 呼叫</title><link>https://blog.yowko.com/jaeger-trace-aspdotnet-core/</link><pubDate>Sat, 13 Apr 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/jaeger-trace-aspdotnet-core/</guid><description>使用 Jaeger 追蹤 ASP.NET Core 呼叫 之前筆記 .NET Core 上使用 Jaeger 追蹤 gRPC 呼叫 紀錄到如何使用 Jaeger 來追蹤 .NET Core Console project 中 gRPC 的呼叫歷程，不過想必未來應該免不了還是需要使用 REST api 的專案，</description></item><item><title>MacBook 遇到需啟用硬體虛擬化錯誤</title><link>https://blog.yowko.com/macbook-bootcamp-enable-virtualization/</link><pubDate>Sun, 17 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/macbook-bootcamp-enable-virtualization/</guid><description>MacBook 遇到需啟用硬體虛擬化錯誤 這幾天開啟電腦時，都會出現 Docker 的錯誤提醒，原以為是 Windows 上了新的 patch 後迫使 Docker for Windows 需要連帶更新而沒有留意(過去因為 Windows 更新而讓</description></item><item><title>Protobuf 該如何處理不定型別</title><link>https://blog.yowko.com/protobuf-object-any/</link><pubDate>Sat, 16 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/protobuf-object-any/</guid><description>Protobuf 該如何處理不定型別 之前筆記 Protobuf 時間屬性該如何表示？ 紀錄了 C# DateTime 屬性在 Protobuf 的 message 表示方式，當時在找資料時發現 any.proto 特別查了資料看可以應用在什麼地方，就個</description></item><item><title>.NET Core 上使用 Jaeger 追蹤 gRPC 呼叫</title><link>https://blog.yowko.com/dotnet-core-jaeger-grpc/</link><pubDate>Wed, 13 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-core-jaeger-grpc/</guid><description>.NET Core 上使用 Jaeger 追蹤 gRPC 呼叫 隨著系統使用人數愈來愈多，架構也跟著愈來愈複雜，各種技術為了解決既有問題或是加快反應速度不斷推陳出新，服務的架構也從單</description></item><item><title>Protobuf 時間屬性該如何表示？</title><link>https://blog.yowko.com/protobuf-datetime-timestamp/</link><pubDate>Tue, 12 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/protobuf-datetime-timestamp/</guid><description>Protobuf 時間屬性該如何表示？ 最近的專案在跨 application 的溝通上捨去以往熟悉的 RESTful API 而採用 gRPC 做為溝通的 protocal，過去沒有相關使用經驗的我當然是踩雷不斷，</description></item><item><title>如何取得 NUnit 當前執行的測試方法名稱</title><link>https://blog.yowko.com/nunit-current-test-name/</link><pubDate>Sun, 10 Mar 2019 23:00:00 +0800</pubDate><guid>https://blog.yowko.com/nunit-current-test-name/</guid><description>如何取得 NUnit 當前執行的測試方法名稱 看到 如何取得 NUnit 當前執行的測試方法名稱 這個標題，相信不少有 Unit Test 經驗的開發者都會疑惑：為什麼會需要當下的測試方法</description></item><item><title>將 ASP.NET Core 的預設 log 輸出至 NLog 或 Serilog</title><link>https://blog.yowko.com/asp-net-core-default-log-nlog-serilog/</link><pubDate>Sun, 10 Mar 2019 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/asp-net-core-default-log-nlog-serilog/</guid><description>將 ASP.NET Core 的預設 log 輸出至 NLog 或 Serilog ASP.NET Core 預設會將 WebHost 執行細節透過 stdout 輸出至 console 上，application 的所有動作都一目暸然，這在 debug 時很方便，不過部署在一般</description></item><item><title>在 Mac 上安裝 Kafka-Manager</title><link>https://blog.yowko.com/kafka-manager/</link><pubDate>Sat, 09 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-manager/</guid><description>在 Mac 上安裝 Kafka-Manager 最近的專案使用了 Kafka 當做中間層的訊息傳遞工具，功能上還不到遇到問題就先遭遇開發 debug 的種種狀況，其中最常發生但問題原因又不太一樣的就是</description></item><item><title>使用 docker 建立 MongoDB Replica Set</title><link>https://blog.yowko.com/docker-mongodb-replica-set/</link><pubDate>Thu, 07 Mar 2019 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-mongodb-replica-set/</guid><description>使用 docker 建立 MongoDB Replica Set 前幾天筆記 使用 docker 建立 Redis Cluster - 更新版 提到為了要測試 Redis 完整 cluster 功能但又不想每次都重頭建立三組 Master-Slave 以及三個 Sentinel，所以透過 docker-compose 來</description></item><item><title>讓 .NET Core 的 HttpClientFactory 不驗證 Https 憑證</title><link>https://blog.yowko.com/dotnet-core-httpclientfactory-invalid-certificate/</link><pubDate>Wed, 06 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-core-httpclientfactory-invalid-certificate/</guid><description>讓 .NET Core 的 HttpClientFactory 不驗證 Https 憑證 Https 幾乎已成為了現在網站的基本配備，從過去只有敏感交易網站才需要，到現在瀏覽器還會把非 Https 網站標記為 不安全，而 .NET Core 程式在預</description></item><item><title>使用 docker 建立 Redis Cluster - 更新版</title><link>https://blog.yowko.com/redis-cluster-docker/</link><pubDate>Tue, 05 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/redis-cluster-docker/</guid><description>使用 docker 建立 Redis Cluster - 更新版 請參考新版內容 使用 Docker Compose 建立 Redis Cluster 之前筆記 使用 docker 建立 Redis Cluster 成功建立了 redis cluster，也測試過 sentinel 可以正常 failover，興</description></item><item><title>使用 docker 建立 Redis Cluster</title><link>https://blog.yowko.com/docker-redis-cluster/</link><pubDate>Sat, 02 Mar 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-redis-cluster/</guid><description>使用 docker 建立 Redis Cluster 請參考新版內容 使用 docker 建立 Redis Cluster - 更新版 請參考新版內容 使用 Docker Compose 建立 Redis Cluster 之前筆記 使用 docker 建立 Redis Master-Slave Replication Instance 紀錄到使用 docker 來建立 Redis 一個 Master node</description></item><item><title>使用 docker 建立 Redis Master-Slave Replication Instance</title><link>https://blog.yowko.com/docker-redis-master-slave-replication/</link><pubDate>Thu, 28 Feb 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/docker-redis-master-slave-replication/</guid><description>使用 docker 建立 Redis Master-Slave Replication Instance 同事問到 StackExchange.Redis 的相關功能，首先必要條件就是建立測試環境，測試環境有大有小：簡易功能，單個 node 的 redis 絕對可以滿足大部份需求，但如果是</description></item><item><title>[Benchmark] 使用 C# 對 NoSQL insert 操作的效能數據</title><link>https://blog.yowko.com/nosql-insert-benchmark/</link><pubDate>Sun, 24 Feb 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/nosql-insert-benchmark/</guid><description>[Benchmark] 使用 C# 對 NoSQL insert 操作的效能數據 最近專案需要將收到的原始 request 內容直接儲存下來，以備日後有問題或是後續加工使用。 針對這類只有 insert 跟 select 操作的需要，過去大</description></item><item><title>使用 C# 存取 Riak</title><link>https://blog.yowko.com/csharp-riak/</link><pubDate>Sat, 23 Feb 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-riak/</guid><description>使用 C# 存取 Riak 之前筆記 使用 C# 存取 Cassandra 提到想要將 log 存放至 NoSQL 中而正在嘗試某幾套 NoSQL，現在就來看看 Riak 的使用吧 基本環境說明 在 Windows 上使用 docker 建立 linux 版本 R</description></item><item><title>匯出與匯入 Windows Container Image</title><link>https://blog.yowko.com/export-import-windows-container-image/</link><pubDate>Thu, 21 Feb 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/export-import-windows-container-image/</guid><description>匯出與匯入 Windows Container Image 同事想將 build 好的 image 在其他 server 測試驗證，但又不想上傳至公開 docker hub ，加上還只是 POC 階段建立 private registry 的效益有限，所以想要先直接 share image 就好 之前的經</description></item><item><title>為 Windows Container 安裝 Git - Part2</title><link>https://blog.yowko.com/windows-container-install-git/</link><pubDate>Tue, 19 Feb 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/windows-container-install-git/</guid><description>為 Windows Container 安裝 Git - Part2 昨天提到同事想要在 Windows Container 上安裝 Git 當做 base image 再用來擴充其他功能，但沒辦法直接安裝，所以在 為 Windows Container 安裝 Git 介紹到透過 Chocolatey 安裝 Git 的做法 雖然知</description></item><item><title>為 Windows Container 安裝 Git</title><link>https://blog.yowko.com/windows-container-git/</link><pubDate>Mon, 18 Feb 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/windows-container-git/</guid><description>為 Windows Container 安裝 Git 同事想要在 Windows Container 上安裝 Git 當做 base image 再用來擴充其他功能，但 Git for Windows 僅提供 .exe 版本，沒辦法用 msiexec，直接用 .exe 安裝又無法避開 popup 視窗問題</description></item><item><title>使用 C# 存取 PostgreSQL</title><link>https://blog.yowko.com/csharp-postgresql/</link><pubDate>Sun, 17 Feb 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-postgresql/</guid><description>使用 C# 存取 PostgreSQL 之前筆記 使用 C# 存取 Cassandra 提到想要將 log 存放至 NoSQL 中而正在嘗試某幾套 NoSQL，現在就來看看 PostgreSQL 的使用吧 基本環境說明 在 mac 上使用 docker 建立 Post</description></item><item><title>使用 C# 存取 MongoDB</title><link>https://blog.yowko.com/csharp-mangodb/</link><pubDate>Sat, 16 Feb 2019 22:40:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-mangodb/</guid><description>使用 C# 存取 MongoDB 之前筆記 使用 C# 存取 Cassandra 提到想要將 log 存放至 NoSQL 中而正在嘗試某幾套 NoSQL，現在就來看看 MongoDB 的使用吧 基本環境說明 在 mac 上使用 docker 建立 Mong</description></item><item><title>使用 Google Domains Dynamic DNS 搭配 OpenVPN 建立 VPN</title><link>https://blog.yowko.com/google-domain-ddns-openvpn/</link><pubDate>Wed, 13 Feb 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/google-domain-ddns-openvpn/</guid><description>使用 Google Domains Dynamic DNS 搭配 OpenVPN 建立 VPN 家人要前往內地進修幾個月，預計申請當地門號及網路服務，但又需要 facebook、google、line &amp;hellip</description></item><item><title>使用 C# 存取 ArangoDB</title><link>https://blog.yowko.com/csharp-arangodb/</link><pubDate>Tue, 12 Feb 2019 22:40:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-arangodb/</guid><description>使用 C# 存取 ArangoDB 之前筆記 使用 C# 存取 Cassandra 提到想要將 log 存放至 NoSQL 中而正在嘗試某幾套 NoSQL，現在就來看看 ArangoDB 的使用吧 基本環境說明 在 mac 上使用 docker 建立 Aran</description></item><item><title>使用 C# 存取 RavenDB</title><link>https://blog.yowko.com/csharp-ravendb/</link><pubDate>Mon, 11 Feb 2019 22:45:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-ravendb/</guid><description>使用 C# 存取 RavenDB 之前筆記 使用 C# 存取 Cassandra 提到想要將 log 存放至 NoSQL 中而正在嘗試某幾套 NoSQL，現在就來看看 RavenDB 的使用吧 基本環境說明 在 mac 上使用 docker 建立 Rave</description></item><item><title>使用 C# 存取 CouchDB</title><link>https://blog.yowko.com/csharp-couchdb/</link><pubDate>Sun, 10 Feb 2019 23:43:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-couchdb/</guid><description>使用 C# 存取 CouchDB 之前筆記 使用 C# 存取 Cassandra 提到想要將 log 存放至 NoSQL 中而正在嘗試某幾套 NoSQL，現在就來看看 CouchDB 的使用吧 基本環境說明 在 mac 上使用 docker 建立 Couc</description></item><item><title>使用 C# 存取 Cassandra</title><link>https://blog.yowko.com/csharp-cassandra/</link><pubDate>Sat, 09 Feb 2019 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-cassandra/</guid><description>使用 C# 存取 Cassandra 公司專案因為流量龐大連帶也會產生大量 log，過去都是使用 local file 來儲存，但在 cluster 的環境下 log file 會散落在許多主機上，一旦需要查閱詳細內容或</description></item><item><title>使用 C# (.NET Core) 傳訊息至 Slack</title><link>https://blog.yowko.com/csharp-message-slack/</link><pubDate>Wed, 06 Feb 2019 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-message-slack/</guid><description>使用 C# (.NET Core) 傳訊息至 Slack 公司有個臨時性需求：某個重要功能開啟或是關閉時，立即通知營運團隊及各級主管知道，讓大家在討論 production issue 有共同的討論基準。 經過一</description></item><item><title>Windows 10 滑鼠滾動方向翻轉</title><link>https://blog.yowko.com/windows10-reverse-scroll/</link><pubDate>Sun, 03 Feb 2019 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/windows10-reverse-scroll/</guid><description>Windows 10 滑鼠滾動方向翻轉 自從用慣了行動裝置後總覺得在電腦上的操作有些卡，但行動裝置的使用時間並不長問題不大，直到後來工作用電腦換為 mac 後突然覺得個</description></item><item><title>將 Windows 10 Quick Link 選單中的 PowerShell 改為 Command Prompt</title><link>https://blog.yowko.com/windows10-replace-powershell-with-cmd/</link><pubDate>Sat, 02 Feb 2019 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/windows10-replace-powershell-with-cmd/</guid><description>將 Windows 10 Quick Link 選單中的 PowerShell 改為 Command Prompt 忘記從什麼時候開始，Windows 10 已經預設將 Quick Link menu( Windows + X) 中的指令工具從 Command Prompt 改為 PowerShell，雖然 PowerShell 功能</description></item><item><title>在 macOS 上 Build Redis Desktop Manager(RDM)</title><link>https://blog.yowko.com/build-redis-desktop-manager-on-mac/</link><pubDate>Sun, 27 Jan 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/build-redis-desktop-manager-on-mac/</guid><description>在 macOS 上 Build Redis Desktop Manager(RDM) Redis 是套 in-memory 的 key-value databse，也被現在許多稍具規模系統拿來當做 cache 層以減輕 application cluster 直接大量存取 database 壓力，相信許多開發人員都認識它 Redis 在安裝</description></item><item><title>在 macOS 上的 Qt Creator 中出現 failed to parse default search paths from compiler output</title><link>https://blog.yowko.com/failed-to-parse-default-search-paths-from-compiler-output/</link><pubDate>Sun, 27 Jan 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/failed-to-parse-default-search-paths-from-compiler-output/</guid><description>在 macOS 上的 Qt Creator 中出現 failed to parse default search paths from compiler output 這一樣是在 mac 上 build Redis Desktop Manager 時遇到的問題，從之前筆記 在 macOS 上的 Qt Creator 中出現 No valid kits found 先過了第一關後馬來迎來的就是 failed to</description></item><item><title>在 macOS 上的 Qt Creator 中出現 No valid kits found</title><link>https://blog.yowko.com/no-valid-kits-found-on-mac/</link><pubDate>Sun, 27 Jan 2019 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/no-valid-kits-found-on-mac/</guid><description>在 macOS 上的 Qt Creator 中出現 No valid kits found 這是在 mac 上嘗試 build Redis Desktop Manager 時遇到的狀況，mac 本來就不是熟悉的操作系統 還要透過 Qt 來 build，早就有心理準備問題不會少</description></item><item><title>透過自訂 Attribute 標示屬性讓 Dapper 進行 json 轉換</title><link>https://blog.yowko.com/dapper-customattribute-typehandler/</link><pubDate>Thu, 17 Jan 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-customattribute-typehandler/</guid><description>透過自訂 Attribute 標示屬性讓 Dapper 進行 json 轉換 之前在筆記 使用 Dapper 將 json string 轉換為 object 紀錄到可以透過自訂 TypeHandler 讓 Dapper 可以將 db 內的值處理成需要的樣子(目前的用法是 db 欄位直接</description></item><item><title>在 .NET Core 與 .NET Framework 上使用 HttpClientFactory</title><link>https://blog.yowko.com/httpclient/</link><pubDate>Wed, 16 Jan 2019 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient/</guid><description>在 .NET Core 與 .NET Framework 上使用 HttpClientFactory 之前筆記 探討 HttpClient 可能的問題 與 HttpClient 無法反應 DNS 異動的解決方式 的出現是因為工作任務需要將一些重要訊息傳送至 Slack 而留意到 .NET Core 使用的 HttpClientFactory 是</description></item><item><title>在 ASP.NET MVC 5 中使用 ASP.NET Core Dependency Injection 與 HttpClientFactory</title><link>https://blog.yowko.com/aspnet-core-di-httpclientfactory-in-aspnet-mvc-5/</link><pubDate>Mon, 14 Jan 2019 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-core-di-httpclientfactory-in-aspnet-mvc-5/</guid><description>在 ASP.NET MVC 5 中使用 ASP.NET Core Dependency Injection 與 HttpClientFactory 習慣了 ASP.NET Core DI 的寫法後，回到 ASP.NET MVC 5 後突然覺得不太適應，沒有 HttpClientFactory 都覺得 HttpClient 好像很容易出錯，於是試著研究研究，順手紀錄一下，</description></item><item><title>HttpClient 無法反應 DNS 異動的解決方式</title><link>https://blog.yowko.com/httpclient-not-respect-dns-change/</link><pubDate>Sat, 05 Jan 2019 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-not-respect-dns-change/</guid><description>HttpClient 無法反應 DNS 異動的解決方式 之前筆記 探討 HttpClient 可能的問題 提到使用 HttpCLient 時避免 socket 耗盡的方式就是只建立一個 HttpClient instance (透過 static or singleton)，但這樣的方式</description></item><item><title>[Benchmark] DB 物件對映至 C# class 的做法</title><link>https://blog.yowko.com/object-relation-mapping/</link><pubDate>Tue, 01 Jan 2019 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/object-relation-mapping/</guid><description>Benchmark : DB 物件對映至 C# class 的做法 跟同事討論到 ORM 的優劣，當然各有擁護的對象，但相同的目標卻很一致：速度快，而在 速度快 這個基本前提下，我個人覺得還有討</description></item><item><title>使用 Dapper 將 json string 轉換為 object</title><link>https://blog.yowko.com/dapper-json-string-to-object/</link><pubDate>Wed, 26 Dec 2018 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-json-string-to-object/</guid><description>使用 Dapper 將 json string 轉換為 object 同事設計物件儲存在 DB 的 schema 時將非核心功能屬性 (e.g. 畫面顯示用或是狀態表示用) 轉為 json 放在單一欄位中而不是一一建立欄位。我覺得超酷</description></item><item><title>Application Domain 與 Application Pool 的差異</title><link>https://blog.yowko.com/appdomain-apppool-difference/</link><pubDate>Sat, 22 Dec 2018 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/appdomain-apppool-difference/</guid><description>Application Domain 與 Application Pool 的差異 最近同事問到修改 IIS 上站台的 log path 會不會引發重啟，雖然針對同事的問題有九成把握，但對於實際運作細節卻有許多疑問，所以想趁著這個機</description></item><item><title>探討 HttpClient 可能的問題</title><link>https://blog.yowko.com/httpclient-issue/</link><pubDate>Mon, 10 Dec 2018 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-issue/</guid><description>探討 HttpClient 可能的問題 印象中前幾年曾經看過有文章提到 HttpClient 雖然是 disposable 但透過 using 來使用 HttpClient 卻反而可能出現問題，當時覺得網路文章多數仍是使用 using，於是我抱</description></item><item><title>在 Windows 環境將特定網址指向不同 IP</title><link>https://blog.yowko.com/windows-host-file/</link><pubDate>Sun, 09 Dec 2018 23:43:00 +0800</pubDate><guid>https://blog.yowko.com/windows-host-file/</guid><description>在 Windows 環境將特定網址指向不同 IP 這幾天正在測試 HttpClient 幾個過去被誤用的現象與解決方式，其中一個可能遇到的問題是使用 static HttpClient instance 時如果遇到 DNS 異動時無法即時反應</description></item><item><title>在 .NET Core console 上使用 Dependency Injection - DI</title><link>https://blog.yowko.com/dotnet-core-console-di/</link><pubDate>Wed, 28 Nov 2018 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-core-console-di/</guid><description>在 .NET Core console 上使用 Dependency Injection - DI 開始撰寫 ASP.NET Core 後，對於整個開發流程雖然不至於陌生卻也一直覺得掌握度不足，尤其在習慣 ASP.NET Core 註冊及啟動流程後，突然要寫 .NET Core console application</description></item><item><title>如何擴充 enum ？</title><link>https://blog.yowko.com/extend-enum/</link><pubDate>Sun, 25 Nov 2018 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/extend-enum/</guid><description>如何擴充 enum ？ 同事問到可不可以擴充 enum ？！我的第一個反應：為什麼不行，就接著上個設定往下加不就好了？！ 不過立馬回過神來，如果這麼容易搞定，同事應</description></item><item><title>Visual Studio 2017 啟動 Azure Function 偵錯出現 Fatal Error ？！</title><link>https://blog.yowko.com/visualstudio-0x8000ffff/</link><pubDate>Thu, 22 Nov 2018 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/visualstudio-0x8000ffff/</guid><description>Visual Studio 2017 啟動 Azure Function 偵錯出現 Fatal Error ？！ 因緣際會下，剛好有個很趕但很小的功能可以透過 Azure Function 來完成，過去 Azure Function 1.x 我來不及參與，直接使用 Azure Function 2.x 似乎也沒什麼違和</description></item><item><title>列出當下環境可以使用的 .NET Core 專案範本</title><link>https://blog.yowko.com/dotnet-template-list/</link><pubDate>Sun, 18 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-template-list/</guid><description>列出當下環境可以使用的 .NET Core 專案範本 .NET Core 問世以來，跨平台的特性帶來了許多的改變，其中一個就是開發模式，過去 .Net 開發人員只能透過 Visual Studio 這類的 IDE 工具進</description></item><item><title>應該使用 IsNullOrEmpty 還是 IsNullOrWhiteSpace</title><link>https://blog.yowko.com/string-isnullorempty-isnullorwhitespace/</link><pubDate>Sat, 17 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/string-isnullorempty-isnullorwhitespace/</guid><description>應該使用 IsNullOrEmpty 還是 IsNullOrWhiteSpace 前幾天看到 Bruce 分享微軟內部團隊在 C# 寫作上的團隊規範 - #80 寫程式的參考準測 (coding guideline) - C# 篇，其中一點是 用 string.IsNullOrWhiteSpace() 來檢查字串是否為 null 或是空白，雖</description></item><item><title>修改 web.config 可以不讓 IIS 自動重啟？！</title><link>https://blog.yowko.com/avoid-iis-restart-webconfig-modify/</link><pubDate>Wed, 14 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/avoid-iis-restart-webconfig-modify/</guid><description>修改 web.config 可以不讓 IIS 自動重啟？ 這是同事提出的問題：想要修改 web.config 中的 NLog log level，但不敢冒然修改 production server 上的檔案，深怕檔案一改立馬引發 IIS recycle 直接影響線上</description></item><item><title>關於 ASP.NET File Change Notification (FCN) 的一些事</title><link>https://blog.yowko.com/fcn/</link><pubDate>Sun, 11 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/fcn/</guid><description>關於 ASP.NET File Change Notification (FCN) 的一些事 這幾天在測試如何達成修改 web.config 而不引起 IIS 重啟時看到幾種做法，其中一個是調整 web.config 的 fcnMode 設定值，過去不認識這個設定引起我的好奇而查</description></item><item><title>無法參考 App_Code 資料夾下的 class</title><link>https://blog.yowko.com/access-class-in-app-code/</link><pubDate>Mon, 05 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/access-class-in-app-code/</guid><description>無法參考 App_Code 資料夾下的 class 這幾天為了之前同事的問題進而聯想到的情境在做測試，大意就是希望在 web 啟動時紀錄時間讓開發人員可以得知 web 啟動至實際存取特定</description></item><item><title>為 Hugo 加上 InstantClick</title><link>https://blog.yowko.com/hugo-js/</link><pubDate>Thu, 01 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/hugo-js/</guid><description>為 Hugo 加上 InstantClick 前幾天 Larry 哥閒聊問到 Hugo 在引用其他 js 套件上的支援度時舉了 InstantClick.js 的例子，無奈小弟書讀得不夠多，沒用過 InstantClick.js，Larr</description></item><item><title>Windows 10 中的 Command Prompt (CMD) 的 Auto-Complete (自動完成) 失效</title><link>https://blog.yowko.com/windows10-enable-autocomplete/</link><pubDate>Sun, 28 Oct 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/windows10-enable-autocomplete/</guid><description>Windows 10 中的 Command Prompt (CMD) 的 Auto-Complete (自動完成) 失效 工作用的電腦系統自從改為 Windows 10 後，原以為過去 Windows 7 與 Windows 10 快捷鍵不同的情況解決後會開始過著幸福美滿的日子，只是果</description></item><item><title>在 Windows 10 中建置 Hugo 開發環境</title><link>https://blog.yowko.com/windows-10-hugo/</link><pubDate>Thu, 18 Oct 2018 02:40:00 +0800</pubDate><guid>https://blog.yowko.com/windows-10-hugo/</guid><description>在 Windows 10 中建置 Hugo 開發環境 之前考慮了好久，最後終於下定決心將個人筆記改用 Hugo 來建置，雖然一直都是使用 markdown 來寫筆記但過去將筆記放在 Blogger 上時必需要手動將 markdown</description></item><item><title>讓 Windows 10 允許多個使用者同時登入</title><link>https://blog.yowko.com/windows-10-multiple-login/</link><pubDate>Mon, 15 Oct 2018 00:10:10 +0800</pubDate><guid>https://blog.yowko.com/windows-10-multiple-login/</guid><description>讓 Windows 10 允許多個使用者同時登入 這個需求是發生在已做為測試機的筆電上，平常如果需要測試程式一般都會透過遠端桌面登入操作，但有時需要測試網路層相關</description></item><item><title>將 Google自訂搜尋引擎 (Google Custom Search) 搭配 OpenSearch 加至 Hugo 網站中</title><link>https://blog.yowko.com/google-search-in-hugo/</link><pubDate>Sun, 14 Oct 2018 00:10:10 +0800</pubDate><guid>https://blog.yowko.com/google-search-in-hugo/</guid><description>將 Google自訂搜尋引擎 (Google Custom Search) 搭配 OpenSearch 加至 Hugo 網站中 之前曾在筆記 如何使用 Blogger APIs Client Library for .NET 匯出 Blogger 文章 中提到過去選擇使用 Blogger 當做筆記平台就是看中 Blogger 支援 opensearch</description></item><item><title>讓 ASP.NET Web API 與 ASP.NET Core 可以支援 x-www-form-urlencoded</title><link>https://blog.yowko.com/aspnet-core-x-www-form-urlencoded/</link><pubDate>Mon, 01 Oct 2018 02:44:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-core-x-www-form-urlencoded/</guid><description>讓 ASP.NET Web API 與 ASP.NET Core 可以支援 x-www-form-urlencoded 最近某個專案需要將資料(前端)傳送至其他平台 API 進行處理，跟一般需求相同，只是資料傳輸格式不是使用過去較熟悉的 application/json 而是使</description></item><item><title>如何使用 Blogger APIs Client Library for .NET 匯出 Blogger 文章</title><link>https://blog.yowko.com/dotnet-blogger-library/</link><pubDate>Sat, 15 Sep 2018 18:44:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-blogger-library/</guid><description>如何使用 Blogger APIs Client Library for .NET 匯出 Blogger 文章 雖然剛開始決定為自己的開發經驗做些筆記時就已經知道 Blogger 的一些缺點：無法為自訂 domain 加上 https (嘗試過使用 CloudFare ，直到幾個月前</description></item><item><title>Visual Studio 無法執行 xUnit 單元測試，Rider 卻可以？！</title><link>https://blog.yowko.com/visual-studio-cannot-run-xunit/</link><pubDate>Thu, 30 Aug 2018 02:40:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-cannot-run-xunit/</guid><description>Visual Studio 無法執行 xUnit 單元測試，Rider 卻可以？！ 近期正在進行一個測試性專案的 POC，主要是想要導入某個 Open Source 的工具，過程中包含 C# 元件的整合，元件在</description></item><item><title>Windows 10 關閉最近開啟檔案 (Recent files) 功能</title><link>https://blog.yowko.com/windows10-shutdown-recent-files/</link><pubDate>Wed, 22 Aug 2018 02:40:00 +0800</pubDate><guid>https://blog.yowko.com/windows10-shutdown-recent-files/</guid><description>Windows 10 關閉最近開啟檔案 (Recent files) 功能 最近公司電腦的作業系統改為 Windows 10，儘管我個人電腦上一直使用 Windows 10 但兩者用途還是有些根本上的不同：公司電腦大部份的設</description></item><item><title>RDO (Remote Desktop Organizer) 連線時出現需要 Network Level Authentication</title><link>https://blog.yowko.com/rdo-network-level-authentication/</link><pubDate>Thu, 09 Aug 2018 02:40:00 +0800</pubDate><guid>https://blog.yowko.com/rdo-network-level-authentication/</guid><description>RDO (Remote Desktop Organizer) 連線時出現需要 Network Level Authentication 最近的專案需要整合外部廠商的相關功能，為避免影響其他服務就建立了一個全新的 Windows Server 2016 VM 來進行整合開發及測試，但 VM 建立</description></item><item><title>安裝 SQL Server 2017 出現 exit code 1638</title><link>https://blog.yowko.com/sql-server-1638/</link><pubDate>Thu, 02 Aug 2018 02:40:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-1638/</guid><description>安裝 SQL Server 2017 出現 exit code 1638 今天拿到新的工作用電腦，首先當然就是安裝所有開發必備工具與軟體，其中一個便是 local 開發用的 DB instance，既然都要重新安</description></item><item><title>將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中 - MongoDB 版</title><link>https://blog.yowko.com/aspnet-identity-aspnet-mvc-empty-mongodb/</link><pubDate>Mon, 30 Jul 2018 23:03:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-aspnet-mvc-empty-mongodb/</guid><description>將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中 - MongoDB 版 在之前筆記 將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中 中有提到我個人事實上比較喜歡 MVC Empty 專案範本的乾淨風格，當時也是因為不想讓專案中有過</description></item><item><title>使用 MongoDB 儲存 ASP.NET Identity 資料</title><link>https://blog.yowko.com/aspnet-identity-mongodb/</link><pubDate>Fri, 20 Jul 2018 16:36:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-mongodb/</guid><description>使用 MongoDB 儲存 ASP.NET Identity 資料 近期處理的某個專案需要 website 來呈現報表類資訊，起初 user 說只需要基本的登入，不需要其他使用者相關功能(e.g. 修改密碼、權限管理、</description></item><item><title>讓 NLog 發送 Mail</title><link>https://blog.yowko.com/nlog-mail/</link><pubDate>Tue, 17 Jul 2018 23:03:00 +0800</pubDate><guid>https://blog.yowko.com/nlog-mail/</guid><description>讓 NLog 發送 Mail 曾經在之前筆記 讓 log4net 收到指定錯誤 Level 發送 mail 紀錄到透過 log4net 的 appender 設定讓出現指定 log Level 時自動發送 mail，當時就覺得 NLog 在設定的便利性上與文件的可</description></item><item><title>使用 WinDbg 查出 Redis OOM - Out of Memory</title><link>https://blog.yowko.com/windbg-redis-oom-out-of-memory/</link><pubDate>Mon, 16 Jul 2018 15:41:00 +0800</pubDate><guid>https://blog.yowko.com/windbg-redis-oom-out-of-memory/</guid><description>使用 WinDbg 查出 Redis OOM - Out of Memory Session 是網站開發時既方便又相對 Cookie 安全的資料儲存技術，但 Session 弱型別的特性容易造成程式碼可讀性降低，另外 Session 將資料儲存在 server 上的特性</description></item><item><title>取得 Redis 中指定 key 條件的筆數</title><link>https://blog.yowko.com/redis-key-count/</link><pubDate>Fri, 13 Jul 2018 02:40:00 +0800</pubDate><guid>https://blog.yowko.com/redis-key-count/</guid><description>取得 Redis 中指定 key 條件的筆數 公司有個流量很大的 ASP.NET MVC 網站仍在使用 Session，並利用 Redis 來儲存 Session 資訊，而近來的大型活動讓 Redis 壓力倍增，使用的 memory 是活動</description></item><item><title>使用 HttpClient 出現 ObjectDisposedException ？！</title><link>https://blog.yowko.com/httpclient-objectdisposedexception/</link><pubDate>Wed, 11 Jul 2018 22:52:00 +0800</pubDate><guid>https://blog.yowko.com/httpclient-objectdisposedexception/</guid><description>使用 HttpClient 出現 ObjectDisposedException ？ 最近某個專案中有個需求需要對 partner 發出 http request，而 user 針對 request 出現 error 時希望加上 retry 機制：重試一次，結果就是這個重試一次的要求讓程</description></item><item><title>System.IO.FileLoadException : Could not load file or assembly (0x80131040)</title><link>https://blog.yowko.com/system-io-fileloadexception-assembly/</link><pubDate>Mon, 09 Jul 2018 00:39:00 +0800</pubDate><guid>https://blog.yowko.com/system-io-fileloadexception-assembly/</guid><description>System.IO.FileLoadException : Could not load file or assembly 前情提要：公司有個專案需要與外部 partner 週期性進行資料交換，是常見的排程作業但 partner 沒有提供測試環境，加上 partner 的 api 環境有鎖定來源 ip，也</description></item><item><title>解決無法使用 IIS Manager 及 AppCmd.exe 列出 Worker Processes 的 Request</title><link>https://blog.yowko.com/hresult-80004001-not-implemented/</link><pubDate>Mon, 25 Jun 2018 01:25:00 +0800</pubDate><guid>https://blog.yowko.com/hresult-80004001-not-implemented/</guid><description>解決無法使用 IIS Manager 及 AppCmd.exe 列出 Worker Processes 的 Request 最近監控 IIS 上的 application 時發現部份 server 無法列出 request queue，以我的經驗一般情況下並不會特別去看 request queue 的內容，一旦需要看就</description></item><item><title>WinDbg 設定 symbol file path 的四種方法</title><link>https://blog.yowko.com/windbg-symbol-file-path/</link><pubDate>Mon, 18 Jun 2018 00:49:00 +0800</pubDate><guid>https://blog.yowko.com/windbg-symbol-file-path/</guid><description>WinDbg 設定 symbol file path 的四種方法 有一陣子沒用 WinDbg 來進行偵錯，再次感受到年紀的影響，指令忘得很乾淨XD 當然 WinDbg 的指令對我而言本來就沒有記得很牢，忘得快也是意</description></item><item><title>Docker Push 出現 405 Method Not Allowed 錯誤？！</title><link>https://blog.yowko.com/docker-push-405-method-not-allowed/</link><pubDate>Sat, 16 Jun 2018 19:39:00 +0800</pubDate><guid>https://blog.yowko.com/docker-push-405-method-not-allowed/</guid><description>Docker Push 出現 405 Method Not Allowed 錯誤？ 之前筆記 解決 Docker build pip install fail 提到在練習 Kubernetes 過程中執行 docker build 指令時會出現 pip install fail 的 error，問題發生原因是 docker 的 DNS 解析不正確造成的，</description></item><item><title>解決 Docker build pip install fail</title><link>https://blog.yowko.com/docker-build-pip-install-fail/</link><pubDate>Sat, 16 Jun 2018 12:27:00 +0800</pubDate><guid>https://blog.yowko.com/docker-build-pip-install-fail/</guid><description>解決 Docker build pip install fail 近期工作之餘將部份時間花在學習 Kubernetes 上，過程中嘗試透過 Dockerfile 建立 pyhon application 的 image 來部署至 Kubernetes 中打算用來做一些實際應用情境的演練，原以為會卡在 Kubernetes 的</description></item><item><title>C# 搭配 MongoDB 的連線寫法</title><link>https://blog.yowko.com/mongodb-connectionstring/</link><pubDate>Sun, 10 Jun 2018 20:26:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-connectionstring/</guid><description>C# 搭配 MongoDB 的連線寫法 最近有個新專案需要儲存 json 格式的資料，MongoDB 是考慮的選項之一，評估的過程中才發現我沒有 C# 連線 MongoDB 的使用筆記，雖然專案時</description></item><item><title>C# 連線 Oracle 出現 ORA-01000: maximum open cursors exceeded</title><link>https://blog.yowko.com/oracle-maximum-open-cursors-exceeded/</link><pubDate>Thu, 07 Jun 2018 23:52:00 +0800</pubDate><guid>https://blog.yowko.com/oracle-maximum-open-cursors-exceeded/</guid><description>C# 連線 Oracle 出現 ORA-01000: maximum open cursors exceeded 同事負責的系統在 production 環境出現異常問題：原本系統已經運作了一段時間，某天突然出現 ORA-01000: maximum open cursors exceeded 造成相關功能無法運作，經過 IIS reset 後</description></item><item><title>CentOS 7 Docker 無法連線 Docker daemon？！</title><link>https://blog.yowko.com/cannot-connect-docker-daemon/</link><pubDate>Wed, 06 Jun 2018 04:00:00 +0800</pubDate><guid>https://blog.yowko.com/cannot-connect-docker-daemon/</guid><description>CentOS 7 Docker 無法連線 Docker daemon？ 同事想在 VirtualBox 上建立 CentOS 7 虛擬環境，並在 VM 中使用 Docker，在安裝 Docker 時一如往常相當順利直到實際建立 container 時卻遇到無法連</description></item><item><title>如何避免多個 EntityFramework 6 instance 造成資料覆蓋問題 (DB First - Oracle)</title><link>https://blog.yowko.com/entityframework-6-concurrency-oracle/</link><pubDate>Tue, 05 Jun 2018 00:50:00 +0800</pubDate><guid>https://blog.yowko.com/entityframework-6-concurrency-oracle/</guid><description>如何避免多個 Entity Framework 6 instance 造成資料覆蓋問題 (DB First - Oracle) 之前筆記 如何避免多個 Entity Framework 6 instance 造成資料覆蓋問題 (DB First - SQL Server) 提到 Entity Framework 使用上的限制，也紀錄如何透過在 SQL Server</description></item><item><title>不需安裝 Oracle client 使用 C# 搭配 Oracle.DataAccess 連線 Oracle</title><link>https://blog.yowko.com/oracleaccess-without-oracle-client/</link><pubDate>Thu, 31 May 2018 01:45:00 +0800</pubDate><guid>https://blog.yowko.com/oracleaccess-without-oracle-client/</guid><description>不需安裝 Oracle client 使用 C# 搭配 Oracle.DataAccess 連線 Oracle 之前公司電腦因為註冊檔毀損，讓電腦上的 Oracle client 一直無法正常運作，就算是重灌多次 Oracle client 還是一樣無法正確運作就連移除功能</description></item><item><title>如何避免多個 Entity Framework 6 instance 造成資料覆蓋問題 (DB First - SQL Server)</title><link>https://blog.yowko.com/entityframework-6-concurrency/</link><pubDate>Sun, 27 May 2018 21:54:00 +0800</pubDate><guid>https://blog.yowko.com/entityframework-6-concurrency/</guid><description>如何避免多個 Entity Framework 6 instance 造成資料覆蓋問題 (DB First - SQL Server) 前後台分離且共同存取 table 或是同時有多台機器甚至是修改資料不經由 Entity Framework 都是平常開發上很常見的情境，但</description></item><item><title>讓 log4net 收到指定錯誤 Level 發送 mail</title><link>https://blog.yowko.com/log4net-mail/</link><pubDate>Sun, 27 May 2018 02:02:00 +0800</pubDate><guid>https://blog.yowko.com/log4net-mail/</guid><description>讓 log4net 收到指定錯誤 Level 發送 mail 平常我自己本身慣用的 log 套件是 nlog，主要原因是因為設定相對較簡潔，加上多年前看過的效能比較 - Benchmarking 5 popular .NET logging libraries 結果是 nlog 效</description></item><item><title>從 DLL 中建立 PDB 檔</title><link>https://blog.yowko.com/pdb-from-dll/</link><pubDate>Sun, 20 May 2018 19:14:00 +0800</pubDate><guid>https://blog.yowko.com/pdb-from-dll/</guid><description>從 DLL 中建立 PDB 檔 這是在追查某個 dll 可能的潛在效能問題時，延伸出的問題，一般情況下我們透過 NuGet 下載套件時大多都沒有包含 PDB - Program DataBase file 檔，讓追查錯誤時少了</description></item><item><title>Windows 慣用者如何在 Red Hat Enterprise Linux 7.5 (CentOS ) 上使用 kubeadm 架設 Kubernetes (K8s)</title><link>https://blog.yowko.com/centos-kubeadm-kubernetes/</link><pubDate>Sun, 20 May 2018 10:16:00 +0800</pubDate><guid>https://blog.yowko.com/centos-kubeadm-kubernetes/</guid><description>Windows 慣用者如何在 Red Hat Enterprise Linux 7.5 (CentOS ) 上使用 kubeadm 架設 Kubernetes (K8s) 之前筆記 Windows 慣用者如何在 Ubuntu Server 16.04 LTS 上使用 kubeadm 架設 Kubernetes (K8s) 紀錄到如何在 Ubuntu 上使用 kubeadm 建立 Kubernetes cluster，考量到</description></item><item><title>使用 Entity Framework Insert 大量資料</title><link>https://blog.yowko.com/entityframework-bulk-insert/</link><pubDate>Sat, 19 May 2018 00:38:00 +0800</pubDate><guid>https://blog.yowko.com/entityframework-bulk-insert/</guid><description>使用 Entity Framework Insert 大量資料 這是參加 黃忠成老師的 Entity Framework 全線開發 課程時他提出讓學員思考的問題：如何使用 Entity Framework Insert 大量資料，我當下立馬想起印象中以前同事也被這個</description></item><item><title>在 LINQPad 中使用 NLog</title><link>https://blog.yowko.com/linqpad-nlog/</link><pubDate>Fri, 18 May 2018 00:45:00 +0800</pubDate><guid>https://blog.yowko.com/linqpad-nlog/</guid><description>在 LINQPad 中使用 NLog LINQPad 的便利性我想不必我多提，而我自己常常在 LINQPad 上進行主要核心流程功能的 poc 開發，或是將特定功能從原系統抽離以加速功能驗證，今天遇到的情</description></item><item><title>Windows 慣用者如何在 Ubuntu Server 16.04 LTS 上使用 kubeadm 架設 Kubernetes (K8s)</title><link>https://blog.yowko.com/ubuntu-kubeadm-kubernetes/</link><pubDate>Mon, 14 May 2018 02:15:00 +0800</pubDate><guid>https://blog.yowko.com/ubuntu-kubeadm-kubernetes/</guid><description>Windows 慣用者如何在 Ubuntu Server 16.04 LTS 上使用 kubeadm 架設 Kubernetes (K8s) 原本是想將 Kubernetes 架設在 Ubuntu Server 17.10 上，但需要透過一些小手法才能順利執行 container，為了避免忘記如何架設，</description></item><item><title>使用 Elastic Stack (ELK) 來監控 MongoDB</title><link>https://blog.yowko.com/elk-mongodb-monitor/</link><pubDate>Sat, 12 May 2018 00:23:00 +0800</pubDate><guid>https://blog.yowko.com/elk-mongodb-monitor/</guid><description>使用 Elastic Stack (ELK) 來監控 MongoDB 之前筆記 Windows 平台上安裝 Elastic Stack (ELK - Elasticsearch , Logstash , Kibana) 提到因為想要將部份系統資料餵進 ELK 用來監控及除錯，順手紀錄 Windows 平台上架設 Elastic Stack (ELK - Elasticsearch , Logstash ,</description></item><item><title>IIS 上的 ASP.NET 程式出現 500.19 (0x8007000d) 錯誤？！</title><link>https://blog.yowko.com/iis-50019-0x8007000d/</link><pubDate>Wed, 09 May 2018 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/iis-50019-0x8007000d/</guid><description>IIS 上的 ASP.NET 程式出現 500.19 (0x8007000d) 錯誤？ 這是同事在處理 IIS 上的 application 改用 64-bit (不啟用 32-bit) 時遇到的狀況，之前筆記 IIS Express 出現 500.19 - 0x800700b7 錯誤？！ 有紀錄到類似的錯誤，也是一樣出現</description></item><item><title>如何知道使用的 dll 是否需以 32 位元模式執行</title><link>https://blog.yowko.com/detect-dll-require-32bit/</link><pubDate>Tue, 08 May 2018 09:57:00 +0800</pubDate><guid>https://blog.yowko.com/detect-dll-require-32bit/</guid><description>如何知道使用的 dll 是否需以 32 位元模式執行 最近因為年度計畫預計做些 Windows server OS 的升級作業，將大部份 OS 升級為 Windows Server 2016，也順便整理 server 上的 applica</description></item><item><title>Windows 平台上安裝 Elastic Stack (ELK - Elasticsearch , Logstash , Kibana)</title><link>https://blog.yowko.com/elastic-stack-elk-windows/</link><pubDate>Wed, 02 May 2018 02:30:00 +0800</pubDate><guid>https://blog.yowko.com/elastic-stack-elk-windows/</guid><description>Windows 平台上安裝 Elastic Stack (ELK - Elasticsearch , Logstash , Kibana) Elastic Stack (ELK - Elasticsearch , Logstash , Kibana) 建議執行在 Linux 平台上效能較佳 ELK Stack 在 5.0 版本加入 Beats 套件後更名為 Elastic Stack，在還沒搞清楚 Beats 反而是 5.5</description></item><item><title>在 ASP.NET MVC 出現 HttpAntiForgeryException 錯誤時 Redirect 至指定 Controller、Action</title><link>https://blog.yowko.com/aspnet-mvc-httpantiforgeryexception-redirect/</link><pubDate>Tue, 01 May 2018 16:43:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-httpantiforgeryexception-redirect/</guid><description>ASP.NET MVC 的 System.Web.Mvc.HttpAntiForgeryException 錯誤 user 反應在操作系統時出現 System.Web.Mvc.HttpAntiForgeryException錯誤，而 System.Web.Mvc.HttpAntiForgeryException 的錯誤在 ASP.NET MVC 上並不</description></item><item><title>IIS 出現 Service Unavailable HTTP Error 503 - Windows Process Activation Service (WAS) Error</title><link>https://blog.yowko.com/http-error-503-event-id-5051/</link><pubDate>Mon, 23 Apr 2018 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/http-error-503-event-id-5051/</guid><description>這個問題遇到第二次了，照以往的習慣：問題遇到二次以上就要來筆記一下，避免下次再遇到又要花好多時間追查。之前沒有紀錄的原因：一來是覺得狀況特殊</description></item><item><title>C# 使用 Dapper 連線 DB 時指定逾時時間 (timeout)：0x80004005</title><link>https://blog.yowko.com/dapper-timeout/</link><pubDate>Sun, 22 Apr 2018 23:34:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-timeout/</guid><description>C# 使用 Dapper 連線 DB 時指定逾時時間 (timeout)：0x80004005 最近專案在 production 環境執行時常常遇到 [Win32Exception (0x80004005): The wait operation timed out]，造成程式未完整執行，</description></item><item><title>decimal , double , float 輸出 json 的格式問題</title><link>https://blog.yowko.com/decimal-double-float-json-format/</link><pubDate>Sun, 22 Apr 2018 17:42:00 +0800</pubDate><guid>https://blog.yowko.com/decimal-double-float-json-format/</guid><description>decimal , double , float 輸出 json 的格式問題 之前筆記 decimal 屬性輸出 JSON 時指定的格式問題 提到在專案中因為系統介接需要統一 decimal 小數位數，過程中也才發現 json.net 在輸出沒有小數的 decimal</description></item><item><title>decimal 屬性輸出 JSON 時指定的格式問題</title><link>https://blog.yowko.com/decimal-json-digital/</link><pubDate>Sat, 21 Apr 2018 00:14:00 +0800</pubDate><guid>https://blog.yowko.com/decimal-json-digital/</guid><description>decimal 屬性輸出 JSON 時指定的格式問題 這是之前專案遇到的狀況：輸出 金額 時只需處理到小數點下二位。既然是 金額，為了避免精準度造成的誤差都會選用 deciaml 資料類型</description></item><item><title>清除 Windows 上的 git 驗證資訊(Credential)</title><link>https://blog.yowko.com/clear-windows-credential/</link><pubDate>Tue, 17 Apr 2018 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/clear-windows-credential/</guid><description>清除 Windows 上的 git 驗證資訊(Credential) 公司電腦的安全性設定要求固定時間需要修改個人 AD 密碼，連帶其他內部系統密碼也會一並被修改，之前修改</description></item><item><title>使用 Topshelf 搭配 Quartz.Net 撰寫 Windows Service 排程執行工作</title><link>https://blog.yowko.com/topshelf-quartznet-windows-service/</link><pubDate>Thu, 12 Apr 2018 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/topshelf-quartznet-windows-service/</guid><description>使用 Topshelf 搭配 Quartz.Net 撰寫 Windows Service 排程執行工作 排程工作在許多系統中都是必備組件，常用來處理非立即性作業(e.g.：每日交易結清，發送電子報&amp;hellip;</description></item><item><title>使用 RedLock.net 搭配 redis 達成分散式 Lock</title><link>https://blog.yowko.com/redlocknet-redis-lock/</link><pubDate>Tue, 10 Apr 2018 01:31:00 +0800</pubDate><guid>https://blog.yowko.com/redlocknet-redis-lock/</guid><description>使用 RedLock.net 搭配 redis 達成分散式 Lock RedLock.net 是前兩個禮拜從安德魯大大的 架構面試題 #1, 線上交易的正確性 一文中看到使用 redis 搭配 RedLock 演算法製造出分散式鎖定 (Distributed locks) 的套件，也是</description></item><item><title>使用命令列指令 (VSTest.Console.exe) 執行 MSTest V2 測試</title><link>https://blog.yowko.com/vstest-console-mstest-v2/</link><pubDate>Mon, 09 Apr 2018 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/vstest-console-mstest-v2/</guid><description>使用命令列指令 (VSTest.Console.exe) 執行 MSTest V2 測試 之前筆記 使用 MSTest.exe 指令來進行測試 曾經介紹到使用 MSTest.exe 在 cmmand line 環境中執行測試，筆記結尾有提到未支援 MSTest V2 的測試功能，在原本使用</description></item><item><title>ASP.NET Web API Unit Test 出現需要加入 `System.Web.Http` 參考錯誤</title><link>https://blog.yowko.com/unit-test-need-systemwebhttp/</link><pubDate>Sun, 08 Apr 2018 10:48:00 +0800</pubDate><guid>https://blog.yowko.com/unit-test-need-systemwebhttp/</guid><description>ASP.NET Web API Unit Test 出現需要加入 System.Web.Http 參考錯誤 為 ASP.NET Web API 加上 unit test 時，在加入 action 實際動作後 Visual Studio 就提示需要加入 System.Web.Http 參考，仔細回想這個問題也不是第一次遇到了，只是過去</description></item><item><title>加快大型 GIT Repository 下載速度(指定 depth)</title><link>https://blog.yowko.com/git-clone-depth/</link><pubDate>Sat, 07 Apr 2018 16:33:00 +0800</pubDate><guid>https://blog.yowko.com/git-clone-depth/</guid><description>加快大型 GIT Repository 下載速度(指定 depth) 同事反應有個專案在經年累月的發展下，快速成長到每次 clone 都要個十幾二十分鐘，後來甚至有次在 production deploy 時還完全卡死，無法正確</description></item><item><title>匯出 Excel 時使用多國語系 Resource 當做欄位名稱</title><link>https://blog.yowko.com/reflection-resource-culture/</link><pubDate>Fri, 06 Apr 2018 21:53:00 +0800</pubDate><guid>https://blog.yowko.com/reflection-resource-culture/</guid><description>匯出 Excel 時使用多國語系 Resource 當做欄位名稱 之前筆記 使用 C# 將資料匯出成 Excel (.xlsx) 紀錄到使用 ClosedXML 搭配 generic 與 reflection 匯出 excel，方便使用者自行調整資料報表 剛好有個系統</description></item><item><title>使用 C# 將資料匯出成 Excel (.xlsx)</title><link>https://blog.yowko.com/list-to-excel/</link><pubDate>Thu, 05 Apr 2018 22:17:00 +0800</pubDate><guid>https://blog.yowko.com/list-to-excel/</guid><description>使用 C# 將資料匯出成 Excel (.xlsx) 雖然大部份系統都會有報表相關功能，只是多數情況都無法在系統建置時就設想到所有使用者需求，加上常常功能需求的優先程度會被</description></item><item><title>使用 C# 將資料匯出為 CSV</title><link>https://blog.yowko.com/list-to-csv/</link><pubDate>Wed, 04 Apr 2018 15:21:00 +0800</pubDate><guid>https://blog.yowko.com/list-to-csv/</guid><description>使用 C# 將資料匯出為 CSV 最近有個需求是將部份資料內容倒進其他系統中，主要計劃是打算透過目標系統所開發的 restful api 來 insert 資料，但在實際透過 api 交換資料之前最</description></item><item><title>ASP.NET Identity 如何依據不同用途設定個別 Token 時效</title><link>https://blog.yowko.com/multiple-tokenlifespan/</link><pubDate>Tue, 03 Apr 2018 01:04:00 +0800</pubDate><guid>https://blog.yowko.com/multiple-tokenlifespan/</guid><description>ASP.NET Identity 如何依據不同用途設定個別 Token 時效 之前曾經筆記中 改 ASP.NET Identity 2 的 Token 時效 紀錄到 ASP.NET Identity 預設的 token 時效及調整方式。在專案實際使用時，user 提出其他需求：依</description></item><item><title>用 C# 將 PowerPoint 檔(.pptx .ppt) 轉換為 PDF</title><link>https://blog.yowko.com/ppt-to-pdf/</link><pubDate>Tue, 13 Mar 2018 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/ppt-to-pdf/</guid><description>用 C# 將 PowerPoint 檔(.pptx .ppt) 轉換為 PDF 之前筆記 使用 C# 將 Word 檔(.docx .doc) 轉換為 PDF 紀錄到該如何使用 Word 內建 API 將 Word 轉存為 PDF，後來有網友問到 Excel 及 PowerPoint 轉存</description></item><item><title>使用 C# 將 Excel 檔(.xlsx .xls) 轉換為 PDF</title><link>https://blog.yowko.com/excel-to-pdf/</link><pubDate>Mon, 12 Mar 2018 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/excel-to-pdf/</guid><description>使用 C# 將 Excel 檔(.xlsx .xls) 轉換為 PDF 之前筆記 使用 C# 將 Word 檔(.docx .doc) 轉換為 PDF 紀錄到該如何使用 Word 內建 API 將 Word 轉存為 PDF，後來有網友問到 Excel 及 PowerPoint 轉</description></item><item><title>使用 GIT 找出特定期間內特定檔案的修改資料</title><link>https://blog.yowko.com/git-log-specific-files/</link><pubDate>Mon, 26 Feb 2018 23:17:00 +0800</pubDate><guid>https://blog.yowko.com/git-log-specific-files/</guid><description>使用 GIT 找出特定期間內特定檔案的修改資料 過去幾次 production 環境的更版都遇到 config 異常的狀況，輕則只影響特定功能，嚴重的讓整個 application 都 crash，根本原因是 config 的</description></item><item><title>使用 telnet 檢查 SMTP 是否正常提供服務</title><link>https://blog.yowko.com/telnet-check-smtp/</link><pubDate>Sat, 24 Feb 2018 00:38:00 +0800</pubDate><guid>https://blog.yowko.com/telnet-check-smtp/</guid><description>使用 telnet 檢查 SMTP 是否正常提供服務 近期手上的重要專案到了要上線的最終階段，在正式對外服務前，Server 間的相關設定都需要一一確認與驗證，其中關於</description></item><item><title>Windows 7 無法安裝 IIS ASP.NET 模組</title><link>https://blog.yowko.com/windows-7-iis-install-aspnet-fail/</link><pubDate>Thu, 22 Feb 2018 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/windows-7-iis-install-aspnet-fail/</guid><description>Windows 7 無法安裝 IIS ASP.NET 模組 這個問題發生在公司的 Windows 7 電腦上，一般日常的程式功能開發大多使用 IIS Express，用到 IIS 的機會並不高，但如果要同時開多個 w</description></item><item><title>在 Windows 10 上啟用 Linux Bash Shell</title><link>https://blog.yowko.com/windows-10-enable-linux-bash/</link><pubDate>Tue, 20 Feb 2018 15:31:00 +0800</pubDate><guid>https://blog.yowko.com/windows-10-enable-linux-bash/</guid><description>在 Windows 10 上啟用 Linux Bash Shell 主要使用的筆電在某次更新失敗後就再也無法完成更新，一直停留在 Windows 10 舊版本，雖然在備用機上的 Windows 10 仍正常運作不至於錯過了幾個有趣</description></item><item><title>Windows 7 中無法使用 PowerShell 安裝 IIS？！改用 DISM</title><link>https://blog.yowko.com/windows-7-powershell-iis-dism/</link><pubDate>Fri, 09 Feb 2018 01:28:00 +0800</pubDate><guid>https://blog.yowko.com/windows-7-powershell-iis-dism/</guid><description>Windows 7 中無法使用 PowerShell 安裝 IIS？！改用 DISM 這次遇到的問題是在公司的 Windows 7 電腦上，雖然 Windows 7 也是優秀的作業系統，但終究是較早期的產品，對於一些新的工具就</description></item><item><title>IIS 10.0 開啟 ASP.NET 應用程式出現 403.14 錯誤</title><link>https://blog.yowko.com/iis-10-aspnet-40314-error/</link><pubDate>Thu, 08 Feb 2018 02:04:00 +0800</pubDate><guid>https://blog.yowko.com/iis-10-aspnet-40314-error/</guid><description>IIS 10.0 開啟 ASP.NET 應用程式出現 403.14 錯誤 最近一兩周嘗試找出同事提出的問題背後所隱含的根本原因，同事遇到的狀況已經解決，但遲遲沒有找出自己可以接受的答案實</description></item><item><title>C# DateTime 轉 JavaScript Date (依使用者偏好區域來顯示時間)</title><link>https://blog.yowko.com/csharp-datetime-javascript-date/</link><pubDate>Mon, 05 Feb 2018 00:17:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-datetime-javascript-date/</guid><description>C# DateTime 轉 JavaScript Date (依使用者偏好區域來顯示時間) 同事負責的頁面會有不同時區的 user 來瀏覽，時間類型的顯示會直接影響 user 的使用者體驗，尤其是各式公告跟有時效</description></item><item><title>IIS 存取 LocalDB (.MDF) 時出現 Error 52</title><link>https://blog.yowko.com/iis-localdb-mdf-error-52/</link><pubDate>Sun, 04 Feb 2018 00:01:00 +0800</pubDate><guid>https://blog.yowko.com/iis-localdb-mdf-error-52/</guid><description>IIS 存取 LocalDB (.MDF) 時出現 Error 52 資料庫是網頁應用程式儲存資料最常見的方式，存取資料的操作方法也最廣為人知，只是資料庫本身有維護及管理成本，如果目的只是本</description></item><item><title>IIS 設定啟用 CORS (Cross-Origin Resource Sharing) - 跨來源資源共用</title><link>https://blog.yowko.com/iis-enable-cors/</link><pubDate>Fri, 02 Feb 2018 02:06:00 +0800</pubDate><guid>https://blog.yowko.com/iis-enable-cors/</guid><description>IIS 設定啟用 CORS (Cross-Origin Resource Sharing) - 跨來源資源共用 網站工程師或多或少都曾聽過 CORS (Cross-Origin Resource Sharing) - 跨來源資源共用，甚至遇到相關問題，小弟也不例外，只是以往主要都是調整 ASP.NET</description></item><item><title>Enum To List&lt;SelectListItem&gt; 及 Enum To SelectList</title><link>https://blog.yowko.com/enum-to-selectlist/</link><pubDate>Tue, 30 Jan 2018 02:53:00 +0800</pubDate><guid>https://blog.yowko.com/enum-to-selectlist/</guid><description>Enum To List&amp;lt;SelectListItem&amp;gt; 及 Enum To SelectList 無意間看到專案中的一段程式碼，讓我停頓了一下，一時之間好幾個念頭閃過卻不知道該選擇哪個做法來改善 大意是 View 中有個欄位資料型別是一</description></item><item><title>DebugDiag 2 Analysis 出現 DacError</title><link>https://blog.yowko.com/debugdiag-2-analysis-dacerror/</link><pubDate>Sun, 28 Jan 2018 22:43:00 +0800</pubDate><guid>https://blog.yowko.com/debugdiag-2-analysis-dacerror/</guid><description>DebugDiag 2 Analysis 出現 DacError 繼前篇筆記 WinDBG 出現 SOS does not support the current target architecture ?! 紀錄在使用 WinDBG 偵錯 production issue 時遇到使用 64-bit 工作管理員匯出 32-bit 程式的 dump 而無法順利完成偵錯的狀況 遇到問題當下並</description></item><item><title>WinDBG 出現 SOS does not support the current target architecture ?!</title><link>https://blog.yowko.com/windbg-sos-does-not-support-current/</link><pubDate>Sun, 28 Jan 2018 02:00:00 +0800</pubDate><guid>https://blog.yowko.com/windbg-sos-does-not-support-current/</guid><description>WinDBG 出現 SOS does not support the current target architecture ?! 前幾天 production server 上的出現 CPU high 的 warning，當下立馬想到使用 WinDBG 來追查問題發生原因，只是我使用 WinDBG 的頻率不高，每次在使用前都</description></item><item><title>NLog 設定 Rule 僅包含部份 Logger</title><link>https://blog.yowko.com/nlog-rule-logger/</link><pubDate>Mon, 22 Jan 2018 02:07:00 +0800</pubDate><guid>https://blog.yowko.com/nlog-rule-logger/</guid><description>NLog 設定 Rule 僅包含部份 Logger log 是系統正式上線後，少數可以用來協助 debug 的資訊，而 debug 的難易度與解決問題的速度也就跟著 log 的品質而有極大的差異。 今天想要紀錄最</description></item><item><title>使用 Moment.js 來簡化 JavaScript 的時間處理</title><link>https://blog.yowko.com/moment-js/</link><pubDate>Sat, 20 Jan 2018 22:22:00 +0800</pubDate><guid>https://blog.yowko.com/moment-js/</guid><description>使用 Moment.js 來簡化 JavaScript 的時間處理 專案的前端頁面在 user 要求加速整個流程下，使用了一套 library - Date Range Picker 方便使用者可以在同一個 input 中同時選擇 start date 與 end date 也讓整體操作獲</description></item><item><title>使用 C# 取出 Word (.docx) 中的內嵌 Office 物件</title><link>https://blog.yowko.com/extract-office-object-from-word/</link><pubDate>Thu, 18 Jan 2018 02:46:00 +0800</pubDate><guid>https://blog.yowko.com/extract-office-object-from-word/</guid><description>使用 C# 取出 Word (.docx) 中的內嵌 Office 物件 之前筆記 取得 Word(.docx) 中的內嵌檔案 紀錄到如何在 word 中嵌入其他物件，也提到如何簡易地取出內嵌物件 今天則是要紀錄如何使用 C# 將 Word</description></item><item><title>取得 Word(.docx) 中的內嵌檔案</title><link>https://blog.yowko.com/extract-embedded-file-in-word/</link><pubDate>Wed, 17 Jan 2018 01:22:00 +0800</pubDate><guid>https://blog.yowko.com/extract-embedded-file-in-word/</guid><description>取得 Word(.docx) 中的內嵌檔案 之前筆記 使用 C# 將 Word 檔(.docx .doc) 轉換為 PDF 曾經分享過如何使用 C# 將 Word 轉成 PDF，同事在實作後 user 反應如果 word 中有其他文件(e.x</description></item><item><title>Windows Server 2016 docker 執行身份</title><link>https://blog.yowko.com/windows-server-2016-docker-users/</link><pubDate>Sun, 14 Jan 2018 23:47:00 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-docker-users/</guid><description>Windows Server 2016 docker 執行身份 最近重新安裝幾台了電腦，一開始都沒有 docker 的執行權限，原因就是執行 docker for windows 需要有特殊權限：docker-users，而 docker-users 預設僅加入</description></item><item><title>Dapper 讀取 Oracle 資料 - 更新版 (使用 Oracle.ManagedDataAccess)</title><link>https://blog.yowko.com/dapper-oracle-manageddataaccess/</link><pubDate>Sun, 14 Jan 2018 17:20:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-oracle-manageddataaccess/</guid><description>Dapper 讀取 Oracle 資料 - 更新版 (使用 Oracle.ManagedDataAccess) 之前筆記 Dapper 讀取 Oracle 資料 提到使用 x64 版本的 oracle client - Oracle.ManagedDataAccess 無法成功連線，這句話是錯誤的，一來 Oracle.ManagedDataAccess 本身是 32位元，另外就是 Oracle.ManagedDataAccess 絕對可</description></item><item><title>透過 ProGet 取得官方 NuGet 套件</title><link>https://blog.yowko.com/proget-nuget-connector/</link><pubDate>Sat, 13 Jan 2018 23:57:00 +0800</pubDate><guid>https://blog.yowko.com/proget-nuget-connector/</guid><description>透過 ProGet 取得官方 NuGet 套件 之前筆記 將 NuGet Package 發行至 ProGet 曾經介紹到如何將內部使用的 NuGet package 發行至內部 NuGet server：ProGet 上，在試行一段時間後決定擴大範</description></item><item><title>ASP.NET Identity 修改預設 Cookie 名稱</title><link>https://blog.yowko.com/aspnet-identity-change-cookiename/</link><pubDate>Sat, 13 Jan 2018 15:09:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-change-cookiename/</guid><description>ASP.NET Identity 修改預設 Cookie 名稱 最近專案同時有前台與後台在進行開發，過去習慣的做法是將前後台使用同一個 VS 專案 (project) 進行開發，再透過 ASP.NET MVC Area 的功能來切分，但因為這</description></item><item><title>利用 Pure CSS 讓 HTML Table 也能有 RWD 效果</title><link>https://blog.yowko.com/pure-css-html-table-rwd/</link><pubDate>Tue, 09 Jan 2018 01:35:00 +0800</pubDate><guid>https://blog.yowko.com/pure-css-html-table-rwd/</guid><description>利用 Pure CSS 讓 HTML Table 也能有 RWD 效果 這是最近專案 user 提出的需求：所有對外服務的頁面都要有 RWD 顯示。這是現代化網站基本條件並不算特殊需求。雖然透過 grid system 的排版</description></item><item><title>JavaScript 偵測 Request 來自瀏覽器的 Go Back (回到上一頁)</title><link>https://blog.yowko.com/javascript-detect-request-from-go-back/</link><pubDate>Mon, 08 Jan 2018 19:01:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-detect-request-from-go-back/</guid><description>JavaScript 偵測 Request 來自瀏覽器的 Go Back (回到上一頁) 這是自己寫的 bug 所衍生出來的需求，大意是如果 user 在某個頁面執行 submit 動作後會 redirect 到新頁面，但如果 user 此時按下 go back 再</description></item><item><title>ASP.NET MVC 上的 Ajax 動作都被觸發多次？！</title><link>https://blog.yowko.com/aspnet-mvc-ajax-not-only-once/</link><pubDate>Sun, 07 Jan 2018 20:01:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-ajax-not-only-once/</guid><description>ASP.NET MVC 上的 Ajax 動作都被觸發多次？! 幫同事調整程式的過程中發現，View 的 Ajax 功能都會被觸發不止一次，本來以為是手殘按了兩次，特別留意後發現問題仍然</description></item><item><title>使用 C# 將 Word 檔(.docx .doc) 轉換為 PDF</title><link>https://blog.yowko.com/c-sharp-word-to-pdf/</link><pubDate>Thu, 04 Jan 2018 03:22:00 +0800</pubDate><guid>https://blog.yowko.com/c-sharp-word-to-pdf/</guid><description>使用 C# 將 Word 檔(.docx .doc) 轉換為 PDF 同事想要將 user 上傳的 word 檔轉換為 pdf，降低內容被篡改的機會，記憶中 word 轉存成 PDF 功能的程式碼並不多，但印象模糊，</description></item><item><title>ASP.NET Web API 上傳檔案出現 415 Unsupported Media Type 錯誤</title><link>https://blog.yowko.com/aspnet-web-api-415-unsupported-media/</link><pubDate>Mon, 25 Dec 2017 23:33:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-web-api-415-unsupported-media/</guid><description>ASP.NET Web API 上傳檔案出現 415 Unsupported Media Type 錯誤 最近專案前端高互動性的頁面採用 Vue.js 來呈現，讓原本習慣的開發流程跟方式都需求做些調整，像是 Vue.js 存取資料部份因為沒有 server</description></item><item><title>JavaScript 從陣列中取出符合條件的第一個物件 (C# LINQ 的 FirstOrDefault)</title><link>https://blog.yowko.com/javascript-firstordefault/</link><pubDate>Mon, 25 Dec 2017 13:25:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-firstordefault/</guid><description>JavaScript 從陣列中取出符合條件的第一個物件 (C# LINQ 的 FirstOrDefault) 之前筆記 JavaScript 依屬性值過濾陣列取得完整物件 紀錄到如何將陣列中的符合特定屬性值條件的物件取出，與本文要介</description></item><item><title>JavaScript 依屬性值過濾陣列取得完整物件</title><link>https://blog.yowko.com/javascript-filter-array-by-value/</link><pubDate>Sun, 24 Dec 2017 15:48:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-filter-array-by-value/</guid><description>JavaScript 依屬性值過濾陣列取得完整物件 之前筆記 JavaScript 在遞迴陣列中取得特定屬性值 紀錄到如何將依屬性名稱取出陣列物件屬性值，當時需求是為了取得物件內包含的所</description></item><item><title>JavaScript 在遞迴陣列中取得特定屬性值</title><link>https://blog.yowko.com/javascript-recursive-map/</link><pubDate>Sun, 24 Dec 2017 00:59:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-recursive-map/</guid><description>JavaScript 在遞迴陣列中取得特定屬性值 之前筆記 JavaScript Array 的加總 紀錄到 int Array 的加總及 object Array 依屬性名稱加總內容的做法，今天則是要來紀錄如何將遞迴陣列中的特定屬性取出</description></item><item><title>JavaScript Array 的加總</title><link>https://blog.yowko.com/javascript-array-sum/</link><pubDate>Fri, 22 Dec 2017 03:51:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-array-sum/</guid><description>JavaScript Array 的加總 最近的專案中因為前端互動性強，採用了較多的 JavaScript 來處理畫面互動性，雖然身為一名網站開發工程師，JS 並不算陌生，但實際開發時還是經常需要</description></item><item><title>關於 ASP.NET Identity 2 時效設定</title><link>https://blog.yowko.com/aspnet-identity-2-timespan/</link><pubDate>Mon, 18 Dec 2017 02:44:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-2-timespan/</guid><description>關於 ASP.NET Identity 2 時效設定 之前筆記 ASP.NET Identity 2 啟用自動鎖定機制 與 改 ASP.NET Identity 2 的 Token 時效，分別介紹到如何修改自動鎖定的結束時間以及產生 token 的預設時效，雖然兩者作用不</description></item><item><title>ASP.NET Identity 2 手動檢查 Token 有效性</title><link>https://blog.yowko.com/aspnet-identity-2-verify-token/</link><pubDate>Sat, 16 Dec 2017 23:36:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-2-verify-token/</guid><description>ASP.NET Identity 2 手動檢查 Token 有效性 之前筆記 改 ASP.NET Identity 2 的 Token 時效 紀錄到可以調整 ASP.NET Identity 產生出 Token 的有效時間，而其中也提到可以參考 ForgotPassword 的寫法 (Forgotpasswrod &amp;ndash;&amp;gt; 產生含有 token 的 reset password 連結 &amp;ndash;&amp;gt; 使</description></item><item><title>改 ASP.NET Identity 2 的 Token 時效</title><link>https://blog.yowko.com/aspnet-identity-2-token-lifetime/</link><pubDate>Fri, 15 Dec 2017 00:37:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-2-token-lifetime/</guid><description>改 ASP.NET Identity 2 的 Token 時效 專案對於系統發出給 user 的專用連結(重設密碼、promotion link)有個共通的要求：需要可以指定過期時間。為連結加入時效限</description></item><item><title>Entity Framework 無法匯入 Oracle View？！</title><link>https://blog.yowko.com/entityframework-oracle-view/</link><pubDate>Wed, 13 Dec 2017 02:58:00 +0800</pubDate><guid>https://blog.yowko.com/entityframework-oracle-view/</guid><description>Entity Framework 無法匯入 Oracle View？ 同事反應在使用 Entity Framework EDMX 更新 Model 時一直無法將 View 加入(未看先猜是 primary key 所造成的問題，果不其然真的猜中XD) DB View 的 priamry key 問題在 Entity Framework</description></item><item><title>ASP.NET Identity 2 啟用自動鎖定機制</title><link>https://blog.yowko.com/aspnet-identity-2-lockout/</link><pubDate>Mon, 11 Dec 2017 22:31:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-2-lockout/</guid><description>ASP.NET Identity 2 啟用自動鎖定機制 新專案有個需求是要讓 user 在嘗試登入時超過指定登入次數就自動鎖定帳號讓 user 無法登入，而 ASP.NET Identity 本身就已經涵蓋了這個功能，不需要自</description></item><item><title>使用 Pure CSS 製作 Treeview (樹狀圖)</title><link>https://blog.yowko.com/pure-css-treeview/</link><pubDate>Sun, 10 Dec 2017 16:42:00 +0800</pubDate><guid>https://blog.yowko.com/pure-css-treeview/</guid><description>使用 Pure CSS 製作 Treeview (樹狀圖) 新專案有個功能需要用到樹狀圖 (Treeview)，算是個常見需求，難度也不算高，但更仔細了解細節後，發現似乎又有點不</description></item><item><title>網站畫面吃到 SCSS 樣式 ？！</title><link>https://blog.yowko.com/scss/</link><pubDate>Sat, 09 Dec 2017 23:35:00 +0800</pubDate><guid>https://blog.yowko.com/scss/</guid><description>網站畫面吃到 SCSS 樣式 ？ 最近正在如火如塗地開發新專案，眼看著上線時間日漸逼近，網站的功能也慢慢有雛型了，偶爾間幫同事 debug 的過程中發現同事負責開發的</description></item><item><title>TortoiseGit 與遠端操作的功能不見了？！</title><link>https://blog.yowko.com/tortoisegit-missing-options/</link><pubDate>Mon, 27 Nov 2017 23:29:00 +0800</pubDate><guid>https://blog.yowko.com/tortoisegit-missing-options/</guid><description>TortoiseGit 與遠端操作的功能不見了？！ 同事反應他電腦上的 TortoiseGit 無法與遠端 Repository 互動(包括 push、fetch、pull&amp;hellip;)，原本以為是權限問題，</description></item><item><title>在 Windows Container 使用 tns 連線 Oracle</title><link>https://blog.yowko.com/windows-container-tns-oracle/</link><pubDate>Wed, 22 Nov 2017 00:07:00 +0800</pubDate><guid>https://blog.yowko.com/windows-container-tns-oracle/</guid><description>在 Windows Container 使用 tns 連線 Oracle 之前筆記 不用安裝 Oracle Client 使用 C# 透過 tnsnamses.ora 連結 Oracle 介紹到如何讓 server 不用安裝 Oracle Client 就可以使用 tns 存取 Oracle，其實最終目的就是想要在 Windows Container 透</description></item><item><title>不用安裝 Oracle Client 使用 C# 透過 tnsnamses.ora 連結 Oracle</title><link>https://blog.yowko.com/csharp-oracle-tns-without-client/</link><pubDate>Tue, 21 Nov 2017 23:11:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-oracle-tns-without-client/</guid><description>不用安裝 Oracle Client 使用 C# 透過 tnsnamses.ora 連結 Oracle 之前進公司時報到的第一天依公司前輩給的文件開始架設開發環境，大部份環境都很熟悉不用多久時間就完成安裝及設定，唯</description></item><item><title>使用 delagate 來進行多個條件驗證</title><link>https://blog.yowko.com/delegate-rule-check/</link><pubDate>Mon, 20 Nov 2017 21:57:00 +0800</pubDate><guid>https://blog.yowko.com/delegate-rule-check/</guid><description>使用 delagate 來進行多個條件驗證 今天跟同事討論到某個功能在實際執行前需要做一些商業邏輯檢查，確認符合所有規則才能繼續執行後面動作，同事本來使用多層 if</description></item><item><title>將 method 或是 class 標記為 internal 來限定專案使用</title><link>https://blog.yowko.com/limit-caller-method-class/</link><pubDate>Sun, 19 Nov 2017 21:11:00 +0800</pubDate><guid>https://blog.yowko.com/limit-caller-method-class/</guid><description>將 method 或是 class 標記為 internal 來限定專案使用 一般專案常常會有部份操作是的前後台行為相同或是極度類似的，如果這些行為雷同的程式分別置於前後台會讓程式碼顯得</description></item><item><title>如何看程式是 32 bit 還是 64 bit</title><link>https://blog.yowko.com/binary-is-32-bit-64-bit/</link><pubDate>Sat, 18 Nov 2017 23:51:00 +0800</pubDate><guid>https://blog.yowko.com/binary-is-32-bit-64-bit/</guid><description>如何看程式是 32 bit 還是 64 bit 今天正在嘗試使用 docker 安裝 oracle client，嘗試的過程中發現之前的筆記有錯誤的地方：Dapper 讀取 Oracle 資料 文中提到 Oracle.ManagedDataAccess 是 64 bit</description></item><item><title>使用 Git ADD 指令出現錯誤</title><link>https://blog.yowko.com/git-lf-replace-crlf-error/</link><pubDate>Fri, 17 Nov 2017 23:54:00 +0800</pubDate><guid>https://blog.yowko.com/git-lf-replace-crlf-error/</guid><description>使用 Git ADD 指令出現錯誤 同事反應無法使用 TortoiseGit 將新檔案 commit，後來進一步發現連加入 index 都不行，我接手後發現原現 git add 指令無法正常使用，一度以為是安</description></item><item><title>Windows Container 使用固定 IP</title><link>https://blog.yowko.com/windows-container-static-ip/</link><pubDate>Thu, 16 Nov 2017 00:47:00 +0800</pubDate><guid>https://blog.yowko.com/windows-container-static-ip/</guid><description>Windows Container 使用固定 IP 有時候服務主機本身沒有綁定 FQDN，只透過 IP 來連線存取，這個時候動態分配 ip 就會造成其他服務需要調整連線資訊，相當不方便，所以會</description></item><item><title>WebPack 在 Visual Studio 無法正確編譯，在 Command Prompt 卻正常</title><link>https://blog.yowko.com/webpack-error-in-visual-studio/</link><pubDate>Tue, 14 Nov 2017 23:21:00 +0800</pubDate><guid>https://blog.yowko.com/webpack-error-in-visual-studio/</guid><description>WebPack 在 Visual Studio 無法正確編譯，在 Command Prompt 卻正常 在之前筆記 在 Visual Studio 中使用 WebPack 來編譯 Vue.js 紀錄到如何在 Visual Studio 使用 WebPack 來編譯 Vue.js，設定上步驟並不多，使用上也相當方</description></item><item><title>使用 Dockerfile 建立 Windows Container 版本 Oracle XE</title><link>https://blog.yowko.com/dockfile-windows-container-oracle-xe/</link><pubDate>Tue, 14 Nov 2017 00:43:00 +0800</pubDate><guid>https://blog.yowko.com/dockfile-windows-container-oracle-xe/</guid><description>使用 Dockerfile 建立 Windows Container 版本 Oracle XE 之前曾經在筆記 在 Windows 中使用 Command 安裝 Oracle XE (Silent Installation) 提到打算將 db 語法也納入自動化測試，所以想要透過 script 來安裝 Oracle XE，既然已經確定 Oracle XE 可</description></item><item><title>在 Visual Studio 中使用 WebPack 來編譯 Vue.js</title><link>https://blog.yowko.com/visual-studio-webpack-vuejs/</link><pubDate>Mon, 13 Nov 2017 02:45:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-webpack-vuejs/</guid><description>在 Visual Studio 中使用 WebPack 來編譯 Vue.js 筆記 使用 Webpack 來編譯 Vue.js Single File Components (.vue) 紀錄著使用 webpack 來編譯 .vue 檔案的做法，而我平常主要還是使用 Visual Studio 開發，所以還是得將 WebPack 及 Visual Studio 做個整合，</description></item><item><title>使用 Webpack 來編譯 Vue.js Single File Components (.vue)</title><link>https://blog.yowko.com/webpack-vue-file/</link><pubDate>Sun, 12 Nov 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/webpack-vue-file/</guid><description>使用 Webpack 來編譯 Vue.js Single File Components (.vue) 最近因為新專案的部份頁面有較多的互動功能，所以打算透過 Vue.js 來處理，其中某些功能在多個頁面間可以共用，就使用了 Vue.js 的 Single File Components (.vue)</description></item><item><title>如何修改 Visual Studio Code Terminal 使用程式</title><link>https://blog.yowko.com/visual-studio-code-terminal/</link><pubDate>Sun, 12 Nov 2017 19:53:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-code-terminal/</guid><description>如何修改 Visual Studio Code Terminal 使用程式 Visual Studio Code 在啟動速度及跨平台支援上非常優秀，更新速度以及套件豐富性也非常好，因此大受開發人員喜愛，而我大多撰寫 ASP.NET MVC 平常還</description></item><item><title>ASP.NET Identity 搭配 DataBase first 與 SQL Server</title><link>https://blog.yowko.com/aspnet-identity-db-first-mssql/</link><pubDate>Wed, 08 Nov 2017 23:58:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-db-first-mssql/</guid><description>ASP.NET Identity 搭配 DataBase first 與 SQL Server 之前曾經輕描淡寫地介紹過 ASP.NET Identity 預設使用 Code First 機制。 在 MVC 預設專案範本中，會在 Regiser 時建立 ASP.NET Identity 的相關 db table 及 code first 需要用到的 __MigrationHistory table，</description></item><item><title>在 Windows 中使用 Command 安裝 Oracle XE (Silent Installation)</title><link>https://blog.yowko.com/windows-oracle-xe-silent-install/</link><pubDate>Wed, 08 Nov 2017 01:48:00 +0800</pubDate><guid>https://blog.yowko.com/windows-oracle-xe-silent-install/</guid><description>在 Windows 中使用 Command 安裝 Oracle XE (Silent Installation) 想要將自動化測試範圍擴大，其中一部份就是將 db 語法也納入自動化測試中，為了避免跨 OS 遇到更多麻煩，所以打算先透過 Windows Oracle 來進</description></item><item><title>Git Push 出現 501 Not Implemented 錯誤</title><link>https://blog.yowko.com/git-push-501-not-implemented/</link><pubDate>Mon, 06 Nov 2017 23:53:00 +0800</pubDate><guid>https://blog.yowko.com/git-push-501-not-implemented/</guid><description>Git Push 出現 501 Not Implemented 錯誤 這是同事遇到的問題，雖然最後有順利解決問題，但仍然搞不清問題發生的原因。 同事在 Push 某個 repository 時出現 error: RPC failed; HTTP 501 curl 22 The requested URL returned error: 501 Not Implemented</description></item><item><title>HttpContextBase 找不到 GetOwinContext 定義？！</title><link>https://blog.yowko.com/httpcontextbase-getowincontext/</link><pubDate>Mon, 06 Nov 2017 22:15:00 +0800</pubDate><guid>https://blog.yowko.com/httpcontextbase-getowincontext/</guid><description>HttpContextBase 找不到 GetOwinContext 定義？ 這是在將 ASP.NET Identity 相關功能加至 MVC 專案時所遇到的問題。我在加入 ASP.NET Identity 時習慣使用 Empty 專案範本從無至有加入相關程式碼，而不是由預設 MVC 專案範本</description></item><item><title>將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中</title><link>https://blog.yowko.com/add-aspnet-identity-empty-project/</link><pubDate>Sun, 05 Nov 2017 23:04:00 +0800</pubDate><guid>https://blog.yowko.com/add-aspnet-identity-empty-project/</guid><description>將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中 MVC 預設專案範本 v.s. MVC Empty 專案範本，你會怎麼選呢？ 這個問題前些日子也在網路上掀起熱鬧的討論，相信大家都有各自的喜好，但不可否</description></item><item><title>LINQPad 5 無法連線 Oracle？！</title><link>https://blog.yowko.com/linqpad-5-oracle/</link><pubDate>Sat, 04 Nov 2017 01:38:00 +0800</pubDate><guid>https://blog.yowko.com/linqpad-5-oracle/</guid><description>LINQPad 5 無法連線 Oracle？! LINQPad 的便利，想必許多 .Net 開發人員都感同身受，從以前用來撰寫 LINQ，到現在不僅可以用來驗證 C# 語法正確性，甚至還可以從</description></item><item><title>Visual Studio 2015 無法新增專案？！</title><link>https://blog.yowko.com/visual-studio-cannot-add-project/</link><pubDate>Thu, 02 Nov 2017 23:18:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-cannot-add-project/</guid><description>Visual Studio 2015 無法新增專案？！ 專案如火如塗地進行中，要加入的 component 正以飛快速度被建立出來，想不到此時卻又遇到人品大爆發，我居然無法在方案 (solution) 中新增專案 (p</description></item><item><title>取得 Entity Framework 存取 DB 時的實際 SQL Script</title><link>https://blog.yowko.com/entityframework-log-sql/</link><pubDate>Sun, 29 Oct 2017 15:48:00 +0800</pubDate><guid>https://blog.yowko.com/entityframework-log-sql/</guid><description>取得 Entity Framework 存取 DB 時的實際 SQL Script 使用 ORM 的好處之一就是可以專注在 object 控制，不用擔心 sql 語法不熟悉而寫不出正確的 sql script，也可以省下與不同 sql 語法間 (</description></item><item><title>Oracle 搭配 Entity Framework 寫入資料出現 ORA-02291 錯誤</title><link>https://blog.yowko.com/oracle-entityframework-ora-02291/</link><pubDate>Sun, 29 Oct 2017 01:31:00 +0800</pubDate><guid>https://blog.yowko.com/oracle-entityframework-ora-02291/</guid><description>Oracle 搭配 Entity Framework 寫入資料出現 ORA-02291 錯誤 之前文章 Oracle 如何做到 SQL Server 的 Identity 欄位型態 介紹到在 Oracle 將 table 欄位設定成模擬 SQL Server Identity 的做法，但實際使用上卻發現某些 table 寫入時卻出現</description></item><item><title>Oracle 如何做到 SQL Server 的 Identity 欄位型態</title><link>https://blog.yowko.com/oracle-identity/</link><pubDate>Sat, 28 Oct 2017 15:41:00 +0800</pubDate><guid>https://blog.yowko.com/oracle-identity/</guid><description>Oracle 如何做到 SQL Server 的 Identity 欄位型態 在 DB table 規劃時，內部使用的 primary key 欄位常見用法分成兩派：使用 int 或是 GUID，在 SQL Server 上兩種做法都有對應的欄位型態，而在 Oracle 上</description></item><item><title>Visual Studio JavaScript 編輯視窗出現 ECMAScript 錯誤提示</title><link>https://blog.yowko.com/visual-studio-ecmascript-level/</link><pubDate>Sat, 28 Oct 2017 08:47:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-ecmascript-level/</guid><description>Visual Studio JavaScript 編輯視窗出現 ECMAScript 錯誤提示 因為要要處理前端頁面效果，在參考網路分享的 Vue.js 套件時，一直出現 ECMAScript 錯誤提示，雖然不影響實際功能執行，但編輯畫面上一直</description></item><item><title>將 IIS 站台離線做法 - 使用 App_offline.htm</title><link>https://blog.yowko.com/iis-app-offline/</link><pubDate>Fri, 27 Oct 2017 00:45:00 +0800</pubDate><guid>https://blog.yowko.com/iis-app-offline/</guid><description>將 IIS 站台離線做法 - 使用 App_offline.htm 同事問到 App_offline.htm 的功用，一時之間沒意會過來，只覺得應該沒用過，直到同事提到是用來將 iis 站台下線用，才想起原來是它！！ 既然忘記</description></item><item><title>Visual Studio 無法使用 Yarn 安裝套件</title><link>https://blog.yowko.com/visual-studio-yarn/</link><pubDate>Fri, 27 Oct 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-yarn/</guid><description>Visual Studio 無法使用 Yarn 安裝套件 最近新專案開發，不像以前有專責的前端工程師協助前端頁面處理，一切都要自己來，所以就出現需要在 Visual Studio 安裝前端套件的現象，今</description></item><item><title>使用指令 (jenkins cli) 來執行 Jenkins 動作：安裝 plugin、重新啟動</title><link>https://blog.yowko.com/jenkins-cli/</link><pubDate>Thu, 26 Oct 2017 08:53:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-cli/</guid><description>使用指令 (jenkins cli) 來執行 Jenkins 動作：安裝 plugin、重新啟動 一般情境我們都是使用 Jenkins GUI 來操作來安裝套件或是其他動作，可說是簡單又方便幾乎沒有進入門檻，</description></item><item><title>Oracle 快速刪除並重建使用者</title><link>https://blog.yowko.com/oracle-create-delete-user-tablespace/</link><pubDate>Tue, 24 Oct 2017 23:59:00 +0800</pubDate><guid>https://blog.yowko.com/oracle-create-delete-user-tablespace/</guid><description>Oracle 快速刪除並重建使用者 之前工作大多是使用 MS SQL Server，現在任職公司則是使用 Oracle 為主力 DB。前陣子工作內容都是放在現有專案的改善及維護，平常</description></item><item><title>設定 ASP.NET WebAPI OData 的 Swagger</title><link>https://blog.yowko.com/aspnet-webapi-odata-swagger/</link><pubDate>Sun, 15 Oct 2017 17:45:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-webapi-odata-swagger/</guid><description>設定 ASP.NET WebAPI OData 的 Swagger Swagger 的強大功能不需要再重複強調，重要性在團隊開發上已經扮演著不可或缺的地位，常常在建立 Web API 專案後就會順手將 swagger 設定好，而在以 Web API 為</description></item><item><title>如何將 OData v3 升級為 OData v4</title><link>https://blog.yowko.com/odata-v3-to-odata-v4/</link><pubDate>Sun, 15 Oct 2017 12:24:00 +0800</pubDate><guid>https://blog.yowko.com/odata-v3-to-odata-v4/</guid><description>如何將 OData v3 升級為 OData v4 ASP.NET Web API 支援最高版本 OData 是 v4，但只能透過手動的方式建立，OData v3 就支援利用 scaffolding 來長出各個 table 的 OData endpoint ，加上 OData v3 到 OData v4 就連 namespace 都</description></item><item><title>OData 無法使用 $count, $orderby, $select, $top, $expand, $filter</title><link>https://blog.yowko.com/odata-error-badrequest/</link><pubDate>Sat, 14 Oct 2017 01:10:00 +0800</pubDate><guid>https://blog.yowko.com/odata-error-badrequest/</guid><description>OData 無法使用 $count, $orderby, $select, $top, $expand, $filter 同事回報在介接 OData API 時發現無法使用 $filter 來過濾資料，經一步測試發現不僅是 $filter 無法使用，OData 其他運算子都無法正常運作，來看</description></item><item><title>Git Submodule 指定 Branch</title><link>https://blog.yowko.com/git-submodule-specific-branch/</link><pubDate>Thu, 12 Oct 2017 23:25:00 +0800</pubDate><guid>https://blog.yowko.com/git-submodule-specific-branch/</guid><description>Git Submodule 指定 Branch 曾經在 Git 專案引用其他 Repository 的作法(Git Submodule) 介紹過如何使用 Git submodule 來引用其他 repository 內容，最近同事在使用 Git submodule 時發現預設使用 master branch，問到該如</description></item><item><title>使用 ASP.NET Web API 建立 OData 服務</title><link>https://blog.yowko.com/aspnet-web-api-odata/</link><pubDate>Thu, 12 Oct 2017 00:50:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-web-api-odata/</guid><description>使用 ASP.NET Web API 建立 OData 服務 OData 從 2013 年首次出現後就吸引不少技術人員目光，剛好當時專案允許立馬就嘗試，以當時的專案需要同時提供 API 給 WebSite、iOS</description></item><item><title>無法啟動 Visual Studio</title><link>https://blog.yowko.com/visual-studio-load-menu-problem/</link><pubDate>Wed, 11 Oct 2017 22:29:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-load-menu-problem/</guid><description>無法啟動 Visual Studio 最近開始使用 ASP.NET Core 開發新專案，過程中不僅要熟悉新的語法跟架構，就連 Visual Studio 也來湊熱鬧，時不時就 crash ，最近幾天更變本加厲完全開不起來XD，</description></item><item><title>SQL Server - 無法建立 Database Diagrams</title><link>https://blog.yowko.com/database-diagrams-backend-version/</link><pubDate>Wed, 11 Oct 2017 22:16:00 +0800</pubDate><guid>https://blog.yowko.com/database-diagrams-backend-version/</guid><description>SQL Server - 無法建立 Database Diagrams 想要了解 table 間的關聯與 table 的欄位屬性相關資訊，透過 SQL Server 的 Database Diagrams 是最直接方便的，所以新專案的部份功能想透過 Database Diagrams 來釐清 table 間相對關係，</description></item><item><title>Visual Studio Build fail - Exception has been thrown by the target of an invocation</title><link>https://blog.yowko.com/visual-studio-build-fail-exception/</link><pubDate>Wed, 11 Oct 2017 22:06:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-build-fail-exception/</guid><description>Visual Studio Build fail - Exception has been thrown by the target of an invocation 這是在本機利用 Visual Studio 2017 debug 程式時遇到的問題，明明程式修改只改 View 竟然引發了 build fail，我又沒有啟用 build view 功能@@&amp;ld</description></item><item><title>怎麼看 ASP.NET Web API 的版本</title><link>https://blog.yowko.com/aspnet-web-api-version/</link><pubDate>Mon, 09 Oct 2017 21:34:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-web-api-version/</guid><description>怎麼看 ASP.NET Web API 的版本 這幾天在參考 OData 官方文件說明時，留意到內容提到需要使用 ASP.NET Web API 2.2 以上，心裡一陣疑問：現在最新版是 2.3 吧？！ 是文件舊了嗎？ 還是只要</description></item><item><title>使用 Entity Framework 連線 Oracle - Database First</title><link>https://blog.yowko.com/entity-framework-6-database-first-with-oracle/</link><pubDate>Sun, 01 Oct 2017 00:47:00 +0800</pubDate><guid>https://blog.yowko.com/entity-framework-6-database-first-with-oracle/</guid><description>使用 Entity Framework 連線 Oracle - Database First 之前工作一直使用 Entity Framework 加速專案開發速度，主要是因為過去公司都使用 MS-SQL，與 Entity Framework 整合度很高，配合 Visual Studio Scaffolding 功能，可以很迅速</description></item><item><title>ASP.NET Identity 2 使用 EntityFramework 搭配 Oracle</title><link>https://blog.yowko.com/aspnet-identity-2-entityframework-oracle/</link><pubDate>Sat, 30 Sep 2017 01:01:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-2-entityframework-oracle/</guid><description>ASP.NET Identity 2 使用 EntityFramework 搭配 Oracle 相信開發 ASP.NET 比較久的朋友都曾經聽過甚至是用過 ASP.NET Membership - ASP.NET 2.0 時期的預設使用者權限管理系統，但也相信不少人對它深惡痛絕，不可否認以現</description></item><item><title>CentOS 7 設定防火牆允許特定 PORT 連線</title><link>https://blog.yowko.com/centos7-firewall/</link><pubDate>Fri, 29 Sep 2017 00:08:00 +0800</pubDate><guid>https://blog.yowko.com/centos7-firewall/</guid><description>CentOS 7 設定防火牆允許特定 PORT 連線 一直以來接觸的作業系統都是 Windows 為主，加上自己熟悉的程式語言是 C#，production 環境部署及相關設定都是 Win</description></item><item><title>Windows Dockerfile 如何指定 VOLUME - 更新版</title><link>https://blog.yowko.com/windows-dockerfile-volume-with-space/</link><pubDate>Thu, 28 Sep 2017 00:04:00 +0800</pubDate><guid>https://blog.yowko.com/windows-dockerfile-volume-with-space/</guid><description>Windows Dockerfile 如何指定 VOLUME - 更新版 前幾天同事打算將 Windows container 中的 Jenkins 中的 job 跟 log 保留在 container 外部，避免因為 jenkins container 更新而造成設定資料遺失，經過一番測試後出現了 Windows Dockerfile 如何指定</description></item><item><title>關於提昇 NLog 寫入檔案效能</title><link>https://blog.yowko.com/nlog-async-keepfileopen/</link><pubDate>Wed, 27 Sep 2017 00:37:00 +0800</pubDate><guid>https://blog.yowko.com/nlog-async-keepfileopen/</guid><description>關於提昇 NLog 寫入檔案效能 這是之前一直想做的測試筆記用來比較紀錄 NLog 參數設定對於寫入 log 的效能差異比較，起因是曾經在專案中遇到程式本身沒有問題，卻因</description></item><item><title>Windows Dockerfile 如何指定 VOLUME</title><link>https://blog.yowko.com/windows-dockerfile-volume/</link><pubDate>Tue, 26 Sep 2017 02:18:00 +0800</pubDate><guid>https://blog.yowko.com/windows-dockerfile-volume/</guid><description>Windows Dockerfile 如何指定 VOLUME 同事在參考 使用 dockerfile 建立 Windows Container 版 Jenkins 後，打算透過指定 volume 的方式將 Jenkins 相關設定儲存在 host 環境上不用隨 container 異動重新設定，經過一番嘗試，終於找出正確</description></item><item><title>如何得知電腦上 .Net FrameWork 版本？ - 使用 PowerShell</title><link>https://blog.yowko.com/get-dot-net-framework-version/</link><pubDate>Fri, 22 Sep 2017 00:01:00 +0800</pubDate><guid>https://blog.yowko.com/get-dot-net-framework-version/</guid><description>如何得知電腦上 .Net FrameWork 版本？ - 使用 PowerShell 今天再次遇到想要確認 server 上 .Net FrameWork 版本的情境，套用著相同的 SOP： google 關鍵字，找到 microsoft docs 的說明網頁，再花了幾十秒看完 microsoft</description></item><item><title>在 CentOS 7 上將 Redis sentinel 安裝成開機啟動的 service</title><link>https://blog.yowko.com/centos7-redis-sentinel-service/</link><pubDate>Thu, 21 Sep 2017 00:52:00 +0800</pubDate><guid>https://blog.yowko.com/centos7-redis-sentinel-service/</guid><description>在 CentOS 7 上將 Redis sentinel 安裝成開機啟動的 service 之前曾經在 在 Linux 中將 Redis 安裝成 Service - 以 CentOS 7 為例 介紹過如何使用 redis 內建的 install_server.sh 執行檔將 redis instance 安裝成開機啟動的 service，</description></item><item><title>.NET 專案在 Git commit 前自動執行 Unit Test</title><link>https://blog.yowko.com/git-hook-pre-commit-unit-test/</link><pubDate>Tue, 19 Sep 2017 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/git-hook-pre-commit-unit-test/</guid><description>.NET 專案在 Git commit 前自動執行 Unit Test 身為一個優秀的工程師對於提升專案品質都有一定的堅持，但對於 Unit Test 所帶來的效益，相信大家應該都會給予正面評價。而專案測</description></item><item><title>Git 如何還原已經 push 的 commit</title><link>https://blog.yowko.com/git-revert/</link><pubDate>Sun, 17 Sep 2017 22:34:00 +0800</pubDate><guid>https://blog.yowko.com/git-revert/</guid><description>Git 如何還原已經 push 的 commit 同事在完成新功能的開發後，已經將 feature branch merge 至 master 中也 push 至 Git server 上，並通過了 CI server 的檢查，正等待著良辰吉時的到來，準備上線至 production 接著就</description></item><item><title>將 NuGet Package 發行至 ProGet</title><link>https://blog.yowko.com/nuget-package-proget/</link><pubDate>Thu, 14 Sep 2017 23:50:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-package-proget/</guid><description>將 NuGet Package 發行至 ProGet 之前 自建 NuGet Server 曾經介紹過使用 NuGet.Server 套件自建 NuGet server 來儲存 NuGet package，不過使用 NuGet.Server 套件在整個介面及管理功能上都過於簡陋，不適合當做正式</description></item><item><title>如何從 Winows docker host 透過 linux container ip 使用服務</title><link>https://blog.yowko.com/docker-host-access-linux-container-ip/</link><pubDate>Thu, 14 Sep 2017 23:16:00 +0800</pubDate><guid>https://blog.yowko.com/docker-host-access-linux-container-ip/</guid><description>如何從 Winows docker host 透過 linux container ip 使用服務 前幾天為了重現前幾天在 production 環境遇到的 issue，嘗試在 Windows Server 2016 透過 docker for windows 建立 linux 版 redis，因為需要模擬 sentinel failover 所以需</description></item><item><title>在 Windows 啟用 MongoDB Replica Set 驗證</title><link>https://blog.yowko.com/windows-mongodb-replica-set-auth/</link><pubDate>Sun, 10 Sep 2017 23:13:00 +0800</pubDate><guid>https://blog.yowko.com/windows-mongodb-replica-set-auth/</guid><description>在 Windows 啟用 MongoDB Replica Set 驗證 之前曾在 為 MongoDB 加上驗證機制 介紹過如何為 MongoDB 建立驗證授權機制，為資料加上基本保護，也在 MongoDB 在 Windows 上的 HA 機制 - Replica sets 介紹 MongoDB 的 HA 機制 - Replica Set</description></item><item><title>在 Linux 中將 Redis 安裝成 Service - 以 CentOS 7 為例</title><link>https://blog.yowko.com/centos7-redis-service/</link><pubDate>Wed, 06 Sep 2017 00:12:00 +0800</pubDate><guid>https://blog.yowko.com/centos7-redis-service/</guid><description>在 Linux 中將 Redis 安裝成 Service - 以 CentOS 7 為例 Windows 環境中將 Redis 安裝成 service 的做法，曾經在 Windows 環境如何設定 Redis Master-Slave 與 Sentinel 介紹過，最近同事要架設 Linux 環境 Redis 時，問到該如何將 Redis 安裝為</description></item><item><title>Linux 找不到 ifconfig、wget 指令？！</title><link>https://blog.yowko.com/ifconfig-command-not-found/</link><pubDate>Tue, 05 Sep 2017 22:42:00 +0800</pubDate><guid>https://blog.yowko.com/ifconfig-command-not-found/</guid><description>Linux 找不到 ifconfig、wget 指令？ 公司部份服務架設在 Linux 環境上，讓之前完全沒有 Linux 操作經驗的我有些苦手，雖然不像 Windows 那麼習慣與熟悉，但學習不</description></item><item><title>MongoDB 在 Windows 上的 HA 機制 - Replica Sets</title><link>https://blog.yowko.com/mongodb-windows-ha-replica-sets/</link><pubDate>Tue, 05 Sep 2017 01:19:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-windows-ha-replica-sets/</guid><description>MongoDB 在 Windows 上的 HA 機制 - Replica Sets 嚴格來說 MongoDB 在 HA 上支援過兩種作法：1. Master-Slave 2. Replica Set，但官網已正式公告從 MongoDB 3.2 起開始不再將 master-slave 視為 cluster 機制的一部份，詳細內容請參</description></item><item><title>透過 Chrome Extension 將靜態網頁開啟成網站</title><link>https://blog.yowko.com/web-server-for-chrome/</link><pubDate>Mon, 04 Sep 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/web-server-for-chrome/</guid><description>透過 Chrome Extension 將靜態網頁開啟成網站 這個好用的 Chrome 套件是在參加 Kuro 大的 Vue.js 課程時，由 Kuro 介紹的開發輔助工具，看到 demo 時驚為天人 也太好用了吧，所以特別筆記一下 以</description></item><item><title>修改 Windows 上 Linux Container (MobyLinuxVM) 的 bip 設定</title><link>https://blog.yowko.com/windows-linux-container-mobylinuxvm-bip/</link><pubDate>Mon, 04 Sep 2017 00:51:00 +0800</pubDate><guid>https://blog.yowko.com/windows-linux-container-mobylinuxvm-bip/</guid><description>修改 Windows 上 Linux Container (MobyLinuxVM) 的 bip 設定 最近幾篇筆記都是跟 ip 設定有關，主要是因為 docker 預設分配 container 使用的 ip 區段與公司測試環境衝突，造成 docker host 與 container 無法存取測試環境的 server (</description></item><item><title>修改 Windows container 的預設 IP</title><link>https://blog.yowko.com/windows-container-ip-prefix/</link><pubDate>Sun, 03 Sep 2017 23:06:00 +0800</pubDate><guid>https://blog.yowko.com/windows-container-ip-prefix/</guid><description>修改 Windows container 的預設 IP 之前文章 docker 無法連線至特定網段 (172.17.x.x) 分享了 docker 的 linux container bridge 會將特定 IP (172.17..) 的 request 導向 container 內部而造成無法存取特定 IP (172.17..) 問題，也介紹如何修改預設分配 IP</description></item><item><title>Docker 無法連線至特定網段 (172.17.x.x)</title><link>https://blog.yowko.com/docker-172-17-ip/</link><pubDate>Sat, 02 Sep 2017 17:00:00 +0800</pubDate><guid>https://blog.yowko.com/docker-172-17-ip/</guid><description>Docker 無法連線至特定網段 (172.17.x.x) 公司正逐步採用 docker 來進行快速部署，一開始先從 Jenkins、Redis 這類基礎服務著手，在開發環境一切都很順利，加上 docker 的</description></item><item><title>如何取得 Container 所使用的 Ip</title><link>https://blog.yowko.com/container-ip/</link><pubDate>Sat, 02 Sep 2017 01:03:00 +0800</pubDate><guid>https://blog.yowko.com/container-ip/</guid><description>如何取得 Container 所使用的 Ip 雖然一般來說都會將 container 的服務透過 port mapping 的動作，讓外部直接透過 docker host ip 來使用 container 所提供的服務，並不需要刻意取得 container 真正使用的 ip 不過為</description></item><item><title>在 Windows Server 2016 上使用 Linux Container</title><link>https://blog.yowko.com/windows-server-2016-linux-container/</link><pubDate>Fri, 01 Sep 2017 01:40:00 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-linux-container/</guid><description>在 Windows Server 2016 上使用 Linux Container 想必大家對於 Windows 10 透過簡易的 GUI 就可達到快速切換 Windows container 與 Linux container 的功能非常有印象(詳細內容可以參考 Windows 10 如何啟用 docker 功能)，原本在 Windows Server 2016</description></item><item><title>為 MongoDB 加上驗證機制</title><link>https://blog.yowko.com/mongodb-enable-auth/</link><pubDate>Tue, 29 Aug 2017 00:54:00 +0800</pubDate><guid>https://blog.yowko.com/mongodb-enable-auth/</guid><description>為 MongoDB 加上驗證機制 資訊安全總是資訊相關工作者的罩門之一：功能愈加愈多、時程愈縮愈短、製作費用愈來愈少，而要求卻愈來愈難，常常為了滿足合約上明列</description></item><item><title>使用 dockerfile 建立 Windows Container 版 Jenkins</title><link>https://blog.yowko.com/dockerfile-windows-container-jenkins/</link><pubDate>Mon, 28 Aug 2017 00:35:00 +0800</pubDate><guid>https://blog.yowko.com/dockerfile-windows-container-jenkins/</guid><description>使用 dockerfile 建立 Windows Container 版 Jenkins 之前文章 將 Jenkins 建立在 Windows Container 上 分享了如何將 Jenkins 建立在 Windows container 中，而其文末也提到透過文章中介紹的方法來建立 Jenkins container 還有一些缺點待改善，像是 image</description></item><item><title>將 Jenkins 建立在 Windows Container 上</title><link>https://blog.yowko.com/jenkins-windows-container/</link><pubDate>Sun, 27 Aug 2017 20:17:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-windows-container/</guid><description>將 Jenkins 建立在 Windows Container 上 公司服務有逐步採用 container 技術的打算，首先第一步就是將 CI Server 給搬進 container，而這個想法老早就有人實際應用了，只是大多應用在</description></item><item><title>使用 Git LFS 儲存大型檔案</title><link>https://blog.yowko.com/git-lfs/</link><pubDate>Fri, 25 Aug 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/git-lfs/</guid><description>使用 Git LFS 儲存大型檔案 分散式版控 Git 雖然已經改善了許多集中式版控的缺點，但針對內容 hash 的作法對於大型 binary 檔案，效能還是不夠令人滿意，針對這個問題 GitHub 與</description></item><item><title>解決無法刪除 dcoker 在 Windows 下的 image 預設目錄 windowsfilter</title><link>https://blog.yowko.com/remove-windowsfilter/</link><pubDate>Thu, 24 Aug 2017 00:13:00 +0800</pubDate><guid>https://blog.yowko.com/remove-windowsfilter/</guid><description>解決無法刪除 dcoker 在 Windows 下的 image 預設目錄 windowsfilter 之前文章 Widnows 環境中修改 Docker image 的儲存位置 介紹如何修改 Windows 環境中的 docker image 儲存位置，讓 image 可以不需佔用系統槽空間 今天同事反</description></item><item><title>如何在 Windows 環境安裝及設定 MongoDB</title><link>https://blog.yowko.com/windows-mongodb/</link><pubDate>Wed, 23 Aug 2017 00:35:00 +0800</pubDate><guid>https://blog.yowko.com/windows-mongodb/</guid><description>如何在 Windows 環境安裝及設定 MongoDB 最近專案因為資料變異幅度較大，如果使用傳統關聯式資料庫來儲存資料，table schema 很難設計，所以打算利用 MongoDB schema-free 的特性來儲存</description></item><item><title>RabbtiMQ Cluster failover 後無法啟動 RabbitMQ instance</title><link>https://blog.yowko.com/rabbtimq-cluster-force-boot/</link><pubDate>Sun, 20 Aug 2017 17:37:00 +0800</pubDate><guid>https://blog.yowko.com/rabbtimq-cluster-force-boot/</guid><description>RabbtiMQ Cluster failover 後無法啟動 RabbitMQ instance 之前測試 RabbtiMQ Cluster 設定及 EasyNetQ 連線時，反覆進行幾次 node shutdown， RabbitMQ 都可以正常提供服務，EasyNetQ 只有在 failover 後的第一次收發</description></item><item><title>C# 連線至 RabbitMQ Cluster - 使用 RabbitMQ .Net Client 及 EasyNetQ</title><link>https://blog.yowko.com/dotnet-client-rabbitmq-cluster/</link><pubDate>Sun, 20 Aug 2017 01:26:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-client-rabbitmq-cluster/</guid><description>C# 連線至 RabbitMQ Cluster - 使用 RabbitMQ .Net Client 及 EasyNetQ 之前文章 如何在 Windwos 上設定 RabbitMQ Cluster 介紹到透過建立 cluster 的方式來讓 RabbtMQ 可以擁有 HA ，而在 queue 及 message 完整性方面則利用 mirrored queue 的機制來處理，詳</description></item><item><title>Widnows 環境中修改 Docker image 的儲存位置</title><link>https://blog.yowko.com/windows-docker-image-location/</link><pubDate>Fri, 18 Aug 2017 00:06:00 +0800</pubDate><guid>https://blog.yowko.com/windows-docker-image-location/</guid><description>Widnows 環境中修改 Docker image 的儲存位置 同事在 pull asp-net image 時，發現系統磁碟空間不足，無法取得 image，所以想修改 image 的預設儲存位置，讓 image 可以不必佔用系統磁碟槽 這</description></item><item><title>無法啟動 Hyper-V 虛擬機器 - Hypervisor 未執行</title><link>https://blog.yowko.com/hypervisor-not-started/</link><pubDate>Wed, 16 Aug 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/hypervisor-not-started/</guid><description>無法啟動 Hyper-V 虛擬機器 - Hypervisor 未執行 之前為了測試 Windows Container 功能，在筆電上安裝 Windows Server 2016，加上需要 Linux 環境，也啟用了 Hyper-V 功能安裝了 CentOS 7，測試靠一段落後有陣子沒</description></item><item><title>依編譯參數來決定 config 內容</title><link>https://blog.yowko.com/msbuild-condition/</link><pubDate>Mon, 14 Aug 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/msbuild-condition/</guid><description>依編譯參數來決定 config 內容 一連兩篇文章 專案間如何共用 config 設定 - 使用 MSBuildExtensionPack 與 專案間如何共用 config 設定 - 使用 MSBuild Community Tasks 介紹使用不同的 library 來將共用 config 設定值獨立於專案之</description></item><item><title>專案間如何共用 config 設定 - 使用 MSBuild Community Tasks</title><link>https://blog.yowko.com/config-msbuild-community-tasks/</link><pubDate>Sun, 13 Aug 2017 23:28:00 +0800</pubDate><guid>https://blog.yowko.com/config-msbuild-community-tasks/</guid><description>專案間如何共用 config 設定 - 使用 MSBuild Community Tasks 之前文章 專案間如何共用 config 設定 - 使用 MSBuildExtensionPack 提供跨專案使用相同 config 設定值的概念，也介紹了透過 MSBuildExtensionPack 實作的細節 今天則要介紹另</description></item><item><title>專案間如何共用 config 設定 - 使用 MSBuildExtensionPack</title><link>https://blog.yowko.com/shared-config/</link><pubDate>Sun, 13 Aug 2017 00:24:00 +0800</pubDate><guid>https://blog.yowko.com/shared-config/</guid><description>專案間如何共用 config 設定 - 使用 MSBuildExtensionPack 以往專案公司的經驗中，較常見情境是一個專案中可能會針對不同的環境建立不同的組態設定( configuration )，在發行 (publish) 時透過 configuration transformation 來將</description></item><item><title>設定 RabbitMQ 的 Mirrored Queues - 讓 Queue 內容可以在多組 RabbitMQ 同步</title><link>https://blog.yowko.com/rabbitmq-mirrored-queues/</link><pubDate>Fri, 11 Aug 2017 23:35:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-mirrored-queues/</guid><description>設定 RabbitMQ 的 Mirrored Queues - 讓 Queue 內容可以在多組 RabbitMQ 同步 之前文章 如何在 Windwos 上設定 RabbitMQ Cluster 提到：一個完善的系統一定需要確保系統中的各個 component 是具備 HA - High availability 的特性，而 message queue 本</description></item><item><title>如何在 Windwos 上設定 RabbitMQ Cluster</title><link>https://blog.yowko.com/rabbitmq-cluster-on-windows/</link><pubDate>Wed, 09 Aug 2017 23:57:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-cluster-on-windows/</guid><description>如何在 Windwos 上設定 RabbitMQ Cluster 現在的系統都需要考慮大流量的情境，而系統中承載力最差的節點也就是系統的整體承載量。一般的概念就是哪個節點扛不住就加那個節點</description></item><item><title>找到咬住檔案的程式 - 解決無法刪除或移動檔案</title><link>https://blog.yowko.com/find-process-lock-file/</link><pubDate>Tue, 08 Aug 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/find-process-lock-file/</guid><description>找到咬住檔案的程式 - 解決無法刪除或移動檔案 大多數人都曾經遇到在 Windows 要刪除或是移動檔案時，出現檔案被另個程式使用中的提示而造成無法完成刪除或是移</description></item><item><title>net use 指令出現 error 2148073478</title><link>https://blog.yowko.com/net-use-error-2148073478/</link><pubDate>Mon, 07 Aug 2017 22:23:00 +0800</pubDate><guid>https://blog.yowko.com/net-use-error-2148073478/</guid><description>net use 指令出現 error 2148073478 同事反應 Jenkins 沒辦法順利將 CI build 的檔案部署至遠端，確認過資料夾權限、robocopy 語法一切正常後，發現原來是 net use 指令的權限問題，</description></item><item><title>Visual Studio 出現 CS0234 及 CS0246 - 找不到 &#39;Pex&#39; 的錯誤</title><link>https://blog.yowko.com/visual-studio-pex-error/</link><pubDate>Fri, 04 Aug 2017 23:55:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-pex-error/</guid><description>Visual Studio 出現 CS0234 及 CS0246 - 找不到 &amp;lsquo;Pex&amp;rsquo; 的錯誤 同事 clone 專案之後，一 build 卻收到大量 error，馬上找出始作俑者 &amp;ndash;&amp;gt; 我！！ 事不宜遲，立馬開始追查問題： 第一個疑問，這個</description></item><item><title>關於 Git 刪除 Remote Branch</title><link>https://blog.yowko.com/git-delete-remote-branch/</link><pubDate>Thu, 03 Aug 2017 23:56:00 +0800</pubDate><guid>https://blog.yowko.com/git-delete-remote-branch/</guid><description>關於 Git 刪除 Remote Branch 今天同事問到為什麼從 Git Server 上刪除 branch 後，local 還是看得到被刪除的 branch，仔細想想我好像沒有這樣操作過，所以做了幾個實驗，</description></item><item><title>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 (使用 JsonSerializer)</title><link>https://blog.yowko.com/jsonnet-jsonserializer-initial-value/</link><pubDate>Wed, 02 Aug 2017 23:42:00 +0800</pubDate><guid>https://blog.yowko.com/jsonnet-jsonserializer-initial-value/</guid><description>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 (使用 JsonSerializer) 之前文章 客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 介紹到可以在使用自訂 JsonConverter 在將物件轉為 json 前先進行初始化 後來同事在使用自訂 JsonConverter 時</description></item><item><title>讓 MSTest 支援使用資料集進行重覆測試</title><link>https://blog.yowko.com/mstest-datasource/</link><pubDate>Tue, 01 Aug 2017 23:52:00 +0800</pubDate><guid>https://blog.yowko.com/mstest-datasource/</guid><description>讓 MSTest 支援使用資料集進行重覆測試 之前文章 NUnit 幾個參數化測試的方式 介紹到如何在 NUnit 單元測試中使用 TestCase、TestCaseSource、Va</description></item><item><title>從 Json String 中取得物件的屬性值</title><link>https://blog.yowko.com/jobject-parse/</link><pubDate>Sun, 30 Jul 2017 23:55:00 +0800</pubDate><guid>https://blog.yowko.com/jobject-parse/</guid><description>從 Json String 中取得物件的屬性值 之前文章 使用 string 建立 instance 及反序列化 json 為 class 介紹到如何使用 string 產生 instance 及反序列化 json 為 class，後來同事看到寫法建議可以用 json.net 的 JObject.Parse</description></item><item><title>關於 GetType 的一些事</title><link>https://blog.yowko.com/gettype/</link><pubDate>Sun, 30 Jul 2017 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/gettype/</guid><description>關於 GetType 的一些事 之前在 LINQ to Objects VS LINQ to Entities 中提到 LINQ to Objects 是一系列 IEnumerable 及 IEnumerable&amp;lt;T&amp;gt; 的擴充方法，而 LINQ to Entities 是一系統 IQueryable 及 IQueryable&amp;lt;T&amp;gt; 的擴充方法，透過物件繼承的型別可以很容易區分出</description></item><item><title>關於指定 NuGet 安裝資料夾</title><link>https://blog.yowko.com/nuget-install-folder/</link><pubDate>Sat, 29 Jul 2017 23:25:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-install-folder/</guid><description>關於指定 NuGet 安裝資料夾 之前文章 指定 NuGet packages 存放位置，有介紹如何修改 NuGet 套件的安裝目錄，後來同事測試後有更簡單的做法，因此紀錄一下 使用設定檔的做法相同</description></item><item><title>Visual Studio 中無法使用 NuGet 指令？！</title><link>https://blog.yowko.com/visual-studio-nuget/</link><pubDate>Fri, 28 Jul 2017 00:19:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-nuget/</guid><description>Visual Studio 中無法使用 NuGet 指令？！ 在測試 NuGet 相關參數時，竟然發現在 Visual Studio 中無法使用 NuGet 指令，原本以為 NuGet 功能故障但令我更驚訝的是可以正常使用 NuGet 來管理套件，只是</description></item><item><title>將 RabbitMQ 的連線參數移至 Config 中</title><link>https://blog.yowko.com/rabbitmq-connectionstring-config/</link><pubDate>Wed, 26 Jul 2017 23:26:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-connectionstring-config/</guid><description>將 RabbitMQ 的連線參數移至 Config 中 之前文章 使用 .Net client 連線至 RabbitMQ 收發訊息 介紹了如何連線至 RabbitMQ 收發訊息，不過當時直接在程式碼指定了相關的連線資訊，身為一個優秀的工</description></item><item><title>修改 Git Server Repository Branch 名稱</title><link>https://blog.yowko.com/git-rename-remote-branch/</link><pubDate>Tue, 25 Jul 2017 23:10:00 +0800</pubDate><guid>https://blog.yowko.com/git-rename-remote-branch/</guid><description>修改 Git Server Repository Branch 名稱 公司的版控正在從 SVN 轉為 Git，過程中當然問題不斷，其中 Repository 的命名方式與 Branch 的用法都是大家討論的重點，但這是比較偏流程跟政策面的決</description></item><item><title>找不到 roslyn\csc.exe ?！</title><link>https://blog.yowko.com/missing-roslyn-csc/</link><pubDate>Mon, 24 Jul 2017 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/missing-roslyn-csc/</guid><description>找不到 roslyn\csc.exe ?！ 今天在整合 Jenkins 跟新的 ASP.NET Web Api 專案時，一如往常流暢地完成設定，過程中該卡的一樣也沒漏掉：application pool 要從 .net 2 改為 .net 4、要啟</description></item><item><title>開啟 Web Api Url 時直接導向 Swagger 頁面</title><link>https://blog.yowko.com/web-api-default-open-swagger/</link><pubDate>Mon, 24 Jul 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/web-api-default-open-swagger/</guid><description>開啟 Web Api Url 時直接導向 Swagger 頁面 文章 建立 ASP.NET Web API 專案的幾種方式 介紹到選擇適合的專案範本來建立 ASP.NET Web Api 專案以避免預設安裝過多用不到的套件，其中除了完整安</description></item><item><title>建立 ASP.NET Web API 專案的幾種方式</title><link>https://blog.yowko.com/create-aspnet-web-api/</link><pubDate>Sun, 23 Jul 2017 23:48:00 +0800</pubDate><guid>https://blog.yowko.com/create-aspnet-web-api/</guid><description>建立 ASP.NET Web API 專案的幾種方式 前端工程與行動裝置的風行，讓問世多年的 ASP.NET Web API 取代 ASP.NET MVC 的態勢愈來愈明顯，網站開發已經由使用單一 framework 處理前後端轉變為由後端</description></item><item><title>設定 NuGet Package 安裝時自動加入 Config 區段 (For NuGet feed v2)</title><link>https://blog.yowko.com/nuget-add-config-for-v2/</link><pubDate>Sun, 23 Jul 2017 18:16:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-add-config-for-v2/</guid><description>設定 NuGet Package 安裝時自動加入 Config 區段 (For NuGet feed v2) 部份 NuGet Package 的功能是相依在 config 的設定上，有些設定是 package 正常運作的基本條件，有些設定則是保留給使用者的彈性調整空間</description></item><item><title>NuGet 發行 Package 時自動增加版號</title><link>https://blog.yowko.com/nuget-package-auto-version/</link><pubDate>Sat, 22 Jul 2017 23:56:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-package-auto-version/</guid><description>NuGet 發行 Package 時自動增加版號 之前文章 Jenkins 自動 Publish NuGet Package 已經可以透過 Jenkins 將程式碼成品打包成 NuGet package，但文末也提到 NuGet 是使用 {id+版號} 當做唯一值，一</description></item><item><title>Jenkins 自動 Publish NuGet Package</title><link>https://blog.yowko.com/jenkins-publish-nuget-package/</link><pubDate>Thu, 20 Jul 2017 23:49:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-publish-nuget-package/</guid><description>Jenkins 自動 Publish NuGet Package 公司專案共用元件正在逐步由直接 add dll reference 改為使用 NuGet 管理，所以有不少專案需要打包成 NuGet Package，原本都是透過 NuGet Package Explorer 這個 GUI 軟體來打包</description></item><item><title>修改 Docker 中 container 的 Port 對應</title><link>https://blog.yowko.com/change-container-port-mapping/</link><pubDate>Tue, 18 Jul 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/change-container-port-mapping/</guid><description>修改 Docker 中 container 的 Port 對應 之前和同事一起架設的 Docker container，因為環境問題，想要修改 host 對應至 container 內部的 port，原本 host 6379 port 對應至 container 的 6379 port 打算調整</description></item><item><title>LINQ to Objects VS LINQ to Entities</title><link>https://blog.yowko.com/linq-to-objects-vs-linq-to-entities/</link><pubDate>Mon, 17 Jul 2017 23:20:00 +0800</pubDate><guid>https://blog.yowko.com/linq-to-objects-vs-linq-to-entities/</guid><description>LINQ to Objects VS LINQ to Entities 前幾天去參加 黃忠成 老師的 LINQ - 強者之道時，聽到忠成老師說 LINQ 有兩種行為：LINQ to Objects 與 LINQ to Entities。What！！用那麼久 L</description></item><item><title>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 3</title><link>https://blog.yowko.com/tdd-day-3/</link><pubDate>Sun, 16 Jul 2017 18:14:00 +0800</pubDate><guid>https://blog.yowko.com/tdd-day-3/</guid><description>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 3 自 TDD 課程第三天課程結束至今約莫一個月，期間持續針對 Day 3 內容斷斷續續做些紀錄，但大多是工具操作，課程核</description></item><item><title>使用 Common.Logging 同時將 log 寫至多個 Logging Framework</title><link>https://blog.yowko.com/common-logging-multiple-logging-framework/</link><pubDate>Sat, 15 Jul 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/common-logging-multiple-logging-framework/</guid><description>使用 Common.Logging 同時將 log 寫至多個 Logging Framework 之前文章 使用 Common.Logging 搭配 NLog 及 Log4Net 介紹到透過 Common.Logging 可以使用一致的 log 語法將 log 轉由不同 logging framework 處理，在不同專案間就可以使用統一 log 語法而且</description></item><item><title>使用 Common.Logging 搭配 NLog 及 log4net</title><link>https://blog.yowko.com/common-logging/</link><pubDate>Fri, 14 Jul 2017 23:52:00 +0800</pubDate><guid>https://blog.yowko.com/common-logging/</guid><description>使用 Common.Logging 搭配 NLog 及 log4net 在新專案中，同事打算統一 log 的紀錄方式，所以繼承了 log4net 並在 log 的 api 上加入自訂行為，讓後續 log 餵進 ELK 時可以比較順利 出發點當然是為了日後</description></item><item><title>使用 string 建立 instance 及反序列化 json 為 class</title><link>https://blog.yowko.com/string-create-instance/</link><pubDate>Thu, 13 Jul 2017 23:55:00 +0800</pubDate><guid>https://blog.yowko.com/string-create-instance/</guid><description>使用 string 建立 instance 及反序列化 json 為 class 最近的專案在架構拆分時，將可能可以共用的部份獨立設計成開放式的服務，將執行行為也當做輸入參數的一部份，直接交由使</description></item><item><title>使用 NuGet Package Explorer 建立 NuGet 套件</title><link>https://blog.yowko.com/nuget-package-explorer/</link><pubDate>Wed, 12 Jul 2017 23:11:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-package-explorer/</guid><description>使用 NuGet Package Explorer 建立 NuGet 套件 公司許多專案中有不少底層功能是可以共用的(ex. 資料庫相關操作、redis 相關操作、web request、&amp;hellip</description></item><item><title>自建 NuGet Server</title><link>https://blog.yowko.com/self-host-nuget-server/</link><pubDate>Tue, 11 Jul 2017 22:07:00 +0800</pubDate><guid>https://blog.yowko.com/self-host-nuget-server/</guid><description>自建 NuGet Server 自從 Visual Studio 2010 第一次使用 NuGet 後，開發生涯就此改變了，簡易的套件安裝及管理方式，讓開發人員不需要在自行保留需要的 dll，需要的 config 也可以透過 NuGet</description></item><item><title>如何 Mock Private Method 的回傳值 - 使用 JuskMock</title><link>https://blog.yowko.com/mock-private-method-juskmock/</link><pubDate>Mon, 10 Jul 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/mock-private-method-juskmock/</guid><description>如何 Mock Private Method 的回傳值 - 使用 JuskMock 前一篇筆記 使用 Moq 來 Mock protected Method 文末心得中提到傳言中付費的 mock framewrok 號稱無論是什麼狀況都能 mock，想說改天要找個機會來測試一下</description></item><item><title>使用 Moq 來 Mock protected Method</title><link>https://blog.yowko.com/moq-mock-protected-method/</link><pubDate>Sun, 09 Jul 2017 20:20:00 +0800</pubDate><guid>https://blog.yowko.com/moq-mock-protected-method/</guid><description>使用 Moq 來 Mock protected Method 跟同事討論到在進行單元測試時，目標方法使用到其他非 public 方法，而且想要 mock 這個方法的回傳值該怎麼做？ 其實這個問題我之前也思考過，一直</description></item><item><title>讓 RabbitMQ 支援延遲發送訊息</title><link>https://blog.yowko.com/rabbitmq-delayed-message/</link><pubDate>Sat, 08 Jul 2017 18:47:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-delayed-message/</guid><description>讓 RabbitMQ 支援延遲發送訊息 一般情況下，Message Queue 都是將 message 由 producer 送給 broker 後接著就由 consumer dequeue 進行處理，常見的額外需求是 message 有不同的 priority，但這次</description></item><item><title>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性</title><link>https://blog.yowko.com/custom-josnconverter-initial-valuetype/</link><pubDate>Fri, 07 Jul 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/custom-josnconverter-initial-valuetype/</guid><description>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 同事負責的專案原本使用 XML 做為資料傳遞的媒介，為了縮小網路傳輸封包，所以改用 json，而這個動作讓原本正常運行的功能</description></item><item><title>Jenkins Job 觸發其他需要參數的 Job</title><link>https://blog.yowko.com/jenkins-job-trigger-paramerized-job/</link><pubDate>Thu, 06 Jul 2017 22:17:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-job-trigger-paramerized-job/</guid><description>Jenkins Job 觸發其他需要參數的 Job Jenkins 完成專案 Continuous integration - CI build 後只能確保該專案可以通過建置，但系統各個功能是不是可以如預期執行有時是需要多個專案共同搭配的結果</description></item><item><title>Git webhook 如何驅動 Jenkins 的參數化建置 (Build with Parameters)</title><link>https://blog.yowko.com/webhook-jenkins-build-with-parameter/</link><pubDate>Wed, 05 Jul 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/webhook-jenkins-build-with-parameter/</guid><description>Git webhook 如何驅動 Jenkins 的參數化建置 (Build with Parameters) 之前文章 Jenkins 2 將其他 job 名稱變成可選擇的參數、Jenkins 2 如何建立 Pipeline job 曾經簡單地介紹過模組化 build flow 的想法，透過</description></item><item><title>Dapper 讀取 Oracle 資料</title><link>https://blog.yowko.com/dapper-oracle/</link><pubDate>Tue, 04 Jul 2017 22:58:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-oracle/</guid><description>Dapper 讀取 Oracle 資料 Dapper 身為輕量級 ORM 的神器，自從蔡煥麟老師 - 好用的微型 ORM：Dapper 與 黑大 - 短小精悍的.NET ORM神器&amp;ndash; Dapper 撰文推廣</description></item><item><title>如何在 Command 中依序執行指令</title><link>https://blog.yowko.com/command/</link><pubDate>Mon, 03 Jul 2017 23:31:00 +0800</pubDate><guid>https://blog.yowko.com/command/</guid><description>如何在 Command 中依序執行指令 同事問說他有幾個 .bat 指令檔，想要上一個 .bat 完成再開始執行下一個 .bat。這樣的需求在 powershell 中很常見，第一個念頭就是問看看能不能</description></item><item><title>使用 XSD 為 XML 客製 Intellisense 輸入選單</title><link>https://blog.yowko.com/xml-intellisense-xsd/</link><pubDate>Sun, 02 Jul 2017 22:53:00 +0800</pubDate><guid>https://blog.yowko.com/xml-intellisense-xsd/</guid><description>使用 XSD 為 XML 客製 Intellisense 輸入選單 同事負責的專案中有個自訂的 XML，主要用來紀錄一些不同 partner 的設定資訊。因為 partner 很多，常有新增或是調整這個 XML 的需求，為了避</description></item><item><title>如何得知 script 執行時間 - Stopwatch in SQL Server ？！</title><link>https://blog.yowko.com/stopwatch-in-sql-server/</link><pubDate>Fri, 30 Jun 2017 23:53:00 +0800</pubDate><guid>https://blog.yowko.com/stopwatch-in-sql-server/</guid><description>如何得知 script 執行時間 - Stopwatch in SQL Server ？！ SQL script 執行緩慢偶爾就會出現在討論的話題中，script 優化也是 db 效能調校最直接有效跟成本效益比最高的方式。 只是</description></item><item><title>無法輸出訊息至 Visual Studio Output Window (輸出視窗)</title><link>https://blog.yowko.com/visual-studio-output-window/</link><pubDate>Fri, 30 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-output-window/</guid><description>無法輸出訊息至 Visual Studio Output Window (輸出視窗) 同事想要 debug 某段程式碼，但不想中斷程式碼執行，並打算在執行過程中紀錄各個 method 實際執行的時間點。要符合同事的需求</description></item><item><title>使用 SQL Server CDC (Change Data Capture) 來追蹤資料變更</title><link>https://blog.yowko.com/sql-server-cdc-change-data-capture/</link><pubDate>Thu, 29 Jun 2017 23:28:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-cdc-change-data-capture/</guid><description>使用 SQL Server CDC (Change Data Capture) 來追蹤資料變更 同事在追查一個 issue，但追一追總是卡在 db 資料面，不知道 db 的資料變化歷程，所以遲遲找不出問題發生原因，所以想</description></item><item><title>StackExchange 連線 Redis 出現 Timeout</title><link>https://blog.yowko.com/stackexchange-redis-timeout/</link><pubDate>Thu, 29 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/stackexchange-redis-timeout/</guid><description>StackExchange 連線 Redis 出現 Timeout 同事反應出現大量 Redis 連線 Timeout 的錯誤，因為 Redis 上存放 Sessoion 跟許多 config cache 資料，如果 Redis 異常會嚴重影響線上服務，所以立馬需要進行除錯 首先使用 Redis-cli 確認</description></item><item><title>IIS Express 出現 500.19 - 0x800700b7 錯誤？！</title><link>https://blog.yowko.com/iis-express-50019-config-duplicate/</link><pubDate>Wed, 28 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/iis-express-50019-config-duplicate/</guid><description>IIS Express 出現 500.19 - 0x800700b7 錯誤？ 同事請我協助測試一段程式碼，一如往常的 clone source code，使用 Visual Studio 開啟 .sln，按下 F6 restore NuGet packages and build success，接著 Ctrl+F5 啟動不偵</description></item><item><title>使用 Pickles 搭配 SpecFlow 產生即時更新文件(living documentation)</title><link>https://blog.yowko.com/pickles-specflow/</link><pubDate>Tue, 27 Jun 2017 22:47:00 +0800</pubDate><guid>https://blog.yowko.com/pickles-specflow/</guid><description>使用 Pickles 搭配 SpecFlow 產生即時更新文件(living documentation) 你有遇過類似的狀況嗎？：改了 code 卻忘了改註解 或是 看既有 code 時發現 code 行為與註解說明不同？ 這兩種情況在我</description></item><item><title>為 Web Api 的 Message Handler 加上單元測試</title><link>https://blog.yowko.com/web-api-message-handler-unit-test/</link><pubDate>Sun, 25 Jun 2017 12:18:00 +0800</pubDate><guid>https://blog.yowko.com/web-api-message-handler-unit-test/</guid><description>為 Web Api 的 Message Handler 加上單元測試 之前在 為 ASP.NET WEB API 加上簡易的 Token 驗證 中曾經使用過 Message Handler 為 ASP.NET Web Api 加上簡易驗證。 後來在 TDD 課堂中聽到可以為 Message Handler 加上單元測試，於是就</description></item><item><title>關於 Visual Studio 中的外部工具(External Tools)</title><link>https://blog.yowko.com/visual-studio-external-tools/</link><pubDate>Sat, 24 Jun 2017 14:27:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-external-tools/</guid><description>關於 Visual Studio 中的外部工具(External Tools) TDD 第三天課程中，有個重點是使用 Pickles 與 SpecFlow 來產生測試及說明文件，做法就是透過 Visual Studio 來執行外部工具，因為之前沒</description></item><item><title>SQL Server 無法修改資料表定義？！</title><link>https://blog.yowko.com/sql-server-cahnges-not-permitted/</link><pubDate>Fri, 23 Jun 2017 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-cahnges-not-permitted/</guid><description>SQL Server 無法修改資料表定義？！ 沒辦法直接修改 SQL Server 資料表定義的問題，說常見也不是很常見，但也不算罕見，畢竟通常只需要設定一次，剛好我常常安裝新的測</description></item><item><title>使用 MSTest.exe 指令來進行測試</title><link>https://blog.yowko.com/mstest-exe/</link><pubDate>Thu, 22 Jun 2017 23:12:00 +0800</pubDate><guid>https://blog.yowko.com/mstest-exe/</guid><description>使用 MSTest.exe 指令來進行測試 MSTest.exe 是用於執行 MSTest 測試的命令列命令，功能與 Nunit-console 相同，都是用來讓我們在沒有 Visual Studio 的情境下可以執行測試，像是 CI Server，就讓我們</description></item><item><title>ASP.NET MVC 統一顯示格式 (使用 DisplayTemplate)</title><link>https://blog.yowko.com/aspnet-mvc-displaytemplate/</link><pubDate>Wed, 21 Jun 2017 23:16:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-displaytemplate/</guid><description>ASP.NET MVC 統一顯示格式 (使用 DisplayTemplate) 在 ASP.NET MVC 中所有資料格式都有預設的顯示方式(ex：DateTime 2017/12/19 下午 11:20:00、Deciaml 123457.0</description></item><item><title>餵資料集給 SpecFlow 來執行測試及驗證</title><link>https://blog.yowko.com/specflow-outline/</link><pubDate>Wed, 21 Jun 2017 23:16:00 +0800</pubDate><guid>https://blog.yowko.com/specflow-outline/</guid><description>餵資料集給 SpecFlow 來執行測試及驗證 之前文章 使用 SpecFlow 建立人語化的單元測試 已經大致了解如何使用近似人類語言來描述需求跟寫測試案例，透過這樣的方式不僅讓需</description></item><item><title>驗證 private method 但會使用的 static 資料的做法 - PrivateType 與 PrivateObject 搭配</title><link>https://blog.yowko.com/privatetype-in-privateobject/</link><pubDate>Tue, 20 Jun 2017 09:00:00 +0800</pubDate><guid>https://blog.yowko.com/privatetype-in-privateobject/</guid><description>驗證 private method 但會使用的 static 資料的做法 - PrivateType 與 PrivateObject 搭配 一連幾篇筆記(Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType、Unit Test 想驗證 private static</description></item><item><title>Unit Test 想驗證 private method 該怎麼做？ - 使用 PrivateObject</title><link>https://blog.yowko.com/unit-test-private-method/</link><pubDate>Mon, 19 Jun 2017 01:14:00 +0800</pubDate><guid>https://blog.yowko.com/unit-test-private-method/</guid><description>Unit Test 想驗證 private method 該怎麼做？ - 使用 PrivateObject Unit Test 該拿 private 屬性及欄位怎麼辦？ - 使用 PrivateObject 針對的是 private 而且是 non-static 的 field 或是 property，Unit Test 想驗證 private static method 該怎麼</description></item><item><title>Unit Test 該拿 private 屬性及欄位怎麼辦？ - 使用 PrivateObject</title><link>https://blog.yowko.com/unit-test-private-field-property/</link><pubDate>Mon, 19 Jun 2017 00:32:00 +0800</pubDate><guid>https://blog.yowko.com/unit-test-private-field-property/</guid><description>Unit Test 該拿 private 屬性及欄位怎麼辦？ - 使用 PrivateObject 在 Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType 使用 NSubstitute 產生假物件後，透過 PrivateType 設定給原本是 private static 的屬性，但文末也提供 PrivateType 是</description></item><item><title>Unit Test 想驗證 private static method 該怎麼做？ - 使用 PrivateType</title><link>https://blog.yowko.com/unit-test-static-method/</link><pubDate>Sun, 18 Jun 2017 21:26:00 +0800</pubDate><guid>https://blog.yowko.com/unit-test-static-method/</guid><description>Unit Test 想驗證 private static method 該怎麼做？ - 使用 PrivateType TDD 的第一天課程中就提到，以單元測試的角度 private method 不需單獨進行測試，在驗證 public 及 internal method 的過程中自然會涵蓋到 private or protected me</description></item><item><title>Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType</title><link>https://blog.yowko.com/unit-test-static-field-property/</link><pubDate>Sat, 17 Jun 2017 23:18:00 +0800</pubDate><guid>https://blog.yowko.com/unit-test-static-field-property/</guid><description>Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType 自從上完第二次 TDD 課程後，對於新專案的開發充滿著信心，躍躍欲試不算新學到但有新理解的技能，只是過程還是跌跌</description></item><item><title>ASP.NET MVC 送出含有 `&lt;` 的表單內容時出現錯誤</title><link>https://blog.yowko.com/aspnet-mvc-post-html/</link><pubDate>Sat, 17 Jun 2017 00:42:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-post-html/</guid><description>ASP.NET MVC 送出含有 &amp;lt; 的表單內容時出現錯誤 這是同事今天遇到的問題，當看到錯誤訊息時，我心中百感交集，想當年沒日沒夜趕專案時，這個錯誤訊息可是三天兩頭</description></item><item><title>Unit Test 如何驗證 ASP.NET Web Api 的 IHttpActionResult</title><link>https://blog.yowko.com/unit-test-web-api-ihttpactionresult/</link><pubDate>Thu, 15 Jun 2017 23:39:00 +0800</pubDate><guid>https://blog.yowko.com/unit-test-web-api-ihttpactionresult/</guid><description>Unit Test 如何驗證 ASP.NET Web Api 的 IHttpActionResult 經過 91 哥三周的 TDD 訓練，我竟自大地以為我會 unit test 了，新專案到手立馬開啟 TDD 開發模式，不要臉地覺得同事寫的 api 可測試性低相當不可</description></item><item><title>指定 NuGet packages 存放位置</title><link>https://blog.yowko.com/nuget-folder/</link><pubDate>Thu, 15 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-folder/</guid><description>指定 NuGet packages 存放位置 同事負責的 team 有個專案，因為歷史緣故因素裡面有超過二十個 projects，實際上各個專案間並沒有相依或是關連性，正確的做法應該</description></item><item><title>使用 HttpClient 來存取 GET,POST,PUT,DELETE,PATCH 網路資源</title><link>https://blog.yowko.com/how-to-use-httpclient/</link><pubDate>Wed, 14 Jun 2017 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/how-to-use-httpclient/</guid><description>使用 HttpClient 來存取 GET,POST,PUT,DELETE,PATCH 網路資源 之前文章 如何使用 WebRequest,HttpWebRequest 來存取 (GET,POST,PUT,DELETE,PATCH) 網路資源 紀錄 WebRequest,HttpWebRequest 的用法，使用 WebClient 來存取 GET,POST,PUT,DELETE,PATCH 網路資源 則紀錄了 WebClient 的用法，接著就是我所知的最後一個可以用</description></item><item><title>使用 WebClient 來存取 GET,POST,PUT,DELETE,PATCH 網路資源</title><link>https://blog.yowko.com/webclient/</link><pubDate>Tue, 13 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/webclient/</guid><description>使用 WebClient 來存取 GET,POST,PUT,DELETE,PATCH 網路資源 之前在專案中看到許多不同風格的程式，這種現象很常見，尤其在由來已久、團隊成員來來去去的專案中更是常發生，我並沒有太多想</description></item><item><title>使用 SpecFlow 建立人語化的單元測試</title><link>https://blog.yowko.com/specflow/</link><pubDate>Tue, 13 Jun 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/specflow/</guid><description>使用 SpecFlow 建立人語化的單元測試 如何寫出良好可讀性的程式是個持續性的挑戰，也可能是永無止盡的挑戰，而測試程式雖然目的是測試，但終究是程式，也需要具</description></item><item><title>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 2</title><link>https://blog.yowko.com/tdd-day-2/</link><pubDate>Sat, 10 Jun 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/tdd-day-2/</guid><description>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 2 TDD 來到了第二天，邀請我參加這次 TDD 課程的前同事 - Dino 問了我個問題：這樣參加完課程，如果沒有馬上應用或是應</description></item><item><title>使用 PageObject(Page Object Pattern) 建立物件導向的 Web UI 測試程式</title><link>https://blog.yowko.com/pageobject-web-ui-test/</link><pubDate>Fri, 09 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/pageobject-web-ui-test/</guid><description>使用 PageObject(Page Object Pattern) 建立物件導向的 Web UI 測試程式 從 使用 Selenium IDE 與 C# 做 Web UI 測試 介紹如何使用 Selenium IDE 錄製網頁操作再轉換為 c# 測試案例，讓測試程式也能觸發 Web UI 的測試驗證</description></item><item><title>使用 Fluent Automation 與 Selenium 打造語意化 Web UI 測試程式</title><link>https://blog.yowko.com/fluent-automation-selenium-web-ui-test/</link><pubDate>Thu, 08 Jun 2017 00:14:00 +0800</pubDate><guid>https://blog.yowko.com/fluent-automation-selenium-web-ui-test/</guid><description>使用 Fluent Automation 與 Selenium 打造語意化 Web UI 測試程式 之前文章 使用 Selenium IDE 與 C# 做 Web UI 測試，介紹了如何使用 Selenium IDE 錄製網頁操作並將過程 export 成 c# 測試程式，雖然很方便但 Selenium api 太像</description></item><item><title>製作 Selenium IDE 的 xUnit.net 2.0 版 Formatter</title><link>https://blog.yowko.com/selenium-ide-xunit-formatter/</link><pubDate>Wed, 07 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/selenium-ide-xunit-formatter/</guid><description>製作 Selenium IDE 的 xUnit.net 2.0 版 Formatter TDD 課程中，91 大介紹了 Selenium IDE 的用法，我的心得筆記請參考 使用 Selenium IDE 與 C# 做 Web UI 測試，因為 Selenium IDE 預設只支援 Nunit，所以 91 大動手做了</description></item><item><title>在 GitHub Repository 中加上 License 宣告</title><link>https://blog.yowko.com/github-repository-license/</link><pubDate>Tue, 06 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/github-repository-license/</guid><description>在 GitHub Repository 中加上 License 宣告 之前在紀錄嘗試不同技術的過程默默地也完成了許多不同的成品，大多數內容也都是透過網路搜尋而來，所以就放在 GitHub 希望有機會讓有類似</description></item><item><title>使用 Selenium IDE 與 C# 做 Web UI 測試</title><link>https://blog.yowko.com/selenium-ide-csharp-web-ui-test/</link><pubDate>Mon, 05 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/selenium-ide-csharp-web-ui-test/</guid><description>使用 Selenium IDE 與 C# 做 Web UI 測試 網頁 UI 及前端技術變化很快，也愈來愈專業，分工愈來愈細，除了前後端獨立的 unit test 之外，前後端介接完成後的整合測試也是重點之一</description></item><item><title>Unit Test 中各個 Test Framework 的初始化及清除用法</title><link>https://blog.yowko.com/unit-test-initialize-cleanup/</link><pubDate>Sat, 03 Jun 2017 10:42:00 +0800</pubDate><guid>https://blog.yowko.com/unit-test-initialize-cleanup/</guid><description>Unit Test 中各個 Test Framework 的初始化及清除用法 最近因為 TDD 課程的關係，比較常使用各個 Test Framework 的功能，在寫作業時發現對於各個 Test Framework 的初始化及清除用法不是那麼清楚，常</description></item><item><title>製作 LINQPad 的綠色免安裝可攜版 (Portable)</title><link>https://blog.yowko.com/linqpad-portable/</link><pubDate>Thu, 01 Jun 2017 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/linqpad-portable/</guid><description>製作 LINQPad 的綠色免安裝可攜版 (Portable) 公司的某些環境安全性較高，我沒有安裝軟體的權限需要透過 MIS 協助安裝，雖然只要跟主管說一聲接著發信請 MIS 安裝就好，其實流</description></item><item><title>如何 Debug 你做的 Visual Studio 擴充套件(vsix)</title><link>https://blog.yowko.com/debug-vsix/</link><pubDate>Wed, 31 May 2017 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/debug-vsix/</guid><description>如何 Debug 你做的 Visual Studio 擴充套件(vsix) 從 bot framework project template 到最近做的 xUnit.net 2.0、NUnit2、NUnit3 test framework，前前後後也上架了四個擴充套</description></item><item><title>右鍵選單 Create Unit Tests (建立單元測試) 選項不見？！</title><link>https://blog.yowko.com/missing-create-unit-tests/</link><pubDate>Tue, 30 May 2017 16:46:00 +0800</pubDate><guid>https://blog.yowko.com/missing-create-unit-tests/</guid><description>右鍵選單 Create Unit Tests (建立單元測試) 選項不見？！ 這是什麼情況？！ 是叫我不要寫 Unit Test 嗎XD，還是人品真的差成這樣，既然人品問題這麼嚴重，當然要紀錄一下</description></item><item><title>Test Framework 套件不好用嗎？！ 自己做一個囉</title><link>https://blog.yowko.com/customize-test-framework-project-template/</link><pubDate>Mon, 29 May 2017 18:08:00 +0800</pubDate><guid>https://blog.yowko.com/customize-test-framework-project-template/</guid><description>Test Framework 套件不好用嗎？！ 自己做一個囉 前幾天在測試不同 Test Framework 特性時發現 NuGet 上 Visual Studio 2017 沒有 xUnit.net 2.0 的專案範本套件 (在 Visual Studio 2017 中安裝其他 Test Framework - NUnit)，所以就</description></item><item><title>在 Visual Studio 2017 中安裝其他 Test Framework - xUnit.net 2.0</title><link>https://blog.yowko.com/visual-studio-2017-test-framework-xunit/</link><pubDate>Mon, 29 May 2017 00:34:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-2017-test-framework-xunit/</guid><description>在 Visual Studio 2017 中安裝其他 Test Framework - xUnit.net 2.0 文章 在 Visual Studio 2017 中安裝其他 Test Framework - NUnit 中測試安裝不同的 Test Framework 時，發現在 Visual Studio 2017 中竟然無法直接使用 xUnit 專案範本 create unit test，著實</description></item><item><title>在 Visual Studio 2017 中安裝其他 Test Framework - NUnit</title><link>https://blog.yowko.com/visual-studio-2017-test-framework-nunit/</link><pubDate>Sun, 28 May 2017 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-2017-test-framework-nunit/</guid><description>在 Visual Studio 2017 中安裝其他 Test Framework - NUnit 透過 Visual Studio 2017 建立專案後，可以使用的 Test Framework 預設只有 MSTest 與 MSTestv2，而 MSTest 一般普遍認為功能較陽春，而會想改使用 NUnit 或是 x</description></item><item><title>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exception)</title><link>https://blog.yowko.com/mstest-nunit-xunit-exception/</link><pubDate>Sat, 27 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/mstest-nunit-xunit-exception/</guid><description>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exceptio</description></item><item><title>Git 修改資料夾名稱的做法</title><link>https://blog.yowko.com/git-mv/</link><pubDate>Fri, 26 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/git-mv/</guid><description>Git 修改資料夾名稱的做法 同事想要調整 Git repository 的 folder 名稱，以往 SVN 的修改方式就是直接修改資料夾名稱，然後 commit，一切搞定：因為 SVN 是檔案 base 的版控，它</description></item><item><title>使用 .NET client 連線至 Apache Kafka 收發訊息</title><link>https://blog.yowko.com/kafka-client-produce-consume/</link><pubDate>Thu, 25 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-client-produce-consume/</guid><description>使用 .NET client 連線至 Apache Kafka 收發訊息 .NET Core 用法可以參考 讓 Kafka 達成 Broadcast 效果 繼之前紀錄 如何在 Windows OS 安裝 Apache Kafka 到現在默默地過了兩個月XD，直到最近才有時間可以再開始進</description></item><item><title>Visual Studio 無法 Debug 專案 (錯誤代碼：CS0006)</title><link>https://blog.yowko.com/visual-studio-debug-cs0006/</link><pubDate>Wed, 24 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-debug-cs0006/</guid><description>Visual Studio 無法 Debug 專案 (錯誤代碼：CS0006) 剛剛開啟一個月前做的專案，針對新的需求做個小調整，說是小調整其實也改了 flow，所以連帶著也要調整 unit</description></item><item><title>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 1</title><link>https://blog.yowko.com/tdd-day-1/</link><pubDate>Tue, 23 May 2017 22:47:00 +0800</pubDate><guid>https://blog.yowko.com/tdd-day-1/</guid><description>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 1 關於參加課程的想法： 測試的重要性大部份的工程師都懂，也都 想 做，只是更多時候絕大多數人都停留在 想 這個階</description></item><item><title>使用 .NET client 連線至 RabbitMQ 收發訊息</title><link>https://blog.yowko.com/rabbitmq-client-send-consume/</link><pubDate>Mon, 22 May 2017 23:35:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-client-send-consume/</guid><description>使用 .NET client 連線至 RabbitMQ 收發訊息 繼之前 使用 RabbitMQ.Client 連線至 RabbitMQ 出現 BrokerUnreachableException 問題解決後，終於又可以繼續測試 RabbitMQ 了，要比較的不僅僅是 mq 的能力，也要比較使用上的便利性及周邊</description></item><item><title>建構式中呼叫基底類別 (base class) 建構式傳入 Action 出現錯誤</title><link>https://blog.yowko.com/pass-action-base-constructor/</link><pubDate>Mon, 22 May 2017 22:29:00 +0800</pubDate><guid>https://blog.yowko.com/pass-action-base-constructor/</guid><description>建構式中呼叫基底類別 (base class) 建構式傳入 Action 出現錯誤 這是最近在重構程式時遇到的狀況，class B 繼承自 class A (class B:A)， class B 的建構式會在呼叫 class A 建構式</description></item><item><title>Windows 中強大的 launcher - Wox</title><link>https://blog.yowko.com/windows-launcher-wox/</link><pubDate>Sun, 21 May 2017 23:58:00 +0800</pubDate><guid>https://blog.yowko.com/windows-launcher-wox/</guid><description>Windows 中強大的 launcher - Wox 參加 twMVC 活動偶然間看見 91 大在 live demo 的過程使用一個沒看過的工具，功能很強大，可以用來搜尋檔案，功能跟 everything 一樣，也可以當做計算機、又能</description></item><item><title>使用 RabbitMQ.Client 連線至 RabbitMQ 出現 BrokerUnreachableException</title><link>https://blog.yowko.com/rabbitmq-client-brokerunreachableexception/</link><pubDate>Thu, 18 May 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-client-brokerunreachableexception/</guid><description>使用 RabbitMQ.Client 連線至 RabbitMQ 出現 BrokerUnreachableException 因為專案需要就開始動手來嘗試各種 MQ 的比較，第一個開始測試的就是 RabbitMQ，原本打算先做幾個基本測試： 試打訊息進 queue 讓</description></item><item><title>在 Jenkins 2 使用有 Submodule 的 Git Repository</title><link>https://blog.yowko.com/jenkins-git-submodule/</link><pubDate>Wed, 17 May 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-git-submodule/</guid><description>在 Jenkins 2 使用有 Submodule 的 Git Repository 前幾天文章 Git 專案引用其他 Repository 的作法(Git Submodule) 介紹了如何使用 Git Submodule 的功能來拆解專案的相依性，讓 repository 可以引用其他外部 repository 檔案或是 source c</description></item><item><title>在 Windows 7、Winodws 10、Windows Server 2016 上安裝 RabbitMQ</title><link>https://blog.yowko.com/install-rabbitmq-on-windows7-windows10-windows2016/</link><pubDate>Tue, 16 May 2017 23:00:00 +0800</pubDate><guid>https://blog.yowko.com/install-rabbitmq-on-windows7-windows10-windows2016/</guid><description>在 Windows 7、Winodws 10、Windows Server 2016 上安裝 RabbitMQ 公司既有專案在實際 production 環境上有效能瓶頸，雖然有 load balance 搭配 cluster 架構，但 load balance 設定方式使得 cluster 中的各</description></item><item><title>如何使用 Git Attributes 來避免 web.config(app.config) 連線字串的機敏資訊被 commit</title><link>https://blog.yowko.com/git-attributes-prevent-commit-password/</link><pubDate>Mon, 15 May 2017 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-attributes-prevent-commit-password/</guid><description>如何使用 Git Attributes 來避免 web.config(app.config) 連線字串的機敏資訊被 commit 自從 GitHub 與雲端服務盛行以來，你一定有聽過類似的鄉野傳聞：某個開發人員不慎把雲端服務的帳號及密碼 commit 至 G</description></item><item><title>使用 Git Attributes 的合併策略(Merge Strategy) 避免特定檔案被變更</title><link>https://blog.yowko.com/git-attributes-merge-strategy/</link><pubDate>Sun, 14 May 2017 12:31:00 +0800</pubDate><guid>https://blog.yowko.com/git-attributes-merge-strategy/</guid><description>使用 Git Attributes 的合併策略(Merge Strategy) 避免特定檔案被變更 公司專案在經由 CI - Continuous integration (Jenkins) 成功 build 後會將 build 結果全部 commit 回 SVN，以確保最後的 production code 是有被版控的，如</description></item><item><title>Git 專案引用其他 Repository 的作法(Git Submodule)</title><link>https://blog.yowko.com/git-submodule/</link><pubDate>Sat, 13 May 2017 10:55:00 +0800</pubDate><guid>https://blog.yowko.com/git-submodule/</guid><description>Git 專案引用其他 Repository 的作法(Git Submodule) 最近公司正在大刀闊斧地將專案從 SVN 搬到 Git 上，流程的改變、不同的版控觀念以及操作方式不免造成些衝擊，但這些只要經</description></item><item><title>Git 如何針對其他路徑下的 Repository 執行指令</title><link>https://blog.yowko.com/git-command-from-another-directory/</link><pubDate>Fri, 12 May 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-command-from-another-directory/</guid><description>Git 如何針對其他路徑下的 Repository 執行指令 一般來說我們都會直接在專案 repository 的所在目錄下執行 git 指令，今天同事問的這個問題就是因為不是一般的人為操作：同事使用</description></item><item><title>Docker 如何在多個 Container 間共享資料</title><link>https://blog.yowko.com/docker-data-volume-container/</link><pubDate>Thu, 11 May 2017 23:08:00 +0800</pubDate><guid>https://blog.yowko.com/docker-data-volume-container/</guid><description>Docker 如何在多個 Container 間共享資料 最近跟公司同事一起將部份公司服務改使用 docker 來架設，為了確保相關資料及設定不會隨著 container 消滅而不見，所以一定需要將資料保存在</description></item><item><title>Windows Server 2016 中 Windows Container 的 docker 指令介紹</title><link>https://blog.yowko.com/docker-command-8n-windows/</link><pubDate>Wed, 10 May 2017 23:29:00 +0800</pubDate><guid>https://blog.yowko.com/docker-command-8n-windows/</guid><description>Windows Server 2016 中 Windows Container 的 docker 指令介紹 經過幾天筆記加深印象後，大致上對於 container 與 docker 有些基本了解，接著就來看看該如何在 Windows Server 2016 中使用 docker 及 docker 相關指令 Container 生命周期相關語</description></item><item><title>Jenkins 該如何使用 SSH 存取 AD(LDAP) 驗證的 Git server</title><link>https://blog.yowko.com/jenkins-ssh-ad-ldap-git-server/</link><pubDate>Tue, 09 May 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-ssh-ad-ldap-git-server/</guid><description>Jenkins 該如何使用 SSH 存取 AD(LDAP) 驗證的 Git server 最近公司的專案正積極地從 SVN 搬遷到 GIT，所以連帶的 CI Server - Jenkins 這邊的 SCM (Source Code Management) 也需要一併調整，同事為了不想寫死帳號密</description></item><item><title>Windows 10 如何啟用 docker 功能</title><link>https://blog.yowko.com/windows-10-docker/</link><pubDate>Mon, 08 May 2017 01:08:00 +0800</pubDate><guid>https://blog.yowko.com/windows-10-docker/</guid><description>Windows 10 如何啟用 docker 功能 Windows 10 雖然不是原生支援 Windows Server container(透過 Hyper-V 支援)，執行速度較慢，但 Microsoft 在 Windows 10 上將 windows container 與 Linux container 包裝得非常方便。只要滑鼠動</description></item><item><title>Windows 環境下為 Git Repository 加上 Git Hook</title><link>https://blog.yowko.com/git-hook-windows/</link><pubDate>Sun, 07 May 2017 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-hook-windows/</guid><description>Windows 環境下為 Git Repository 加上 Git Hook 同事因為專案相依的關係，在不同 branch 間可能會誤用不同屬性或是方式，所以想在 repository 切換 branch 時加入提示，提醒工程師記得切換相依專案的</description></item><item><title>使用 docker 建立 CentOS 7 container</title><link>https://blog.yowko.com/docker-centos-7-container/</link><pubDate>Sat, 06 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/docker-centos-7-container/</guid><description>使用 docker 建立 CentOS 7 container 這是個奇特的情境：在 CentOS 7 實體機器上使用 docker 透過 CentOS 7 建立 CentOS 7 container ，聽來怪怪的XD，原因是 docker hub 上現有的 image 不符合公司使用需求，所以想要</description></item><item><title>VirtualBox 如何安裝 Centos 7 並設定網路</title><link>https://blog.yowko.com/virtualbox-centos-7/</link><pubDate>Fri, 05 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/virtualbox-centos-7/</guid><description>VirtualBox 如何安裝 Centos 7 並設定網路 公司電腦是 Windows 7，無法使用 Hyper-V 所以使用 VirtualBox 來建立 linux 環境，經過上次 嚴密 比較後依然還是選擇 CentOS 7，筆記一下安裝及設定過程 安裝 CentOS 7</description></item><item><title>如何在 Windows Server 2016 安裝 Docker</title><link>https://blog.yowko.com/windows-server-2016-docker/</link><pubDate>Thu, 04 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-docker/</guid><description>如何在 Windows Server 2016 安裝 Docker Windows Server 2016 是第一個原生支援 Docker 的 Windows 作業系統，雖然 windows container 的 image 數量遠遠比不上 linux container，但 MicroSoft 自家出品的 windows 原生相關產品與工具還</description></item><item><title>如何在 Windows Server 2016 的 Hyper-V 上安裝 Centos 7</title><link>https://blog.yowko.com/windows-server-2016-hyperv-centos7/</link><pubDate>Wed, 03 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-hyperv-centos7/</guid><description>如何在 Windows Server 2016 的 Hyper-V 上安裝 Centos 7 之前文章 如何在 Windows Server 2016 上安裝 Hyper-V 提到為了想體驗 linux container 所以在 Windows Server 2016 上安裝了 Hyper-V 打算安裝 linux，Windows Server 2016 跟 Hyper-V 都已</description></item><item><title>如何在 Windows Server 2016 上安裝 Hyper-V</title><link>https://blog.yowko.com/windows-server-2016-hyper-v/</link><pubDate>Tue, 02 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-hyper-v/</guid><description>如何在 Windows Server 2016 上安裝 Hyper-V Windows Server 2016 經過與 dcoker 公司共同重新設計架構，已經支援使用原生的 Windows container ，但市面上多數的軟體仍然以 Linux container 為大宗，現階段要在 Windows Server 2016 上使用 linux</description></item><item><title>初探容器技術(Container)</title><link>https://blog.yowko.com/container/</link><pubDate>Mon, 01 May 2017 00:45:00 +0800</pubDate><guid>https://blog.yowko.com/container/</guid><description>初探容器技術(Container) 近幾年容器(container) 技術發展篷勃，尤其 Docker open source 後，各家大型軟體公司都陸續投入資源加入新一代的虛擬</description></item><item><title>如何開啟 Windows Server 2016 遠端桌面</title><link>https://blog.yowko.com/windows-server-2016-enable-remote-desktop/</link><pubDate>Sun, 30 Apr 2017 09:49:00 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-enable-remote-desktop/</guid><description>如何開啟 Windows Server 2016 遠端桌面 為了體驗 Windows Server 2016 的威力, 從安裝 Windows Server 2016 開始，都是直接操作實體機器，只是這樣不僅常常用錯滑鼠鍵盤，有的軟體授權方式是綁機器的</description></item><item><title>如何在 windows 環境中使用指令來安裝程式</title><link>https://blog.yowko.com/windows-silent-install/</link><pubDate>Sat, 29 Apr 2017 10:28:00 +0800</pubDate><guid>https://blog.yowko.com/windows-silent-install/</guid><description>如何在 windows 環境中使用指令來安裝程式 保哥在 Windows container 的課堂上考了我個問題：如果沒有 GUI 介面要如何安裝程式(e.g.更新 .NET Framework)，正確答案是</description></item><item><title>Git 如何設定一次 Push 至多個 Remote Repository</title><link>https://blog.yowko.com/git-push-multiple-remote-repository/</link><pubDate>Fri, 28 Apr 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/git-push-multiple-remote-repository/</guid><description>Git 如何設定一次 Push 至多個 Remote Repository 相信你一定不想看到辛苦寫完的程式，因為意外造成 Source Code 遺失，當然還擇良好的 Git server 服務是必要條件，但再穩固的服務也有可能出</description></item><item><title>如何使用 StackExchange.Redis 取得所有 keys 值與指定 pattern 的 key</title><link>https://blog.yowko.com/stackexchange-redis-get-all-keys-or-pattern/</link><pubDate>Thu, 27 Apr 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/stackexchange-redis-get-all-keys-or-pattern/</guid><description>如何使用 StackExchange.Redis 取得所有 keys 值與指定 pattern 的 key 同事因專案需要打算將 redis 資料與 db 資料進行比對，為了要比對資料，首先就是將 redis 資料導出，所以需要取得所有 keys</description></item><item><title>Jenkins 如何在 Pipeline 中平行 build Job 與失敗不中斷 job</title><link>https://blog.yowko.com/jenkins-fail-and-continue/</link><pubDate>Wed, 26 Apr 2017 02:21:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-fail-and-continue/</guid><description>Jenkins 如何在 Pipeline 中平行 build Job 與失敗不中斷 job 同事打算設定固定周期性執行 pipeline job 將所有專案 build 一輪，讓專案可以常保在健康的狀態。 非常正確的想法，但我的疑問是為</description></item><item><title>SQL Server 如何紀錄執行錯誤</title><link>https://blog.yowko.com/sql-server-log-exception/</link><pubDate>Tue, 25 Apr 2017 02:07:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-log-exception/</guid><description>SQL Server 如何紀錄執行錯誤 程式在 production 環境上出現錯誤，大家會怎麼 debug 呢？最傳統也最普遍的做法當然就是追查各式各樣的 log，現在發生錯誤的對象換做是 db 該怎</description></item><item><title>如何在 Visual Studio Code 中快速使用 Markdown 建立簡報</title><link>https://blog.yowko.com/visual-studio-code-markdown-slide/</link><pubDate>Mon, 24 Apr 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-code-markdown-slide/</guid><description>如何在 Visual Studio Code 中快速使用 Markdown 建立簡報 今天看到保哥分享 vscode-reveal 套件可以直接在 visual studio code 中使用 reveal.js 來開啟 markdown 檔做成簡報，感覺很像之前文章 用 Markdown 與 Reveal.js 來製作簡報 分享的做</description></item><item><title>相同的 SQL script 在 Stored Procedure 裡跑比較慢？！</title><link>https://blog.yowko.com/sql-script-parameter-sniffing/</link><pubDate>Sun, 23 Apr 2017 02:57:00 +0800</pubDate><guid>https://blog.yowko.com/sql-script-parameter-sniffing/</guid><description>相同的 SQL script 在 Stored Procedure 裡跑比較慢？！ 你遇過把原本執行效率不錯的 sql script 搬到 stored procedure 後執行效率大降的情形嗎？我遇到一次：問題發生原因是 parameter sniffing (參數探測)，至於</description></item><item><title>如何在 debug 時使用對應組態設定的 web.config</title><link>https://blog.yowko.com/webconfig-transform-when-debug/</link><pubDate>Sat, 22 Apr 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/webconfig-transform-when-debug/</guid><description>如何在 debug 時使用對應組態設定的 web.config 自從 web.config transform (可以依不同的組態設定 e.g.: debug、release 設定不同的值) 的功能出現後，在不同環境間的變數處理變</description></item><item><title>SQL Server 字串分割 function 的效能調校</title><link>https://blog.yowko.com/sql-server-split-string-function/</link><pubDate>Fri, 21 Apr 2017 02:08:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-split-string-function/</guid><description>SQL Server 字串分割 function 的效能調校 過去曾經參加某個效能調校的研討會，相關資訊已經不可考，就連講師是誰都沒有印象，但卻對其提出的效能調校 guideline 有很深的體悟，</description></item><item><title>如何透過 IIS 的 URL Rewrite 功能限制存取特定檔案或附檔名</title><link>https://blog.yowko.com/iis-url-rewrite/</link><pubDate>Thu, 20 Apr 2017 01:42:00 +0800</pubDate><guid>https://blog.yowko.com/iis-url-rewrite/</guid><description>如何透過 IIS 的 URL Rewrite 功能限制存取特定檔案或附檔名 之前文章 如何透過 IIS 的 Request Filtering 功能限制存取特定檔案或附檔名 介紹到如何使用 IIS Request Filter Module 來避免特定檔案在網站上</description></item><item><title>如何透過 IIS 的 Request Filtering 功能限制存取特定檔案或附檔名</title><link>https://blog.yowko.com/iis-request-filtering/</link><pubDate>Wed, 19 Apr 2017 01:39:00 +0800</pubDate><guid>https://blog.yowko.com/iis-request-filtering/</guid><description>如何透過 IIS 的 Request Filtering 功能限制存取特定檔案或附檔名 同事因為某個專案使用 Share code with Add as Link 的功能，讓 xml 格式的設定檔直接被放在根目錄下，如此一來爬蟲或是知道</description></item><item><title>Jenkins 如何自訂首頁 header</title><link>https://blog.yowko.com/jenkins2-customize-page/</link><pubDate>Tue, 18 Apr 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins2-customize-page/</guid><description>Jenkins 如何自訂首頁 header 同事希望在 Jenkins 頁面的 header 加上一些常用連結甚至是系統訊息，以利資訊揭露，讓訊息不同步的情況可以獲得改善，紀錄一下該如何設定 開啟允許</description></item><item><title>NUnit 幾個參數化測試的方式</title><link>https://blog.yowko.com/nunit-parameterized-test/</link><pubDate>Mon, 17 Apr 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/nunit-parameterized-test/</guid><description>NUnit 幾個參數化測試的方式 QA 同事最近正在進行一個龐大計劃：打算將上百個單元測試，整併為一個。剛聽到這個需求，我當然是持反對意見，將那麼多測試整併</description></item><item><title>三種用來備份還原 SQL Server schema 與資料的做法</title><link>https://blog.yowko.com/sql-server-backup-restore/</link><pubDate>Sun, 16 Apr 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-backup-restore/</guid><description>三種用來備份還原 SQL Server schema 與資料的做法 部份公司團隊在專案開發流程上有較多的環境需要建置，或是有時需要針對不同環境的資料及 schema 進行除錯與比對時就是件</description></item><item><title>如何使用 NUnit3 console 在沒有 Visual Studio 的環境下執行 NUnit 測試</title><link>https://blog.yowko.com/nunit3-console/</link><pubDate>Sun, 16 Apr 2017 18:11:00 +0800</pubDate><guid>https://blog.yowko.com/nunit3-console/</guid><description>如何使用 NUnit3 console 在沒有 Visual Studio 的環境下執行 NUnit 測試 一般情況下我們都是透過 Visual Studio 來開發測試程式，但並非所有環境都有 Visula Studio 像是 CI Server 一般都不會安裝 Visual Studio</description></item><item><title>你認識 SQL Server 的資料層應用程式(Data-tier Applications - DAC)嗎?</title><link>https://blog.yowko.com/sql-server-dac/</link><pubDate>Fri, 14 Apr 2017 02:39:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-dac/</guid><description>你認識 SQL Server 的資料層應用程式(Data-tier Applications - DAC)嗎? DAC 首次出現於 SQL Server 2008 R2 ，但直至今日經過了這麼久時間還是很少聽到其他人討論這個功能</description></item><item><title>Visual Studio 的 Code Clone 重複程式碼分析工具</title><link>https://blog.yowko.com/visual-studio-code-clone/</link><pubDate>Wed, 12 Apr 2017 00:10:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-code-clone/</guid><description>Visual Studio 的 Code Clone 重複程式碼分析工具 最近的工作是針對一個大型既有專案做程式碼品質改善，當時接到這個任務時，對於這個專案我心裡大概就有幾個想法： 重要性</description></item><item><title>Visual Studio 2017 如何使用 Code Map 功能</title><link>https://blog.yowko.com/visual-studio-2017-code-map/</link><pubDate>Tue, 11 Apr 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-2017-code-map/</guid><description>Visual Studio 2017 如何使用 Code Map 功能 自從 Visual Studio 2012 加入 Code Map 功能後，在面對前人遺留的 legend code 與複雜程式碼相依參考的問題時不再每每都有離職的衝動，雖然問題沒有被直接解</description></item><item><title>如何快速比對資料庫結構差異並產生同步指令</title><link>https://blog.yowko.com/sql-server-schema-compare/</link><pubDate>Mon, 10 Apr 2017 00:20:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-schema-compare/</guid><description>如何快速比對資料庫結構差異並產生同步指令 之前文章 如何為 SQL SERVER 建立資料庫版控 簡短地介紹如何使用 SQL Server Data Tools (SSDT) 來將資料庫物件轉換為程式碼以利進行版控，</description></item><item><title>如何為 SQL SERVER 建立資料庫版控</title><link>https://blog.yowko.com/sql-server-version-control/</link><pubDate>Sun, 09 Apr 2017 21:21:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-version-control/</guid><description>如何為 SQL SERVER 建立資料庫版控 程式碼版控的重要性對於開發人員不言可喻，但很常遇到的問題是資料庫相依：程式有完整版控但每個版本對應的資料庫 schema 或是資料</description></item><item><title>Redis 多個 sentinel 無法執行 failover？！</title><link>https://blog.yowko.com/redis-sentinel-failover-fail/</link><pubDate>Sat, 08 Apr 2017 20:29:00 +0800</pubDate><guid>https://blog.yowko.com/redis-sentinel-failover-fail/</guid><description>Redis 多個 sentinel 無法執行 failover？! 這是在為公司架設 Redis sentinel 時遇到的問題：依官方設定至少設定三個 sentinel instance 並設定 quorum 為 2，設定上非常順利，但進行 HA 演練時</description></item><item><title>Jenkins 如何取得上次編譯成功的時間</title><link>https://blog.yowko.com/jenkins-get-last-success-build/</link><pubDate>Fri, 07 Apr 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-get-last-success-build/</guid><description>Jenkins 如何取得上次編譯成功的時間 之前曾經在 Jenkins 2 將其他 job 名稱變成可選擇的參數 介紹過該如何把其他 job name 當做參數，經過一段時間的發展，job 默默地成長到</description></item><item><title>SQL Server 無法新增資料庫圖表(database diagram)</title><link>https://blog.yowko.com/sql-server-database-diagram/</link><pubDate>Thu, 06 Apr 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-database-diagram/</guid><description>QL Server 無法新增資料庫圖表(database diagram) 因為之前工作常需要建立新的資料庫及資料表，在保哥指導下學會使用以資料庫圖表(database dia</description></item><item><title>Redis 3.2.8 與 Redis-Windows 3.2.1 config 解析 - part 1 (INCLUDES,NETWORK,GENERAL)</title><link>https://blog.yowko.com/redis-config/</link><pubDate>Sat, 01 Apr 2017 02:16:00 +0800</pubDate><guid>https://blog.yowko.com/redis-config/</guid><description>Redis 3.2.8 與 Redis-Windows 3.2.1 config 解析 - part 1 (INCLUDES,NETWORK,GENERAL) 前幾天在進行 Redis Server HA 設定時，發現有好幾個設定自己沒有實際使用過，更重要的是還有個設定我之前根本就誤會使用方式了，身為一</description></item><item><title>如何在 Windows OS 安裝 Apache Kafka</title><link>https://blog.yowko.com/kafka-on-windows/</link><pubDate>Fri, 31 Mar 2017 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/kafka-on-windows/</guid><description>如何在 Windows OS 安裝 Apache Kafka Apache Kafka 是由 LinkedIn 所開發進而 open source 的 message queue 系統，使用 scala 語言打造，具有水平擴展及高吞吐量的特性，因其效能優異而受到不少關注。 因為最近專案</description></item><item><title>如何客製化 Opserver - 使用不同帳號密碼來監控多台 Windows Server</title><link>https://blog.yowko.com/opserver-windows-server_multiple_auth/</link><pubDate>Thu, 30 Mar 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/opserver-windows-server_multiple_auth/</guid><description>如何客製化 Opserver - 使用不同帳號密碼來監控多台 Windows Server 之前文章 如何使用 Opserver 來監控 Windows Server 介紹該怎麼設定 Opserver 來監控 Windows Server，但我們也發現只能使用同一組帳號</description></item><item><title>如何使用 Opserver 來監控 Windows Server</title><link>https://blog.yowko.com/opserver-windows-server/</link><pubDate>Wed, 29 Mar 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/opserver-windows-server/</guid><description>如何使用 Opserver 來監控 Windows Server 之前文章 如何使用 Opserver 來監控 Redis 介紹該怎麼設定 Opserver for Redis，如何使用 Opserver 來監控 Elasticsearch 介紹如何設定 Opserver for Elasticsearch ,接著就來看看該如何使用 Opserver 監</description></item><item><title>如何使用 Opserver 來監控 Elasticsearch</title><link>https://blog.yowko.com/opserver-elasticsearch/</link><pubDate>Tue, 28 Mar 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/opserver-elasticsearch/</guid><description>如何使用 Opserver 來監控 Elasticsearch 之前筆記 如何使用 Opserver 來監控 Redis 介紹該怎麼設定 Opserver for Redis，而 Opserver 官方介紹中也包含監控 Elasticsearch 的功能，立馬就來試試該如何設定 文章大綱 安</description></item><item><title>TFS 2017 初體驗</title><link>https://blog.yowko.com/tfs-2017/</link><pubDate>Sun, 26 Mar 2017 02:44:34 +0800</pubDate><guid>https://blog.yowko.com/tfs-2017/</guid><description>TFS 2017 初體驗 公司正在評估新的版本控制系統，主要想要從 subversion 遷移至 Git 上，因此開始評估各個 Git server，包括 GitLab、BitBucket、TFS</description></item><item><title>如何使用 StackExchange.Redis 配合 Sentinel 或是 Cluster 達到高可用性</title><link>https://blog.yowko.com/stackexchange-redis-sentinel-cluster/</link><pubDate>Sat, 25 Mar 2017 02:44:34 +0800</pubDate><guid>https://blog.yowko.com/stackexchange-redis-sentinel-cluster/</guid><description>如何使用 StackExchange.Redis 配合 Sentinel 或是 Cluster 達到高可用性 前陣子公司其他 team 的同事遇到了 Redis 的 production issue，詳細情形我不好多問，大意是懷疑 Redis 異常，造成部份服務無法正常運</description></item><item><title>Windows 環境如何設定 Redis Master-Slave 與 Sentinel</title><link>https://blog.yowko.com/windows-redis-master-slave-sentinel/</link><pubDate>Fri, 24 Mar 2017 02:44:34 +0800</pubDate><guid>https://blog.yowko.com/windows-redis-master-slave-sentinel/</guid><description>Windows 環境如何設定 Redis Master-Slave 與 Sentinel 最近在幫公司同事做 Redis 基礎教育，雖說公司 Redis 架在 Rehat 上，但身為一個 .NET 開發人員讓我轉換環境操作 Linux 還是相對苦手的，所以就在自己的</description></item><item><title>關於 Redis Persistence - 資料持久化</title><link>https://blog.yowko.com/redis-persistence/</link><pubDate>Thu, 23 Mar 2017 02:44:34 +0800</pubDate><guid>https://blog.yowko.com/redis-persistence/</guid><description>關於 Redis Persistence - 資料持久化 我們知道 Redis 是個以 memory 為基礎的儲存系統，可以用來做為 database、cache 及 message broker。除了 cache 這個角色有較多情境可</description></item><item><title>PowerShell ISE 執行外部執行檔(.exe) 時出現 RemoteException NativeCommandError</title><link>https://blog.yowko.com/powershell-ise-nativecommanderror/</link><pubDate>Wed, 22 Mar 2017 02:44:34 +0800</pubDate><guid>https://blog.yowko.com/powershell-ise-nativecommanderror/</guid><description>PowerShell ISE 執行外部執行檔(.exe) 時出現 RemoteException NativeCommandError 打算使用 PowerShell 叫用 PsExec.exe 來執行一些指令，使用 PowerShell ISE 開發時持續出現錯誤訊息，查了些資料，紀錄一下 結論 依以往的範例</description></item><item><title>Redis bechmack 用法與參數說明</title><link>https://blog.yowko.com/redis-bechmack/</link><pubDate>Wed, 22 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/redis-bechmack/</guid><description>Redis bechmack 用法與參數說明 透過 redis-benchmark 這個 redis 內建工具可以幫助我們瞭解 redis 環境的執行效能，測試過程中隨手紀錄一下指令用法 如何使用 Usage: redis-benchmark [-h &amp;lt;host&amp;gt;] [-p &amp;lt;port&amp;gt;] [-c &amp;lt;clients&amp;gt;] [-n &amp;lt;requests]&amp;gt; [-k &amp;lt;boolean&amp;gt;] 參數說</description></item><item><title>Redis 監控指標及監控工具</title><link>https://blog.yowko.com/redis-monitoring/</link><pubDate>Tue, 21 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/redis-monitoring/</guid><description>Redis 監控指標及監控工具 Redis (REmote DIctionary Server), 是一個 Key-Value 資料庫，跟 memcached 很類似，資料皆儲存在記憶體中，不同的是 Redis 對於資料儲存的限制比較少( key 再長 250 bytes，val</description></item><item><title>ProcDump - 用來建立執行程式的 dump</title><link>https://blog.yowko.com/procdump/</link><pubDate>Mon, 20 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/procdump/</guid><description>ProcDump - 用來建立執行程式的 dump 這是 Sysinternal 製作的好用工具，用來建立 dump 應該沒有其他更好用的 command line 工具了吧？！是我太久沒用了嗎？ 我怎麼覺得參數功能變多了，使用</description></item><item><title>如何在 ASP.NET MVC 加上簡易表單驗證</title><link>https://blog.yowko.com/aspnet-mvc-simple-auth/</link><pubDate>Sun, 19 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-simple-auth/</guid><description>如何在 ASP.NET MVC 加上簡易表單驗證 以前寫 ASP.NET WebForm 的時，有時候專案規模不需要建立整套的 Membership 功能，有時候幾個開發者小工具 DBA 也不想讓你建那些 table，所以有時</description></item><item><title>PsExec - 對遠端執行指令工具的用法</title><link>https://blog.yowko.com/psexec/</link><pubDate>Sat, 18 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/psexec/</guid><description>PsExec - 對遠端執行指令工具的用法 原本都是透過 PowerShell 來對遠端電腦執行指令，但不想要將執行的 exe 檔自行複製至遠端電腦，所以查到 PsExec 這個工具支援複製至遠端執行</description></item><item><title>如何讓 ASP.NET MVC View 中的錯誤可以在編譯時期被揭露</title><link>https://blog.yowko.com/aspnet-mvc-build-view/</link><pubDate>Fri, 17 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-build-view/</guid><description>如何讓 ASP.NET MVC View 中的錯誤可以在編譯時期被揭露 有些時候可能因為手誤或是 code merge 的異常而造成 View 被改壞，雖然 View 壞掉很容易修改，但給人的觀感還是很差，畢竟畫</description></item><item><title>如何使用 Opserver 來監控 Redis</title><link>https://blog.yowko.com/opserver-redis/</link><pubDate>Thu, 16 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/opserver-redis/</guid><description>如何使用 Opserver 來監控 Redis 之前參加 twmvc 活動，由阿砮介紹 Stack Overflow open source 的監控專案 - OpServer，不僅是 open source 專案又是 .net MVC 寫的，實在非常有親切感，之前因為專案</description></item><item><title>NuGet 4.0 的特色</title><link>https://blog.yowko.com/nuget-4/</link><pubDate>Wed, 15 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/nuget-4/</guid><description>NuGet 4.0 的特色 偶然間看到發哥在 facebook 揭露 NuGet 4.0 RTM 的消息，身為 .NET 工程師一定要來瞭解其中的特色呀 重要改變 NuGet Package Manager 成為 Visual Studio 的一部份 從 Visual Studio 2017 的 NuGet 4.0 開始， NuGet Package Manager 將</description></item><item><title>如何透過 jobname 取得 Jenkins 2 的 SCM Repository URL 及如何取得 BUILD_ID 及 BUILD_NUMBER 基本語法筆記 2</title><link>https://blog.yowko.com/jenkins-scm-url/</link><pubDate>Tue, 14 Mar 2017 02:43:34 +0800</pubDate><guid>https://blog.yowko.com/jenkins-scm-url/</guid><description>如何透過 jobname 取得 Jenkins 2 的 SCM Repository URL 及如何取得 BUILD_ID 及 BUILD_NUMBER 公司的 CI 流程需要使用 SCM Repository URL 來進行不同環境間的程式碼切換，原本為每個 job 都加上一個 URL 設定，但這樣一來就</description></item><item><title>PowerShell 基本語法筆記 2</title><link>https://blog.yowko.com/powershell-operator-pipeline-xml/</link><pubDate>Tue, 14 Mar 2017 02:42:34 +0800</pubDate><guid>https://blog.yowko.com/powershell-operator-pipeline-xml/</guid><description>PowerShell 基本語法筆記 2 自從開始使用 PowerShell 來與 Jenkins 2 整合進行 CI 與 CD 的流程之後，有愈來愈多需求出現，原本的文章 powershell 基本語法筆記 的內容無法負荷，因此補充一下其他</description></item><item><title>Jenkins 將其他 job 名稱變成可選擇的參數</title><link>https://blog.yowko.com/jenkins-parameterize-with-job/</link><pubDate>Mon, 13 Mar 2017 02:42:34 +0800</pubDate><guid>https://blog.yowko.com/jenkins-parameterize-with-job/</guid><description>Jenkins 將其他 job 名稱變成可選擇的參數 專案愈來愈多，加上最近正在更新專案的 Jenkins，正好趁著這次機會將各個專案的 CI 流程統一，以往新增專案就會手</description></item><item><title>Visual Studio 建置前事件( Pre-build Event ) / 建置後事件( Post-build Event) - PART 2</title><link>https://blog.yowko.com/visual-studio-pre-build-event-post-build-event-2/</link><pubDate>Sun, 12 Mar 2017 02:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-pre-build-event-post-build-event-2/</guid><description>Visual Studio 建置前事件( Pre-build Event ) / 建置後事件( Post-build Event) - PART 2 之前文章 Visual Studio 建置前事件( Pre-build Event ) / 建置後事件( Post-build Event) 介紹到該如何使用 visual studio 的兩種 build event 跟內建的巨集。後</description></item><item><title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 5 使用動態條件與動態欄位</title><link>https://blog.yowko.com/net-framework-memorycache-5/</link><pubDate>Sat, 11 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/net-framework-memorycache-5/</guid><description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 5 使用動態條件與動態欄位 一直以為 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 4 使用泛型來簡化 是 .NET MemoryCache 系列的最後一篇，壓根忘</description></item><item><title>httpErrors 與 customErrors 在 ASP.NET MVC 與 ASP.NET WEB API 中的處理方式</title><link>https://blog.yowko.com/httperrors-customerrors-mvc-webapi/</link><pubDate>Fri, 10 Mar 2017 02:42:34 +0800</pubDate><guid>https://blog.yowko.com/httperrors-customerrors-mvc-webapi/</guid><description>httpErrors 與 customErrors 在 ASP.NET MVC 與 ASP.NET WEB API 中的處理方式 這是同事遇到的 production issue，大意是設定了 customErrors 後出現 cpu 釘死在 100% 的重大缺失，聽到這樣的描述立馬想到可以藉機練習黑大</description></item><item><title>如何使用 WebRequest,HttpWebRequest 來存取(GET,POST,PUT,DELETE,PATCH)網路資源</title><link>https://blog.yowko.com/webrequest-and-httpwebrequest/</link><pubDate>Thu, 09 Mar 2017 02:42:34 +0800</pubDate><guid>https://blog.yowko.com/webrequest-and-httpwebrequest/</guid><description>如何使用 WebRequest,HttpWebRequest 來存取(GET,POST,PUT,DELETE,PATCH)網路資源 現在雲端服務多元，很多系統設計上也都走向 api 化的架構，加上前端工</description></item><item><title>如何使用 Powershell 與 robocopy 複製檔案至同一目錄下多個子目錄中</title><link>https://blog.yowko.com/powershell-recursive-robocopy/</link><pubDate>Thu, 09 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/powershell-recursive-robocopy/</guid><description>如何使用 Powershell 與 robocopy 複製檔案至同一目錄下多個子目錄中 同事問到如何將檔案複製至同一個根目錄下的多個子目錄中，原本的做法將有這個檔案的路徑列出來，再用</description></item><item><title>Jenkins 2 整合 postman collection runner</title><link>https://blog.yowko.com/jenkins-postman/</link><pubDate>Wed, 08 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/jenkins-postman/</guid><description>Jenkins 2 整合 postman collection runner 之前的文章 利用 POSTMAN 中的 collection 來快速測試 application 功能是否正常 介紹到如何使用 postman 內建的 collection runner 來為 api 做基本的測試，今天則要延用其中的概念，在每次上線</description></item><item><title>利用 POSTMAN 中的 collection 來快速測試 application 功能是否正常</title><link>https://blog.yowko.com/postman-collection-runner/</link><pubDate>Tue, 07 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/postman-collection-runner/</guid><description>利用 POSTMAN 中的 collection 來快速測試 application 功能是否正常 無意中聽到 frontend team 的同事在抱怨 frontend 畫面出現錯誤提示，得花點時間查 log 才能發現是 api 有狀況。當下聯想到之前很多專案也</description></item><item><title>如何對 POSTMAN desktop app 偵錯</title><link>https://blog.yowko.com/debug-postman/</link><pubDate>Tue, 07 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/debug-postman/</guid><description>如何對 POSTMAN desktop app 偵錯 最近剛好在撰寫 postman 的 test，過程當然不像文章上寫的那麼容易XD，所以就需要 debug 寫的 test，猜想應該也會有其他人需要，不然就當</description></item><item><title>如何在 POSTMAN 中針對不同環境設定參數進行測試</title><link>https://blog.yowko.com/postman-parameter-test/</link><pubDate>Mon, 06 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/postman-parameter-test/</guid><description>如何在 POSTMAN 中針對不同環境設定參數進行測試 postman 是我們在開發 api 時的常用工具，不僅是開發者自行測試好用，還有 collection 可以儲存數個測試情境，分享給團隊其他人使</description></item><item><title>使用 fiddler 內建 proxy 來截錄手機或是程式封包</title><link>https://blog.yowko.com/fiddler-proxy-collect-traffic/</link><pubDate>Sun, 05 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/fiddler-proxy-collect-traffic/</guid><description>使用 fiddler 內建 proxy 來截錄手機或是程式封包 某些情境下我們會使用 fiddler 來監控對外網路的 request 狀況，但有些情境下對外的 resource 是由程式或是 app 發動，fiddler 就無法</description></item><item><title>如何在 Windows OS 上架設 Redis 監控工具 redis-stat</title><link>https://blog.yowko.com/redis-stat-on-windows/</link><pubDate>Sat, 04 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/redis-stat-on-windows/</guid><description>如何在 Windows OS 上架設 Redis 監控工具 redis-stat Redis 官網有提到 MONITOR 命令會傳回所有的命令所以會影響效能，而大陸網友則提到某些特殊條件下最多可能會降低 50% 的吞吐量，影響甚</description></item><item><title>Redis 的安全設定</title><link>https://blog.yowko.com/redis-security/</link><pubDate>Fri, 03 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/redis-security/</guid><description>Redis on Windows 的安全設定 redis 為了強調高性能表現及簡易使用方式，而將安全性前提建立於信任環境的信任用戶，所以未妥善設定的 redis 會直接赤裸裸地曝露在網路上，嚴</description></item><item><title>初探 Expression Tree</title><link>https://blog.yowko.com/expression-tree/</link><pubDate>Thu, 02 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/expression-tree/</guid><description>初探 Expression Tree 最近在重構取資料的邏輯，希望可以寫得更有彈性，所以開始使用 expression tree，雖然之前就有聽說 expression tree 很厲害，但總覺得好像不是一定要用，花時間就</description></item><item><title>使用 Exceptionless 取代 ELK(Elasticsearch, Logstash, Kibana) 中的 kibana 來完成 log 集中化</title><link>https://blog.yowko.com/centralized-logging-with-exceptionless/</link><pubDate>Wed, 01 Mar 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/centralized-logging-with-exceptionless/</guid><description>使用 Exceptionless 取代 ELK(Elasticsearch, Logstash, Kibana) 中的 kibana 來完成 log 集中化 目前公司的 application logs 集中化是用 ELK(Elasticsearch, Logstash, Kibana) 來處理的，而前公司則使用付費軟體 Splunk 來做，兩者差別最明顯的就是 ELK 是 open source 軟體 ;Splunk</description></item><item><title>為 ASP.NET WEB API 加上簡易的 Token 驗證</title><link>https://blog.yowko.com/aspnet-web-api-fixed-token/</link><pubDate>Tue, 28 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-web-api-fixed-token/</guid><description>為 ASP.NET WEB API 加上簡易的 Token 驗證 朋友需要個提供資料處理的 WEB API ，需要有個基本的 TOKEN 來驗證即可，甚至也不需要 TOKEN 的管理功能，直接指定固定 TOKEN 即可，聽來不太合理</description></item><item><title>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 5 (使用 Sorted Sets 型別)</title><link>https://blog.yowko.com/dotnet-redis-sorted-sets/</link><pubDate>Mon, 27 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-redis-sorted-sets/</guid><description>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 5 (使用 Sorted Sets 型別) 今天來看看 Sorted Sets 該怎麼使用，建議可與 如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 4 (使用 Sets 型別) 參照 一樣</description></item><item><title>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 4 (使用 Sets 型別)</title><link>https://blog.yowko.com/dotnet-redis-sets/</link><pubDate>Sun, 26 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-redis-sets/</guid><description>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 4 (使用 Sets 型別) 今天來看看 Sets 該怎麼使用，建議可與 如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 3 (使用 Lists 型別) 參照 先說重點</description></item><item><title>Fake Assembly 無法自動產生 *.Fakes dll 及出現 build fail</title><link>https://blog.yowko.com/add-fake-assembly-error/</link><pubDate>Sat, 25 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/add-fake-assembly-error/</guid><description>Fake Assembly 無法自動產生 *.Fakes dll 及出現 build fail 在 如何 Mock System.Web.Hosting.HostingEnvironment.MapPath 虛擬路徑 提到同事想要 mock System.Web.Hosting.HostingEnvironment.MapPath 的值，試了半天決定用 fake dll 的方法來直接解決，但過程不太順利，所以留下紀錄 重現問</description></item><item><title>如何 Mock System.Web.Hosting.HostingEnvironment.MapPath 虛擬路徑</title><link>https://blog.yowko.com/mock-hostingenvironment-mappath/</link><pubDate>Fri, 24 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/mock-hostingenvironment-mappath/</guid><description>如何 Mock System.Web.Hosting.HostingEnvironment.MapPath 虛擬路徑 同事想要為負責的專案加上測試保護，讓之後的修改可以降低風險，但很快地就遇上問題：專案在開發階段時並沒有加上任何測試，專案的部</description></item><item><title>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 3 (使用 Lists 型別)</title><link>https://blog.yowko.com/dotnet-redis-lists/</link><pubDate>Thu, 23 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-redis-lists/</guid><description>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 3 (使用 Lists 型別) 先前文章 如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 2 (使用 Hashes 型別) 使用了 Hashed 型別來 cache 資料，但總覺得不太清</description></item><item><title>Jenkins 2 如何建立 Pipeline job</title><link>https://blog.yowko.com/jenkins-pipeline/</link><pubDate>Wed, 22 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/jenkins-pipeline/</guid><description>Jenkins 2 如何建立 Pipeline job Pipeline 是 Jenkins 2 的一大特色，其概念就是將建置流程步驟透過 DSL(Domain-Specific Languages) 來定義與描述，使用的語法是 groovy，但如果只為了 build job 而刻意學 goovy 個人擔</description></item><item><title>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 2 (使用 Hashes 型別)</title><link>https://blog.yowko.com/dotnet-redis-hashes/</link><pubDate>Tue, 21 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-redis-hashes/</guid><description>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 2 (使用 Hashes 型別) 在 如何在 .NET 程式中使用 Redis 做為 Cache Server 一文中把原本使用 .NET 的 MemoryCache 改為使用 Redis，其中用的是 Redis 最基本的</description></item><item><title>C# 如何用特定的 attribute 取得 property 資訊</title><link>https://blog.yowko.com/csharp-get-property-info-from-attribute/</link><pubDate>Mon, 20 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/csharp-get-property-info-from-attribute/</guid><description>C# 如何用特定的 attribute 取得 property 資訊 今天正在試著如何把自訂 method 寫得更彈性些，不要有太多 magic string 判斷，所以打算利用 attribute 做為媒介，印象中以前也做過這件事，所以筆記</description></item><item><title>使用 ConfigurationSection 自訂 ASP.NET config (web.config) 區段</title><link>https://blog.yowko.com/webconfig-customize-configurationsection/</link><pubDate>Sun, 19 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/webconfig-customize-configurationsection/</guid><description>使用 ConfigurationSection 自訂 ASP.NET config (web.config) 區段 不得不服老呀，一樣的功能二、三年前寫的時候還相當流暢，想不到這二、三年的光景過去，就搞得像是沒寫過一樣XD 乾脆當做沒寫過</description></item><item><title>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 1 (使用 Strings 型別)</title><link>https://blog.yowko.com/dotnet-redis-strings/</link><pubDate>Sat, 18 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-redis-strings/</guid><description>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 1 (使用 Strings 型別) 在前面文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，也使用 .NET Framework</description></item><item><title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 4 使用泛型來簡化</title><link>https://blog.yowko.com/net-framework-memorycache-4/</link><pubDate>Fri, 17 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/net-framework-memorycache-4/</guid><description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 4 使用泛型來簡化 經過第一篇文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，也在 使</description></item><item><title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db</title><link>https://blog.yowko.com/net-framework-memorycache-2/</link><pubDate>Thu, 16 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/net-framework-memorycache-2/</guid><description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db 經過前一篇文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，文末也</description></item><item><title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 3 隱藏的效能瓶頸</title><link>https://blog.yowko.com/net-framework-memorycache-3/</link><pubDate>Thu, 16 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/net-framework-memorycache-3/</guid><description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 3 隱藏的效能瓶頸 之前筆記 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db 解決程式可能 ddos db 的重大缺失，最近重新</description></item><item><title>MSTest,NUnit 3,xUnit.net 2.0 比較</title><link>https://blog.yowko.com/mstest-nunit-xunit/</link><pubDate>Wed, 15 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/mstest-nunit-xunit/</guid><description>MSTest,NUnit 3,xUnit.net 2.0 比較 最近新專案期望使用較多的測試來保障程式品質，所以又到了要選擇相關工具的時候，首先遇到的就是測試框架 (Test Framework)：MSTe</description></item><item><title>C# 的跳躍語法( break continue goto 與 return)</title><link>https://blog.yowko.com/csharp-break-continue-goto-return/</link><pubDate>Tue, 14 Feb 2017 01:42:34 +0800</pubDate><guid>https://blog.yowko.com/csharp-break-continue-goto-return/</guid><description>C# 的跳躍語法( break continue goto 與 return) 最近看了一段程式，感覺跑的順序跟預期的不同，查了 msdn 文件，順手做了個紀錄。 文件請務必看英文版，中文版的錯很大，完全不是</description></item><item><title>C# reflection getProperty and getValue</title><link>https://blog.yowko.com/csharp-reflection-getproperty-getvalue/</link><pubDate>Tue, 14 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/csharp-reflection-getproperty-getvalue/</guid><description>C# reflection getProperty and getValue 你曾經想要把 object 中所有的 property name 跟內容都取出來確認嗎？如果每次程式跑 debug 都花個五分鐘，或是你跟我一樣急性子的話，你一定不會想在 debug 下一個一個</description></item><item><title>Visual Studio 2013 Unit Testing 的好用套件</title><link>https://blog.yowko.com/visual-studio-2013-unit-test-plugin/</link><pubDate>Mon, 13 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-2013-unit-test-plugin/</guid><description>Visual Studio 2013 Unit Testing 的好用套件 公司有些專案仍然使用 Visual Studio 2013，為了有更好的程式品質，慢慢地各專案都需要加上測試，所以就遇到有些好用套件需要另外處理的</description></item><item><title>Jenkins 2 如何使用 PowerShell 以及自定 build fail (指定 exit code)</title><link>https://blog.yowko.com/jenkins-powershell-plugin/</link><pubDate>Sun, 12 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/jenkins-powershell-plugin/</guid><description>Jenkins 2 如何使用 PowerShell 以及自定 build fail (指定 exit code) Jenkins 除了用來做為 CI(持續性整合) 工具外，也可以與其他 plugin 配合達成其他目的(e.g.IIS restart、檔</description></item><item><title>GitHub Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (GitHub Plugin)</title><link>https://blog.yowko.com/github-plugin-jenkins-webhook/</link><pubDate>Sat, 11 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/github-plugin-jenkins-webhook/</guid><description>GitHub Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (GitHub Plugin) 之前筆記 遠端 Git Repository 有 merge 時自動通知 Jenkins 2 進行編譯建置 (webhook) 紀錄了如何以 GitHub 為例設定 Git server 提供的 webhook 功能與 Jenkins 2 建置自動</description></item><item><title>遠端 Git Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (webhook)</title><link>https://blog.yowko.com/git-repository-jenkins-webhook/</link><pubDate>Fri, 10 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/git-repository-jenkins-webhook/</guid><description>遠端 Git Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (webhook) 之前筆記 如何使用 Jenkins 2.0 建置 .NET 專案 紀錄到該如何使用 Jenkins 2 來建置 .NET 專案，為了讓整個開發建置流程更加自動化也</description></item><item><title>如何使用 Jenkins 2 建置 .NET 專案</title><link>https://blog.yowko.com/jenkins-build-dotnet-project/</link><pubDate>Thu, 09 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/jenkins-build-dotnet-project/</guid><description>如何使用 Jenkins 2 建置 .NET 專案 實際上使用 Jnekins 1 跟 Jenkins 2 在建置 .NET 專案的設定並沒有不同，依照 Jenkins 1 的設定即可，因為已改用 Jenkins 2 ，怕設定畫面不同，造成誤解，所以標</description></item><item><title>如何修改 Jenkins 2 預設使用的 port 以及在同一 Windows Server 安裝多個 Jenkins</title><link>https://blog.yowko.com/change-jenkins-port-multiple-jenkins/</link><pubDate>Wed, 08 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/change-jenkins-port-multiple-jenkins/</guid><description>如何修改 Jenkins 2 預設使用的 port 以及在同一 Windows Server 安裝多個 Jenkins 在某些情境下(e.g. slave、專案實體隔離)，需要在同一台 Server 上安裝多個 Jenkins，另</description></item><item><title>全新的 Jenkins .NET Build Server 該安裝什麼</title><link>https://blog.yowko.com/dotnet-jenkins/</link><pubDate>Tue, 07 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-jenkins/</guid><description>全新的 Jenkins .NET Build Server 該安裝什麼 之前開發 Jenkins Job 都是在個人電腦上，建置完成後要移至新的 build server 時又遭遇一些問題，主因就是 build server 上沒有安裝 visual studio，所以紀</description></item><item><title>Visual Studio 2015 如何產生 NUnit 或 xUnit 的測試專案</title><link>https://blog.yowko.com/visual-studio-2015-use-nunit-xunit/</link><pubDate>Mon, 06 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-2015-use-nunit-xunit/</guid><description>Visual Studio 2015 如何產生 NUnit 或 xUnit 的測試專案 Visual Studio 2015 預設使用 MSTest 做為預設的 test framework 來產生測試專案，這篇筆記紀錄想要使用 NUnit 或是 xUnit test framework 時該安裝的套件 預設僅有 MSTest method 右鍵 &amp;ndash;&amp;gt;</description></item><item><title>為 NuGet 設定需驗證的 proxy</title><link>https://blog.yowko.com/nuget-proxy/</link><pubDate>Sun, 05 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/nuget-proxy/</guid><description>為 NuGet 設定需驗證的 proxy 公司電腦密碼三個月就需要更換一次，連帶著代理伺服器 (proxy) 設定也需要更新一輪，但這次卻有點不同 - 我的 Visual Studio 2015 無法從 NuGet 取得相關 pac</description></item><item><title>讓 EntityFramework 綁定自定 Enum 型別</title><link>https://blog.yowko.com/entityframework-enum-binding-class/</link><pubDate>Sun, 05 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/entityframework-enum-binding-class/</guid><description>讓 EntityFramework 綁定自定 Enum 型別 讓 EntityFramework 可以綁定自定 Enum 有兩個好處： 不用再自行轉換 int 跟 Enum 透過 scaffolding 可以直接綁定 dropdownlist，這讓我們在開發上節省不少工作</description></item><item><title>ASP.NET Identity 搭配 Entity Framework 啟用 Code First Migration</title><link>https://blog.yowko.com/aspnet-identity-entityframework-enable-codefirst-migration/</link><pubDate>Sat, 04 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-entityframework-enable-codefirst-migration/</guid><description>ASP.NET Identity 搭配 Entity Framework 啟用 Code First Migration ASP.NET Identity 是個方便的 member system, 原生就是搭配 Entity Framework 的 code first 機制，如果需要針對 ASP.NET Identity 做一些擴充，就需要啟用 Code First Migration，過去曾經做</description></item><item><title>ASP.NET MVC 如何 POST LIST 資料 2</title><link>https://blog.yowko.com/aspnet-mvc-post-list-2/</link><pubDate>Fri, 03 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-post-list-2/</guid><description>ASP.NET MVC 如何 POST LIST 資料 2 先前筆記 ASP.NET MVC 如何 POST LIST 資料 1 紀錄著該如何 post 單一資料屬性 list 到後端，而這篇將介紹該如何 post 多種資料屬性 list 到後端 定義資料欄位 欄位名稱</description></item><item><title>有 EnumDropDownListFor 為什麼還要客製 Enum to Dropdownlist ？！</title><link>https://blog.yowko.com/customize-enum-to-dropdownlist/</link><pubDate>Thu, 02 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/customize-enum-to-dropdownlist/</guid><description>有 EnumDropDownListFor 為什麼還要客製 Enum to Dropdownlist ？ enum 可以讓資料儲存更有效率(string &amp;ndash;&amp;gt; int), 擺脫字串比對時的不便(e.g. 手誤..)，也可以有效降低無用資料進入資料</description></item><item><title>ASP.NET MVC 如何 POST LIST 資料 1</title><link>https://blog.yowko.com/aspnet-mvc-post-list-1/</link><pubDate>Wed, 01 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-post-list-1/</guid><description>ASP.NET MVC 如何 POST LIST 資料 1 開發 ASP.NET MVC 網站表單時，不時會遇到需要 post list 資料的需求，功能雖然很容易，但每次遇到就重寫也不是辦法，順手紀錄一下也讓大家看看有沒</description></item><item><title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db</title><link>https://blog.yowko.com/net-framework-memorycache-2/</link><pubDate>Tue, 31 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/net-framework-memorycache-2/</guid><description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db 經過前一篇文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，文末也</description></item><item><title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法</title><link>https://blog.yowko.com/net-framework-memorycache-1/</link><pubDate>Mon, 30 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/net-framework-memorycache-1/</guid><description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 程式多多少少有些資料或設定是經常需要使用的，如果這些資料異動頻率低的特性就可以考慮將其加入 cach</description></item><item><title>Enum in C#</title><link>https://blog.yowko.com/enum-in-c-sharp/</link><pubDate>Sun, 29 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/enum-in-c-sharp/</guid><description>Enum in C# 最近跟同事討論 enum 相關應用時剛好同事問到 enum 可以用什麼型別，無奈學藝不精沒有答出完整正確答案XD，剛好趁這個機會順便整理一下。 基本特性 名稱</description></item><item><title>如何在 ASP.NET MVC 的 BaseController 或是 Controller 建構式中存取 ASP.NET Identity User 資料</title><link>https://blog.yowko.com/aspnet-mvc-access-identity-user-data-in-basecontroller/</link><pubDate>Sat, 28 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-access-identity-user-data-in-basecontroller/</guid><description>如何在 ASP.NET MVC 的 BaseController 或是 Controller 建構式中存取 ASP.NET Identity User 資料 從 ASP.NET MVC 5 開始預設使用 ASP.NET Identity ，全新的會員身份系統（membership system），雖然已經實際在幾</description></item><item><title>使用 Redis 當做 ASP.NET MVC 的 Session State Server</title><link>https://blog.yowko.com/redis-aspnet-mvc-session-state-server/</link><pubDate>Fri, 27 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/redis-aspnet-mvc-session-state-server/</guid><description>使用 Redis 當做 ASP.NET MVC 的 Session State Server Redis 是一套 Open Source ，Memory base 的 Key-Value 儲存資料庫，由於效能優異而受到重視。今天來看看如何使用 Redis 來當做 ASP.NET MVC 的 Session State Server. 安裝 Redis 下載 Redis</description></item><item><title>Windows Server 2016 無法安裝 Azure Service Fabric - Runtime 及 SDK</title><link>https://blog.yowko.com/windows-server-2016-install-azure-service-fabric-runtime/</link><pubDate>Thu, 26 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-install-azure-service-fabric-runtime/</guid><description>Windows Server 2016 無法安裝 Azure Service Fabric - Runtime 及 SDK 最近看了不少 Azure 服務的介紹以及應用，其中有一些內容提到 Azure Service Fabric，所以想要實際使用並測試看看，結果發現 Windows Server 2016</description></item><item><title>解決 SQL Server 安裝錯誤代碼 - 0x858C001B</title><link>https://blog.yowko.com/sql-server-0x858c001b/</link><pubDate>Thu, 26 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sql-server-0x858c001b/</guid><description>解決 SQL Server 安裝錯誤代碼 : 0x858C001B 雖然 DB 功能不怎樣，不過為了加速開發本機 SQL Server 到也安裝好幾次，今天遇到嚴重錯誤，紀錄一下原因 過去為了查問題方便 google 相關資訊</description></item><item><title>如何消除 IE 中 input 元件上的游標</title><link>https://blog.yowko.com/hide-cursor-on-ie-input/</link><pubDate>Wed, 25 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/hide-cursor-on-ie-input/</guid><description>如何消除 IE 中 input 元件上的游標 之前為了解決 HTML 檔案上傳元件在各個瀏覽器呈現效果不同的問題，所以手刻了上傳元件，詳細內容請參考 試著將不同瀏覽器的上傳</description></item><item><title>將不同瀏覽器的上傳元件(input type=&#39;file&#39;)樣式統一</title><link>https://blog.yowko.com/customize-file-input-style/</link><pubDate>Wed, 25 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/customize-file-input-style/</guid><description>將不同瀏覽器的上傳元件(input type=&amp;lsquo;file&amp;rsquo;)樣式統一 最近在公司舊系統上做了一個 Excel 上傳用來新增資料的功能</description></item><item><title>ASP.NET MVC 出現 HTTP Error 404.15 - Not Found</title><link>https://blog.yowko.com/aspnet-mvc-http-error-404-15-not-found/</link><pubDate>Fri, 13 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-http-error-404-15-not-found/</guid><description>ASP.NET MVC 出現 HTTP Error 404.15 - Not Found 開發 ASP.NET MVC 網站，偶爾會遇到 HTTP Error 404.15 - Not Found 的錯誤，&amp;rdquo;印象中&amp;rdquo; 造成的原因有好幾個，每次都因為趕著要完成沒</description></item><item><title>PowerShell 基本語法筆記</title><link>https://blog.yowko.com/powershell-basic-script/</link><pubDate>Thu, 12 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/powershell-basic-script/</guid><description>PowerShell 基本語法筆記 最近工作上的需要，用了 PowerShell 語法來處理，幾乎各式各樣的花式需求都可以達成，怪不得百敬老師非常推薦 PowerShell ，功能十分強大呀，只可惜學習資源</description></item><item><title>FB Messenger 回應 &#39;此用戶目前無法收到你的訊息&#39;</title><link>https://blog.yowko.com/fb-messenger-connot-receive-message/</link><pubDate>Wed, 11 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/fb-messenger-connot-receive-message/</guid><description>FB Messenger 回應 &amp;ldquo;此用戶目前無法收到你的訊息&amp;rdquo; 在測試 fb messenger 的過程中，為了不要讓其他人看到粉絲團，在一番胡亂設定下，竟然讓粉絲團</description></item><item><title>Visual Studio 建置前事件( Pre-build Event ) / 建置後事件( Post-build Event)</title><link>https://blog.yowko.com/visual-studio-pre-build-event-post-build-event/</link><pubDate>Tue, 10 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-pre-build-event-post-build-event/</guid><description>Visual Studio 建置前事件( Pre-build Event ) / 建置後事件( Post-build Event) 同事在被參考的專案中新增一個 config 檔案，並且設為 Copy always，設定後 config 檔案會在發行時自動加入 bin 資料夾，</description></item><item><title>Ping 不到 Windwos 10 的電腦？！</title><link>https://blog.yowko.com/ping-windwos-10-no-response/</link><pubDate>Mon, 09 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/ping-windwos-10-no-response/</guid><description>Ping 不到 Windwos 10 的電腦？！ Ping Windwos 10 的電腦無法正常回應？！ 今天在測試 IIS Express allow remote access 時，首先讓電腦可以找到對方，再來看網站可不可正常運作 結果 windows 10 ping windows 8.1 毫不意</description></item><item><title>為 SourceTree 設定需驗證的 proxy</title><link>https://blog.yowko.com/sourcetree-proxy/</link><pubDate>Sun, 08 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sourcetree-proxy/</guid><description>SourceTree 設定需驗證代理伺服器(proxy with authentication) SourceTree 是套 GUI 介面相較於 TortoiseGIT 有較多正面評價的 GIT 管理工具，相較於 TortoiseGIT 只有 Windows 版本，SourceTree 有 Windows 跟 MAC 版本，</description></item><item><title>為 Visual Studio Code (VSC) 設定需驗證的 proxy</title><link>https://blog.yowko.com/visual-studio-code-proxy/</link><pubDate>Sat, 07 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-code-proxy/</guid><description>為 Visual Studio Code (VSC) 設定需驗證的 proxy Visual Studio Code 自發佈以來，受到不少開發人員的喜愛，更難能可貴的是非微軟的開發人員也給予不錯的評價，也逐漸成為大家開發時不可或</description></item><item><title>字串處理速度比較：&#43; 運算符、string.Format、string.Concat、字串插值(String Interpolation)</title><link>https://blog.yowko.com/stringformat-stringconcat-stringintepolation/</link><pubDate>Thu, 05 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/stringformat-stringconcat-stringintepolation/</guid><description>字串處理速度比較：+ 運算符、string.Format、string.Concat、字串插值(String Interpolation) c# 6.0 多了一個方便處理字串的語法糖</description></item><item><title>找不到 dumpbin.exe (Visual Studio 2015)</title><link>https://blog.yowko.com/install-dumpbin/</link><pubDate>Thu, 05 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/install-dumpbin/</guid><description>找不到 dumpbin.exe (Visual Studio 2015) 關於 dumpbin 可以參考 MSDN：以下內容節錄至 MSDN Microsoft COFF 二進位檔案傾印工具 (DUMPBIN.EXE) 會顯示關於通用物件檔案格式 (Common Object File Format，COFF) 之二進</description></item><item><title>findstr - Windows 上的 grep (快速搜尋文件)</title><link>https://blog.yowko.com/findstr-grep-on-windows/</link><pubDate>Wed, 04 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/findstr-grep-on-windows/</guid><description>findstr - Windows 上的 grep (快速搜尋文件) 寫程式難免會遇到暴力搜尋的情境，在史上最強開發 IDE - Visual Studio 的幫助下，一向不是什麼難事，但如果遇到想要找文件時怎麼辦，</description></item><item><title>為 Charles 設定需驗證的 proxy</title><link>https://blog.yowko.com/charles-proxy/</link><pubDate>Tue, 03 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/charles-proxy/</guid><description>為 Charles 設定需驗證的 proxy Charles 是一套 HTTP proxy 、 HTTP monitor 、 Reverse Proxy 工具，可以讓開發人員補捉 http 封包來進行偵錯，在跨網路的開發上是必備的工具，功能上與 fiddler 非常類似。Cha</description></item><item><title>調整 Visual Studio MSBuild 專案建置輸出詳細等級(Output 視窗輸出資訊詳細等級)</title><link>https://blog.yowko.com/visual-studio-build-output-verbosity/</link><pubDate>Mon, 02 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-build-output-verbosity/</guid><description>調整 Visual Studio MSBuild 專案建置輸出詳細等級(Output 視窗輸出資訊詳細等級) 有時 Visual Studio 編譯專案失敗，但只有顯示發生錯誤並沒有其他資訊造成偵錯困難或者想要</description></item><item><title>你可能會想知道的關於 .PDB 檔的一些事</title><link>https://blog.yowko.com/about-pdb/</link><pubDate>Sun, 01 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/about-pdb/</guid><description>你可能會想知道的關於 .PDB 檔的一些事 .PDB 檔是什麼？ Program DataBase file 的縮寫 編譯過程中會產生 儲存所有模組 (module) 中符號跟位址的清單、檔案名稱、符號定義的行號 通常在編譯</description></item><item><title>為 Chocolatey 設定需驗證的 proxy</title><link>https://blog.yowko.com/chocolatey-proxy/</link><pubDate>Sat, 31 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/chocolatey-proxy/</guid><description>為 Chocolatey 設定需驗證的 proxy 身為一個 windows 開發人員是不是有時會想把 nuget 功能擴大到 Visual Studio 之外的地方呢？！像 NPM 一樣，只要有 command line 就可以安裝程式，還不限於 Visual Studio 的相關功</description></item><item><title>Windows OS 安裝 Jenkins 2.0 紀實</title><link>https://blog.yowko.com/jenkins2-on-windows/</link><pubDate>Fri, 30 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/jenkins2-on-windows/</guid><description>Windows OS 安裝 Jenkins 2.0 紀實 Jenkins 2.0 主要多了 Pipeline 特性，功能上跟 Workflow plgin 雷同，可以自行定義建置流程，也因為是由 Groovy 語法組成，讓整個建置 task 都可以被版控，而達成 infrastructure as code 目的</description></item><item><title>為 TortoiseGit 設定需驗證的 proxy</title><link>https://blog.yowko.com/tortoisegit-proxy/</link><pubDate>Fri, 30 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/tortoisegit-proxy/</guid><description>為 TortoiseGit 設定需驗證的 proxy Windows 下進行 Git 相關操作， TortoiseGit 是非常便捷的工具，不僅操作介面和熟悉的 TortoiseSVN 大致相同，加上大多數的 git 指令都有實作，絕大多情境都可以透過 TortoiseGit</description></item><item><title>啟用 Windows Server 2016 的無線網路</title><link>https://blog.yowko.com/windows-server-2016-enable-wifi/</link><pubDate>Wed, 28 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-enable-wifi/</guid><description>啟用 Windows Server 2016 的無線網路 Windows Server 2016 安裝好了，但卻沒有網路，原本以為新的作業系統都會內建網路卡驅動程式的，想不到竟然來了個網路無法用的狀況，只好從別台</description></item><item><title>關於清除 SQL Server 查詢快取的那些事</title><link>https://blog.yowko.com/sql-server-clear-cache/</link><pubDate>Tue, 27 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sql-server-clear-cache/</guid><description>關於清除 SQL Server 查詢快取的那些事 之前的筆記 試著學會看懂 SQL Server IO 統計資訊 中，有粗略地介紹 SQL Server IO 的統計資訊，其中 logical reads(邏輯讀取) 是我們用來進行</description></item><item><title>怎麼讓網站在輸入網址後按 tab 就可以直接搜尋網站內容(OpenSearch)</title><link>https://blog.yowko.com/opensearch/</link><pubDate>Mon, 26 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/opensearch/</guid><description>怎麼讓網站在輸入網址後按 tab 就可以直接搜尋網站內容(OpenSearch) 無意間注意到 Chrome 在網址列輸入 youtube 時會提示按下 tab, 按下 tab 後 網址列會出現 搜尋 YouTube</description></item><item><title>Git reset 的三種模式( soft mixed hard )比較</title><link>https://blog.yowko.com/git-reset-type/</link><pubDate>Sun, 25 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/git-reset-type/</guid><description>Git reset 的三種模式( soft mixed hard )比較 git reset 的三種主要模式(&amp;ndash;soft, &amp;ndash;mixed,&amp;ndash;hard)，一直困擾著我不太</description></item><item><title>decimal 在 C# 中的隱含轉換建構式</title><link>https://blog.yowko.com/decimal-constructor-with-char/</link><pubDate>Sat, 24 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/decimal-constructor-with-char/</guid><description>decimal 在 C# 中的隱含轉換建構式 最近有個工作項目是將原本 jsp 的金流相關功能，搬遷到 C# 上 重要性不言可喻，加下小弟寫 java 的時間並不長，還是寫 android，</description></item><item><title>為 fiddler 設定需驗證的 proxy</title><link>https://blog.yowko.com/fiddler-proxy/</link><pubDate>Fri, 23 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/fiddler-proxy/</guid><description>為 fiddler 設定需驗證的 proxy 不管是第三方介接或是 mobile device 開發，不免都會使用到外部 API，除了使用 postman 進行 API 內容確認外，fiddler 更是用來驗證執行內容與除</description></item><item><title>Vue.js 2.0 基礎 API 與 Directives 用法範例</title><link>https://blog.yowko.com/vue-js-2-example/</link><pubDate>Thu, 22 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/vue-js-2-example/</guid><description>Vue.js 2.0 基礎 API 與 Directives 用法範例 Vue.js 因為方便性及效能突出，備受矚目，雖然發展迅速，但整體的說明文件仍然相當不足，讓使用時的便利降低不少，相信過段時間一定</description></item><item><title>如何執行遠端 PowerShell Script</title><link>https://blog.yowko.com/run-remote-powershell/</link><pubDate>Wed, 21 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/run-remote-powershell/</guid><description>如何執行遠端 PowerShell Script 百敬老師之前在推廣活動上說，他認為 PowerShell 是近期最值得投資的技能，相信以他的身份地位及眼光，絕對是不會錯的，可惜的是一直沒有機會可</description></item><item><title>C# 解析 XML 字串(C# Parse XML string)</title><link>https://blog.yowko.com/c-sharp-parse-xml-string/</link><pubDate>Tue, 20 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/c-sharp-parse-xml-string/</guid><description>C# 解析 XML 字串(C# Parse XML string) 最近在介紹第三方金流服務時，廠商使用 XML 回傳，有段時間沒處理 XML，剛收到時還愣了一下，突然間想不起來該怎麼做，看來有</description></item><item><title>使用 ngrok 讓本機上的網站讓全世界看到</title><link>https://blog.yowko.com/ngrok/</link><pubDate>Mon, 19 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/ngrok/</guid><description>使用 ngrok 讓本機上的網站讓全世界看到 這個 title 會不會下得太過火？！ 回到主要目的，您一定有過這樣的經驗：想測試個功能，卻要大費周章地將程式部署到測試機</description></item><item><title>建立支援 UEFI 開機的 Windows Server 2016 安裝 USB</title><link>https://blog.yowko.com/windows-server-2016-uefi-usb/</link><pubDate>Sun, 18 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-uefi-usb/</guid><description>建立支援 UEFI 開機的 Windows Server 2016 安裝 USB 之前的筆記 建立可開機的 Windows Server 2016 安裝 USB，我們看了如何建立可開機的 USB。 而我自己在安裝 Windows Server 2016 過程中，卻是一開機就</description></item><item><title>將 Reveal.js 簡報匯出成 PDF</title><link>https://blog.yowko.com/revealjs-pdf/</link><pubDate>Sat, 17 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/revealjs-pdf/</guid><description>將 Reveal.js 簡報匯出成 PDF 之前筆記曾經紀錄到如何使用 Reveal.js 搭配 Markdown 語法來製作簡報，可以大幅減少製作簡報的時間成本，但簡報除了實際報告的呈現之外，另一個重點是</description></item><item><title>為 LINQPad 設定需驗證的 proxy</title><link>https://blog.yowko.com/linqpad-proxy/</link><pubDate>Fri, 16 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/linqpad-proxy/</guid><description>為 LINQPad 設定需驗證的 proxy 一開始接觸 LINQPad 是為了快速驗證 LINQ 語法的正確性，隨著版本更新 LINQPad 的功能已強大到驗證 LinQ 語法功能只是一小部份了，現在很多 C# 的驗證我自己</description></item><item><title>如何發行 Visual Studio 專案範本(project Template)</title><link>https://blog.yowko.com/issue-visual-studio-project-template/</link><pubDate>Thu, 15 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/issue-visual-studio-project-template/</guid><description>如何發行 Visual Studio 專案範本(project Template) 最近在學習 Microsoft Bot Framework 相關應用,其中官網上的 Startup 請大家下載一個 zip 放到指定的目錄(vs2015 放在 Documents\Visual Studio 2015\Templates\ProjectTemplates\Visual C#)，</description></item><item><title>增加 Release Mode(Release Build) 時的偵錯資訊</title><link>https://blog.yowko.com/release-mode-with-pdb/</link><pubDate>Wed, 14 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/release-mode-with-pdb/</guid><description>增加 Release Mode(Release Build) 時的偵錯資訊 相信大家都遇過 Release Build 的網站出現錯誤卻因為資訊過少而難以偵錯，但又不可能為了除錯把 Debug Build 的檔案丟上去 這個時候我們就可以將 build 完</description></item><item><title>試著看懂 SQL Server IO 統計資訊</title><link>https://blog.yowko.com/sql-server-io-statistics/</link><pubDate>Tue, 13 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sql-server-io-statistics/</guid><description>試著學會看懂 SQL Server IO 統計資訊 SQL Server IO 統計資訊是重要的效能調校依據，第一步就是嘗試看懂其中的涵意。 SET STATISTICS IO { ON | OFF } 用來開啟 IO 統計資訊 SET STATISTICS IO 設定動作</description></item><item><title>在Local Git Remote SVN(本機使用 Git，版控 Server 使用 SVN)</title><link>https://blog.yowko.com/local-git-remote-svn/</link><pubDate>Mon, 12 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/local-git-remote-svn/</guid><description>Local Git Remote SVN(本機使用 Git，版控 Server 使用 SVN) 大家一定或多或少感受到 Git 愈來愈多人採用，為了不輸別人(咦?)應該是為了體會 Git 的過人之處，最好的方式</description></item><item><title>在 ASP.NET MVC 5 預設專案範本中透過 ASP.NET Identity 由 Email 改用 Username 登入</title><link>https://blog.yowko.com/aspnet-identity-use-username-login/</link><pubDate>Sat, 10 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-use-username-login/</guid><description>在 ASP.NET MVC 5 預設專案範本中透過 ASP.NET Identity 由 Email 改用 Username 登入 ASP.NET MVC 5 使用新的會員系統 - ASP.NET Identity，預設的專案範本，幫我們建立了基本的會員系統，就是以A</description></item><item><title>讓 IIS EXPRESS 的網站允許外部連接(allow remote access)</title><link>https://blog.yowko.com/iis-express-allow-external-access/</link><pubDate>Fri, 09 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/iis-express-allow-external-access/</guid><description>讓 IIS EXPRESS 的網站允許外部連接(allow remote access) 讓 IIS EXPRESS 的網站可以被對本機以外提供服務 前端、行動裝置再加上愈來愈多的 IOT 相關應用出現，後端工程師最大的功</description></item><item><title>在網頁中按 tab 鍵，為什麼亂跳？！</title><link>https://blog.yowko.com/html-tab/</link><pubDate>Thu, 08 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/html-tab/</guid><description>在網頁中按 tab 鍵，為什麼亂跳？! 網路輸入資料也許每天都要發生個好幾次，在輸入表單上按下tab鍵讓輸入焦點可以轉移到下一個輸入框，需要修改時按下</description></item><item><title>為 npm 及 yarn 設定需驗證的 proxy</title><link>https://blog.yowko.com/npm-yarn-proxy/</link><pubDate>Wed, 07 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/npm-yarn-proxy/</guid><description>為 npm 及 yarn 設定需驗證的 proxy npm 錯誤訊息 使用 npm 安裝套件時出現 ETIMEDOUT 的錯誤，錯誤訊息中有提示可能是 proxy 的問題 yarn 錯誤訊息 yarn 安裝時 Error 是 ETIMEDOUT yarn 是使用 npm 設定 設定方式 command</description></item><item><title>建立可開機的 Windows Server 2016 安裝 USB</title><link>https://blog.yowko.com/windows-server-2016-bootable-usb/</link><pubDate>Tue, 06 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/windows-server-2016-bootable-usb/</guid><description>建立可開機的 Windows Server 2016 安裝 USB Windows Server 2016 有好多新功能想要試試(ex:docker、Nano Server、Web Proxy )，於是打算透過 USB 利用舊筆電來安裝測試</description></item><item><title>Facebook Messenger Bot 需要申請什麼呢？</title><link>https://blog.yowko.com/facebook-messenger-bot/</link><pubDate>Mon, 05 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/facebook-messenger-bot/</guid><description>Facebook Messenger Bot 需要申請什麼呢？ 要建立一個 facebook messenger 的 bot，在 Microsoft Bot Framework 的幫助下，只需幾個簡單設定，很快就能完成，不過申請的流程有點雜亂，特別紀錄一下備忘 建立</description></item><item><title>Visual Studio 的無痕模式</title><link>https://blog.yowko.com/visual-studio-safemode/</link><pubDate>Sun, 04 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-safemode/</guid><description>Visual Studio 的無痕模式 Visual Studio SafeMode (乾淨模式)，只載入預設環境及服務，不載入第三方套件 有遇過下面的狀況嗎？ 同樣的 OS 、同一個版本的 Visual Studio、同一個專案</description></item><item><title>如何開關 Visual Studio 中編輯視窗的提示底線(小蚯蚓 - squiggles)</title><link>https://blog.yowko.com/visual-studio-squiggles/</link><pubDate>Sat, 03 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-squiggles/</guid><description>如何開關 Visual Studio 中編輯視窗的提示底線(小蚯蚓 - squiggles) 前陣子因為換工作的關係，重新安裝了 Visual Stduio 2013，結果發現工作效率大大地降低，因為 我的 Visual Studio 為什麼沒</description></item><item><title>用 Markdown 與 Reveal.js 來製作簡報</title><link>https://blog.yowko.com/markdown-revealjs/</link><pubDate>Fri, 02 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/markdown-revealjs/</guid><description>用 Markdown 與 Reveal.js 來製作簡報 相信很多人對於 Markdown 的簡易語法愛不釋手，而 Reveal.js 是一套可以使用 Markdown 語法以 HTML 呈現的簡報框架 透過將 Markdown 與 Reveal.js 結合就可以讓我們在學習過程中所累</description></item><item><title>如何在 ASP.NET MVC 專案中使用 StackExchange.Exceptional</title><link>https://blog.yowko.com/aspnet-mvc-stackexchange-exceptional/</link><pubDate>Thu, 01 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-stackexchange-exceptional/</guid><description>如何在 ASP.NET MVC 專案中使用 StackExchange.Exceptional 一套由 Stack Exchange 與 Stack Overflow 開發於內部使用的 exception 處理套件,可用在 web 與 console 專案上 受 ELMAH 啟發，但因 ELMAH 不適用於 Stack Exchange 與 Stack Overflow 在發生網路相關事件時會</description></item></channel></rss>