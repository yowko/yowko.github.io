<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>套件 on Yowko&#39;s Notes</title><link>https://blog.yowko.com/tags/%E5%A5%97%E4%BB%B6/</link><description>Recent content in 套件 on Yowko&#39;s Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 01 Jan 2019 00:42:34 +0800</lastBuildDate><atom:link href="https://blog.yowko.com/tags/%E5%A5%97%E4%BB%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>[Benchmark] DB 物件對映至 C# class 的做法</title><link>https://blog.yowko.com/object-relation-mapping/</link><pubDate>Tue, 01 Jan 2019 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/object-relation-mapping/</guid><description>Benchmark : DB 物件對映至 C# class 的做法 跟同事討論到 ORM 的優劣，當然各有擁護的對象，但相同的目標卻很一致：速度快，而在 速度快 這個基本前提下，我個人覺得還有討</description></item><item><title>為 Hugo 加上 InstantClick</title><link>https://blog.yowko.com/hugo-js/</link><pubDate>Thu, 01 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/hugo-js/</guid><description>為 Hugo 加上 InstantClick 前幾天 Larry 哥閒聊問到 Hugo 在引用其他 js 套件上的支援度時舉了 InstantClick.js 的例子，無奈小弟書讀得不夠多，沒用過 InstantClick.js，Larr</description></item><item><title>如何使用 Blogger APIs Client Library for .NET 匯出 Blogger 文章</title><link>https://blog.yowko.com/dotnet-blogger-library/</link><pubDate>Sat, 15 Sep 2018 18:44:34 +0800</pubDate><guid>https://blog.yowko.com/dotnet-blogger-library/</guid><description>如何使用 Blogger APIs Client Library for .NET 匯出 Blogger 文章 雖然剛開始決定為自己的開發經驗做些筆記時就已經知道 Blogger 的一些缺點：無法為自訂 domain 加上 https (嘗試過使用 CloudFare ，直到幾個月前</description></item><item><title>讓 NLog 發送 Mail</title><link>https://blog.yowko.com/nlog-mail/</link><pubDate>Tue, 17 Jul 2018 23:03:00 +0800</pubDate><guid>https://blog.yowko.com/nlog-mail/</guid><description>讓 NLog 發送 Mail 曾經在之前筆記 讓 log4net 收到指定錯誤 Level 發送 mail 紀錄到透過 log4net 的 appender 設定讓出現指定 log Level 時自動發送 mail，當時就覺得 NLog 在設定的便利性上與文件的可</description></item><item><title>C# 連線 Oracle 出現 ORA-01000: maximum open cursors exceeded</title><link>https://blog.yowko.com/oracle-maximum-open-cursors-exceeded/</link><pubDate>Thu, 07 Jun 2018 23:52:00 +0800</pubDate><guid>https://blog.yowko.com/oracle-maximum-open-cursors-exceeded/</guid><description>C# 連線 Oracle 出現 ORA-01000: maximum open cursors exceeded 同事負責的系統在 production 環境出現異常問題：原本系統已經運作了一段時間，某天突然出現 ORA-01000: maximum open cursors exceeded 造成相關功能無法運作，經過 IIS reset 後</description></item><item><title>讓 log4net 收到指定錯誤 Level 發送 mail</title><link>https://blog.yowko.com/log4net-mail/</link><pubDate>Sun, 27 May 2018 02:02:00 +0800</pubDate><guid>https://blog.yowko.com/log4net-mail/</guid><description>讓 log4net 收到指定錯誤 Level 發送 mail 平常我自己本身慣用的 log 套件是 nlog，主要原因是因為設定相對較簡潔，加上多年前看過的效能比較 - Benchmarking 5 popular .NET logging libraries 結果是 nlog 效</description></item><item><title>C# 使用 Dapper 連線 DB 時指定逾時時間 (timeout)：0x80004005</title><link>https://blog.yowko.com/dapper-timeout/</link><pubDate>Sun, 22 Apr 2018 23:34:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-timeout/</guid><description>C# 使用 Dapper 連線 DB 時指定逾時時間 (timeout)：0x80004005 最近專案在 production 環境執行時常常遇到 [Win32Exception (0x80004005): The wait operation timed out]，造成程式未完整執行，</description></item><item><title>decimal , double , float 輸出 json 的格式問題</title><link>https://blog.yowko.com/decimal-double-float-json-format/</link><pubDate>Sun, 22 Apr 2018 17:42:00 +0800</pubDate><guid>https://blog.yowko.com/decimal-double-float-json-format/</guid><description>decimal , double , float 輸出 json 的格式問題 之前筆記 decimal 屬性輸出 JSON 時指定的格式問題 提到在專案中因為系統介接需要統一 decimal 小數位數，過程中也才發現 json.net 在輸出沒有小數的 decimal</description></item><item><title>decimal 屬性輸出 JSON 時指定的格式問題</title><link>https://blog.yowko.com/decimal-json-digital/</link><pubDate>Sat, 21 Apr 2018 00:14:00 +0800</pubDate><guid>https://blog.yowko.com/decimal-json-digital/</guid><description>decimal 屬性輸出 JSON 時指定的格式問題 這是之前專案遇到的狀況：輸出 金額 時只需處理到小數點下二位。既然是 金額，為了避免精準度造成的誤差都會選用 deciaml 資料類型</description></item><item><title>使用 Topshelf 搭配 Quartz.Net 撰寫 Windows Service 排程執行工作</title><link>https://blog.yowko.com/topshelf-quartznet-windows-service/</link><pubDate>Thu, 12 Apr 2018 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/topshelf-quartznet-windows-service/</guid><description>使用 Topshelf 搭配 Quartz.Net 撰寫 Windows Service 排程執行工作 排程工作在許多系統中都是必備組件，常用來處理非立即性作業(e.g.：每日交易結清，發送電子報&amp;hellip;</description></item><item><title>使用 RedLock.net 搭配 redis 達成分散式 Lock</title><link>https://blog.yowko.com/redlocknet-redis-lock/</link><pubDate>Tue, 10 Apr 2018 01:31:00 +0800</pubDate><guid>https://blog.yowko.com/redlocknet-redis-lock/</guid><description>使用 RedLock.net 搭配 redis 達成分散式 Lock RedLock.net 是前兩個禮拜從安德魯大大的 架構面試題 #1, 線上交易的正確性 一文中看到使用 redis 搭配 RedLock 演算法製造出分散式鎖定 (Distributed locks) 的套件，也是</description></item><item><title>C# DateTime 轉 JavaScript Date (依使用者偏好區域來顯示時間)</title><link>https://blog.yowko.com/csharp-datetime-javascript-date/</link><pubDate>Mon, 05 Feb 2018 00:17:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-datetime-javascript-date/</guid><description>C# DateTime 轉 JavaScript Date (依使用者偏好區域來顯示時間) 同事負責的頁面會有不同時區的 user 來瀏覽，時間類型的顯示會直接影響 user 的使用者體驗，尤其是各式公告跟有時效</description></item><item><title>NLog 設定 Rule 僅包含部份 Logger</title><link>https://blog.yowko.com/nlog-rule-logger/</link><pubDate>Mon, 22 Jan 2018 02:07:00 +0800</pubDate><guid>https://blog.yowko.com/nlog-rule-logger/</guid><description>NLog 設定 Rule 僅包含部份 Logger log 是系統正式上線後，少數可以用來協助 debug 的資訊，而 debug 的難易度與解決問題的速度也就跟著 log 的品質而有極大的差異。 今天想要紀錄最</description></item><item><title>使用 Moment.js 來簡化 JavaScript 的時間處理</title><link>https://blog.yowko.com/moment-js/</link><pubDate>Sat, 20 Jan 2018 22:22:00 +0800</pubDate><guid>https://blog.yowko.com/moment-js/</guid><description>使用 Moment.js 來簡化 JavaScript 的時間處理 專案的前端頁面在 user 要求加速整個流程下，使用了一套 library - Date Range Picker 方便使用者可以在同一個 input 中同時選擇 start date 與 end date 也讓整體操作獲</description></item><item><title>Dapper 讀取 Oracle 資料 - 更新版 (使用 Oracle.ManagedDataAccess)</title><link>https://blog.yowko.com/dapper-oracle-manageddataaccess/</link><pubDate>Sun, 14 Jan 2018 17:20:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-oracle-manageddataaccess/</guid><description>Dapper 讀取 Oracle 資料 - 更新版 (使用 Oracle.ManagedDataAccess) 之前筆記 Dapper 讀取 Oracle 資料 提到使用 x64 版本的 oracle client - Oracle.ManagedDataAccess 無法成功連線，這句話是錯誤的，一來 Oracle.ManagedDataAccess 本身是 32位元，另外就是 Oracle.ManagedDataAccess 絕對可</description></item><item><title>透過 ProGet 取得官方 NuGet 套件</title><link>https://blog.yowko.com/proget-nuget-connector/</link><pubDate>Sat, 13 Jan 2018 23:57:00 +0800</pubDate><guid>https://blog.yowko.com/proget-nuget-connector/</guid><description>透過 ProGet 取得官方 NuGet 套件 之前筆記 將 NuGet Package 發行至 ProGet 曾經介紹到如何將內部使用的 NuGet package 發行至內部 NuGet server：ProGet 上，在試行一段時間後決定擴大範</description></item><item><title>在 Visual Studio 中使用 WebPack 來編譯 Vue.js</title><link>https://blog.yowko.com/visual-studio-webpack-vuejs/</link><pubDate>Mon, 13 Nov 2017 02:45:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-webpack-vuejs/</guid><description>在 Visual Studio 中使用 WebPack 來編譯 Vue.js 筆記 使用 Webpack 來編譯 Vue.js Single File Components (.vue) 紀錄著使用 webpack 來編譯 .vue 檔案的做法，而我平常主要還是使用 Visual Studio 開發，所以還是得將 WebPack 及 Visual Studio 做個整合，</description></item><item><title>使用 Webpack 來編譯 Vue.js Single File Components (.vue)</title><link>https://blog.yowko.com/webpack-vue-file/</link><pubDate>Sun, 12 Nov 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/webpack-vue-file/</guid><description>使用 Webpack 來編譯 Vue.js Single File Components (.vue) 最近因為新專案的部份頁面有較多的互動功能，所以打算透過 Vue.js 來處理，其中某些功能在多個頁面間可以共用，就使用了 Vue.js 的 Single File Components (.vue)</description></item><item><title>Visual Studio 2015 無法新增專案？！</title><link>https://blog.yowko.com/visual-studio-cannot-add-project/</link><pubDate>Thu, 02 Nov 2017 23:18:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-cannot-add-project/</guid><description>Visual Studio 2015 無法新增專案？！ 專案如火如塗地進行中，要加入的 component 正以飛快速度被建立出來，想不到此時卻又遇到人品大爆發，我居然無法在方案 (solution) 中新增專案 (p</description></item><item><title>Visual Studio JavaScript 編輯視窗出現 ECMAScript 錯誤提示</title><link>https://blog.yowko.com/visual-studio-ecmascript-level/</link><pubDate>Sat, 28 Oct 2017 08:47:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-ecmascript-level/</guid><description>Visual Studio JavaScript 編輯視窗出現 ECMAScript 錯誤提示 因為要要處理前端頁面效果，在參考網路分享的 Vue.js 套件時，一直出現 ECMAScript 錯誤提示，雖然不影響實際功能執行，但編輯畫面上一直</description></item><item><title>設定 ASP.NET WebAPI OData 的 Swagger</title><link>https://blog.yowko.com/aspnet-webapi-odata-swagger/</link><pubDate>Sun, 15 Oct 2017 17:45:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-webapi-odata-swagger/</guid><description>設定 ASP.NET WebAPI OData 的 Swagger Swagger 的強大功能不需要再重複強調，重要性在團隊開發上已經扮演著不可或缺的地位，常常在建立 Web API 專案後就會順手將 swagger 設定好，而在以 Web API 為</description></item><item><title>透過 Chrome Extension 將靜態網頁開啟成網站</title><link>https://blog.yowko.com/web-server-for-chrome/</link><pubDate>Mon, 04 Sep 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/web-server-for-chrome/</guid><description>透過 Chrome Extension 將靜態網頁開啟成網站 這個好用的 Chrome 套件是在參加 Kuro 大的 Vue.js 課程時，由 Kuro 介紹的開發輔助工具，看到 demo 時驚為天人 也太好用了吧，所以特別筆記一下 以</description></item><item><title>C# 連線至 RabbitMQ Cluster - 使用 RabbitMQ .Net Client 及 EasyNetQ</title><link>https://blog.yowko.com/dotnet-client-rabbitmq-cluster/</link><pubDate>Sun, 20 Aug 2017 01:26:00 +0800</pubDate><guid>https://blog.yowko.com/dotnet-client-rabbitmq-cluster/</guid><description>C# 連線至 RabbitMQ Cluster - 使用 RabbitMQ .Net Client 及 EasyNetQ 之前文章 如何在 Windwos 上設定 RabbitMQ Cluster 介紹到透過建立 cluster 的方式來讓 RabbtMQ 可以擁有 HA ，而在 queue 及 message 完整性方面則利用 mirrored queue 的機制來處理，詳</description></item><item><title>專案間如何共用 config 設定 - 使用 MSBuild Community Tasks</title><link>https://blog.yowko.com/config-msbuild-community-tasks/</link><pubDate>Sun, 13 Aug 2017 23:28:00 +0800</pubDate><guid>https://blog.yowko.com/config-msbuild-community-tasks/</guid><description>專案間如何共用 config 設定 - 使用 MSBuild Community Tasks 之前文章 專案間如何共用 config 設定 - 使用 MSBuildExtensionPack 提供跨專案使用相同 config 設定值的概念，也介紹了透過 MSBuildExtensionPack 實作的細節 今天則要介紹另</description></item><item><title>專案間如何共用 config 設定 - 使用 MSBuildExtensionPack</title><link>https://blog.yowko.com/shared-config/</link><pubDate>Sun, 13 Aug 2017 00:24:00 +0800</pubDate><guid>https://blog.yowko.com/shared-config/</guid><description>專案間如何共用 config 設定 - 使用 MSBuildExtensionPack 以往專案公司的經驗中，較常見情境是一個專案中可能會針對不同的環境建立不同的組態設定( configuration )，在發行 (publish) 時透過 configuration transformation 來將</description></item><item><title>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 (使用 JsonSerializer)</title><link>https://blog.yowko.com/jsonnet-jsonserializer-initial-value/</link><pubDate>Wed, 02 Aug 2017 23:42:00 +0800</pubDate><guid>https://blog.yowko.com/jsonnet-jsonserializer-initial-value/</guid><description>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 (使用 JsonSerializer) 之前文章 客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 介紹到可以在使用自訂 JsonConverter 在將物件轉為 json 前先進行初始化 後來同事在使用自訂 JsonConverter 時</description></item><item><title>從 Json String 中取得物件的屬性值</title><link>https://blog.yowko.com/jobject-parse/</link><pubDate>Sun, 30 Jul 2017 23:55:00 +0800</pubDate><guid>https://blog.yowko.com/jobject-parse/</guid><description>從 Json String 中取得物件的屬性值 之前文章 使用 string 建立 instance 及反序列化 json 為 class 介紹到如何使用 string 產生 instance 及反序列化 json 為 class，後來同事看到寫法建議可以用 json.net 的 JObject.Parse</description></item><item><title>開啟 Web Api Url 時直接導向 Swagger 頁面</title><link>https://blog.yowko.com/web-api-default-open-swagger/</link><pubDate>Mon, 24 Jul 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/web-api-default-open-swagger/</guid><description>開啟 Web Api Url 時直接導向 Swagger 頁面 文章 建立 ASP.NET Web API 專案的幾種方式 介紹到選擇適合的專案範本來建立 ASP.NET Web Api 專案以避免預設安裝過多用不到的套件，其中除了完整安</description></item><item><title>設定 NuGet Package 安裝時自動加入 Config 區段 (For NuGet feed v2)</title><link>https://blog.yowko.com/nuget-add-config-for-v2/</link><pubDate>Sun, 23 Jul 2017 18:16:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-add-config-for-v2/</guid><description>設定 NuGet Package 安裝時自動加入 Config 區段 (For NuGet feed v2) 部份 NuGet Package 的功能是相依在 config 的設定上，有些設定是 package 正常運作的基本條件，有些設定則是保留給使用者的彈性調整空間</description></item><item><title>Jenkins 自動 Publish NuGet Package</title><link>https://blog.yowko.com/jenkins-publish-nuget-package/</link><pubDate>Thu, 20 Jul 2017 23:49:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-publish-nuget-package/</guid><description>Jenkins 自動 Publish NuGet Package 公司專案共用元件正在逐步由直接 add dll reference 改為使用 NuGet 管理，所以有不少專案需要打包成 NuGet Package，原本都是透過 NuGet Package Explorer 這個 GUI 軟體來打包</description></item><item><title>使用 Common.Logging 同時將 log 寫至多個 Logging Framework</title><link>https://blog.yowko.com/common-logging-multiple-logging-framework/</link><pubDate>Sat, 15 Jul 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/common-logging-multiple-logging-framework/</guid><description>使用 Common.Logging 同時將 log 寫至多個 Logging Framework 之前文章 使用 Common.Logging 搭配 NLog 及 Log4Net 介紹到透過 Common.Logging 可以使用一致的 log 語法將 log 轉由不同 logging framework 處理，在不同專案間就可以使用統一 log 語法而且</description></item><item><title>使用 Common.Logging 搭配 NLog 及 log4net</title><link>https://blog.yowko.com/common-logging/</link><pubDate>Fri, 14 Jul 2017 23:52:00 +0800</pubDate><guid>https://blog.yowko.com/common-logging/</guid><description>使用 Common.Logging 搭配 NLog 及 log4net 在新專案中，同事打算統一 log 的紀錄方式，所以繼承了 log4net 並在 log 的 api 上加入自訂行為，讓後續 log 餵進 ELK 時可以比較順利 出發點當然是為了日後</description></item><item><title>使用 NuGet Package Explorer 建立 NuGet 套件</title><link>https://blog.yowko.com/nuget-package-explorer/</link><pubDate>Wed, 12 Jul 2017 23:11:00 +0800</pubDate><guid>https://blog.yowko.com/nuget-package-explorer/</guid><description>使用 NuGet Package Explorer 建立 NuGet 套件 公司許多專案中有不少底層功能是可以共用的(ex. 資料庫相關操作、redis 相關操作、web request、&amp;hellip</description></item><item><title>自建 NuGet Server</title><link>https://blog.yowko.com/self-host-nuget-server/</link><pubDate>Tue, 11 Jul 2017 22:07:00 +0800</pubDate><guid>https://blog.yowko.com/self-host-nuget-server/</guid><description>自建 NuGet Server 自從 Visual Studio 2010 第一次使用 NuGet 後，開發生涯就此改變了，簡易的套件安裝及管理方式，讓開發人員不需要在自行保留需要的 dll，需要的 config 也可以透過 NuGet</description></item><item><title>如何 Mock Private Method 的回傳值 - 使用 JuskMock</title><link>https://blog.yowko.com/mock-private-method-juskmock/</link><pubDate>Mon, 10 Jul 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/mock-private-method-juskmock/</guid><description>如何 Mock Private Method 的回傳值 - 使用 JuskMock 前一篇筆記 使用 Moq 來 Mock protected Method 文末心得中提到傳言中付費的 mock framewrok 號稱無論是什麼狀況都能 mock，想說改天要找個機會來測試一下</description></item><item><title>使用 Moq 來 Mock protected Method</title><link>https://blog.yowko.com/moq-mock-protected-method/</link><pubDate>Sun, 09 Jul 2017 20:20:00 +0800</pubDate><guid>https://blog.yowko.com/moq-mock-protected-method/</guid><description>使用 Moq 來 Mock protected Method 跟同事討論到在進行單元測試時，目標方法使用到其他非 public 方法，而且想要 mock 這個方法的回傳值該怎麼做？ 其實這個問題我之前也思考過，一直</description></item><item><title>讓 RabbitMQ 支援延遲發送訊息</title><link>https://blog.yowko.com/rabbitmq-delayed-message/</link><pubDate>Sat, 08 Jul 2017 18:47:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-delayed-message/</guid><description>讓 RabbitMQ 支援延遲發送訊息 一般情況下，Message Queue 都是將 message 由 producer 送給 broker 後接著就由 consumer dequeue 進行處理，常見的額外需求是 message 有不同的 priority，但這次</description></item><item><title>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性</title><link>https://blog.yowko.com/custom-josnconverter-initial-valuetype/</link><pubDate>Fri, 07 Jul 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/custom-josnconverter-initial-valuetype/</guid><description>客製 Json.NET 的 JsonConverter - 自動 Initial Value Type 屬性 同事負責的專案原本使用 XML 做為資料傳遞的媒介，為了縮小網路傳輸封包，所以改用 json，而這個動作讓原本正常運行的功能</description></item><item><title>StackExchange 連線 Redis 出現 Timeout</title><link>https://blog.yowko.com/stackexchange-redis-timeout/</link><pubDate>Thu, 29 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/stackexchange-redis-timeout/</guid><description>StackExchange 連線 Redis 出現 Timeout 同事反應出現大量 Redis 連線 Timeout 的錯誤，因為 Redis 上存放 Sessoion 跟許多 config cache 資料，如果 Redis 異常會嚴重影響線上服務，所以立馬需要進行除錯 首先使用 Redis-cli 確認</description></item><item><title>餵資料集給 SpecFlow 來執行測試及驗證</title><link>https://blog.yowko.com/specflow-outline/</link><pubDate>Wed, 21 Jun 2017 23:16:00 +0800</pubDate><guid>https://blog.yowko.com/specflow-outline/</guid><description>餵資料集給 SpecFlow 來執行測試及驗證 之前文章 使用 SpecFlow 建立人語化的單元測試 已經大致了解如何使用近似人類語言來描述需求跟寫測試案例，透過這樣的方式不僅讓需</description></item><item><title>使用 SpecFlow 建立人語化的單元測試</title><link>https://blog.yowko.com/specflow/</link><pubDate>Tue, 13 Jun 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/specflow/</guid><description>使用 SpecFlow 建立人語化的單元測試 如何寫出良好可讀性的程式是個持續性的挑戰，也可能是永無止盡的挑戰，而測試程式雖然目的是測試，但終究是程式，也需要具</description></item><item><title>使用 PageObject(Page Object Pattern) 建立物件導向的 Web UI 測試程式</title><link>https://blog.yowko.com/pageobject-web-ui-test/</link><pubDate>Fri, 09 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/pageobject-web-ui-test/</guid><description>使用 PageObject(Page Object Pattern) 建立物件導向的 Web UI 測試程式 從 使用 Selenium IDE 與 C# 做 Web UI 測試 介紹如何使用 Selenium IDE 錄製網頁操作再轉換為 c# 測試案例，讓測試程式也能觸發 Web UI 的測試驗證</description></item><item><title>使用 Fluent Automation 與 Selenium 打造語意化 Web UI 測試程式</title><link>https://blog.yowko.com/fluent-automation-selenium-web-ui-test/</link><pubDate>Thu, 08 Jun 2017 00:14:00 +0800</pubDate><guid>https://blog.yowko.com/fluent-automation-selenium-web-ui-test/</guid><description>使用 Fluent Automation 與 Selenium 打造語意化 Web UI 測試程式 之前文章 使用 Selenium IDE 與 C# 做 Web UI 測試，介紹了如何使用 Selenium IDE 錄製網頁操作並將過程 export 成 c# 測試程式，雖然很方便但 Selenium api 太像</description></item><item><title>製作 Selenium IDE 的 xUnit.net 2.0 版 Formatter</title><link>https://blog.yowko.com/selenium-ide-xunit-formatter/</link><pubDate>Wed, 07 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/selenium-ide-xunit-formatter/</guid><description>製作 Selenium IDE 的 xUnit.net 2.0 版 Formatter TDD 課程中，91 大介紹了 Selenium IDE 的用法，我的心得筆記請參考 使用 Selenium IDE 與 C# 做 Web UI 測試，因為 Selenium IDE 預設只支援 Nunit，所以 91 大動手做了</description></item><item><title>使用 .NET client 連線至 RabbitMQ 收發訊息</title><link>https://blog.yowko.com/rabbitmq-client-send-consume/</link><pubDate>Mon, 22 May 2017 23:35:00 +0800</pubDate><guid>https://blog.yowko.com/rabbitmq-client-send-consume/</guid><description>使用 .NET client 連線至 RabbitMQ 收發訊息 繼之前 使用 RabbitMQ.Client 連線至 RabbitMQ 出現 BrokerUnreachableException 問題解決後，終於又可以繼續測試 RabbitMQ 了，要比較的不僅僅是 mq 的能力，也要比較使用上的便利性及周邊</description></item><item><title>如何使用 StackExchange.Redis 取得所有 keys 值與指定 pattern 的 key</title><link>https://blog.yowko.com/stackexchange-redis-get-all-keys-or-pattern/</link><pubDate>Thu, 27 Apr 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/stackexchange-redis-get-all-keys-or-pattern/</guid><description>如何使用 StackExchange.Redis 取得所有 keys 值與指定 pattern 的 key 同事因專案需要打算將 redis 資料與 db 資料進行比對，為了要比對資料，首先就是將 redis 資料導出，所以需要取得所有 keys</description></item><item><title>如何在 Visual Studio Code 中快速使用 Markdown 建立簡報</title><link>https://blog.yowko.com/visual-studio-code-markdown-slide/</link><pubDate>Mon, 24 Apr 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-code-markdown-slide/</guid><description>如何在 Visual Studio Code 中快速使用 Markdown 建立簡報 今天看到保哥分享 vscode-reveal 套件可以直接在 visual studio code 中使用 reveal.js 來開啟 markdown 檔做成簡報，感覺很像之前文章 用 Markdown 與 Reveal.js 來製作簡報 分享的做</description></item><item><title>如何在 debug 時使用對應組態設定的 web.config</title><link>https://blog.yowko.com/webconfig-transform-when-debug/</link><pubDate>Sat, 22 Apr 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/webconfig-transform-when-debug/</guid><description>如何在 debug 時使用對應組態設定的 web.config 自從 web.config transform (可以依不同的組態設定 e.g.: debug、release 設定不同的值) 的功能出現後，在不同環境間的變數處理變</description></item><item><title>如何使用 StackExchange.Redis 配合 Sentinel 或是 Cluster 達到高可用性</title><link>https://blog.yowko.com/stackexchange-redis-sentinel-cluster/</link><pubDate>Sat, 25 Mar 2017 02:44:34 +0800</pubDate><guid>https://blog.yowko.com/stackexchange-redis-sentinel-cluster/</guid><description>如何使用 StackExchange.Redis 配合 Sentinel 或是 Cluster 達到高可用性 前陣子公司其他 team 的同事遇到了 Redis 的 production issue，詳細情形我不好多問，大意是懷疑 Redis 異常，造成部份服務無法正常運</description></item><item><title>將 Reveal.js 簡報匯出成 PDF</title><link>https://blog.yowko.com/revealjs-pdf/</link><pubDate>Sat, 17 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/revealjs-pdf/</guid><description>將 Reveal.js 簡報匯出成 PDF 之前筆記曾經紀錄到如何使用 Reveal.js 搭配 Markdown 語法來製作簡報，可以大幅減少製作簡報的時間成本，但簡報除了實際報告的呈現之外，另一個重點是</description></item><item><title>用 Markdown 與 Reveal.js 來製作簡報</title><link>https://blog.yowko.com/markdown-revealjs/</link><pubDate>Fri, 02 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/markdown-revealjs/</guid><description>用 Markdown 與 Reveal.js 來製作簡報 相信很多人對於 Markdown 的簡易語法愛不釋手，而 Reveal.js 是一套可以使用 Markdown 語法以 HTML 呈現的簡報框架 透過將 Markdown 與 Reveal.js 結合就可以讓我們在學習過程中所累</description></item><item><title>如何在 ASP.NET MVC 專案中使用 StackExchange.Exceptional</title><link>https://blog.yowko.com/aspnet-mvc-stackexchange-exceptional/</link><pubDate>Thu, 01 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/aspnet-mvc-stackexchange-exceptional/</guid><description>如何在 ASP.NET MVC 專案中使用 StackExchange.Exceptional 一套由 Stack Exchange 與 Stack Overflow 開發於內部使用的 exception 處理套件,可用在 web 與 console 專案上 受 ELMAH 啟發，但因 ELMAH 不適用於 Stack Exchange 與 Stack Overflow 在發生網路相關事件時會</description></item></channel></rss>