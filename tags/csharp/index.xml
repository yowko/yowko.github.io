<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csharp on Yowko&#39;s Notes</title>
    <link>https://blog.yowko.com/tags/csharp/</link>
    <description>Recent content in csharp on Yowko&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 07 Jul 2019 21:30:00 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yowko.com/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gRPC stream 如何傳送單一大物件</title>
      <link>https://blog.yowko.com/grpc-stream-big-object/</link>
      <pubDate>Sun, 07 Jul 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/grpc-stream-big-object/</guid>
      <description>gRPC stream 如何傳送單一大物件 之前筆記 C# 搭配 gRPC 中使用 stream RPC 提到為了對於較大資料量以及即時性資料內容，可以透過 gRPC 的 stream RPC 來處理，不過官方範例是用在傳送 repeated 內</description>
    </item>
    
    <item>
      <title>C# 中使用 Protocol Buffers 協定來序列化與反序列化物件</title>
      <link>https://blog.yowko.com/csharp-protobuf-serialize-deserialize/</link>
      <pubDate>Sat, 06 Jul 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/csharp-protobuf-serialize-deserialize/</guid>
      <description>C# 中使用 Protocol Buffers 協定來序列化與反序列化物件 專案上剛好需要將 object 進行序列化，過去常用的方式都是序列為 json，後來同事覺得既然都使用 protobuf 了，為什麼不直</description>
    </item>
    
    <item>
      <title>gRPC 出現 `8 RESOURCE_EXHAUSTED` 錯誤</title>
      <link>https://blog.yowko.com/grpc-8-resource-exhausted/</link>
      <pubDate>Sun, 23 Jun 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/grpc-8-resource-exhausted/</guid>
      <description>gRPC 出現 8 RESOURCE_EXHAUSTED 錯誤 隨著系統一步步成形，資料量也愈來愈大，在原本只是先求功能正常而未進行資料分頁的功能逐漸露出原型，今天就來筆記 gRPC 在傳送龐大資料可</description>
    </item>
    
    <item>
      <title>嘗試為gRPC 中的 stream RPC 加上 Unit Test</title>
      <link>https://blog.yowko.com/csharp-grpc-stream-unit-test/</link>
      <pubDate>Wed, 19 Jun 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/csharp-grpc-stream-unit-test/</guid>
      <description>嘗試為gRPC 中的 stream RPC 加上 Unit Test 之前筆記 C# 搭配 gRPC 中使用 stream RPC 紀錄到在 gRPC 中使用 stream RPC 的操作語法，但實際應用在專案上時卻卡關，主因是單元測試出現錯誤，</description>
    </item>
    
    <item>
      <title>C# 搭配 gRPC 中使用 stream RPC</title>
      <link>https://blog.yowko.com/csharp-grpc-stream/</link>
      <pubDate>Sun, 16 Jun 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/csharp-grpc-stream/</guid>
      <description>C# 搭配 gRPC 中使用 stream RPC gRPC 允許使用四種則型的 service 方法： 簡單 RPC (simple RPC) 主機端串流 RPC (server-side streaming RPC) 用戶端串流 RPC (client-side streaming RPC) 雙向串流 RPC (bidirectional streaming RPC) 過去的筆記都是使用 簡單 RPC (simple RPC</description>
    </item>
    
  </channel>
</rss>