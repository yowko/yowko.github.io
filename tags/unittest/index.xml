<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UnitTest on Yowko&#39;s Notes</title><link>https://blog.yowko.com/tags/unittest/</link><description>Recent content in UnitTest on Yowko&#39;s Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 23 Jul 2019 21:30:00 +0800</lastBuildDate><atom:link href="https://blog.yowko.com/tags/unittest/index.xml" rel="self" type="application/rss+xml"/><item><title>Test 中驗證 Object 是否相同的方法</title><link>https://blog.yowko.com/object-compare-in-test/</link><pubDate>Tue, 23 Jul 2019 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/object-compare-in-test/</guid><description>Test 中驗證 Object 是否相同的方法 最近花了不少時間在重構先前專案中的 Unit Test 與 Integration Test，其中對於 reference type 的物件比對有幾種不同的寫法 當然我個人大多配合團隊規範</description></item><item><title>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exception)</title><link>https://blog.yowko.com/mstest-nunit-xunit-exception/</link><pubDate>Sat, 27 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/mstest-nunit-xunit-exception/</guid><description>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exceptio</description></item></channel></rss>