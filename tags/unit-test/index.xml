<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unit Test on Yowko&#39;s Notes</title>
    <link>https://blog.yowko.com/tags/unit-test/</link>
    <description>Recent content in Unit Test on Yowko&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 19 Jun 2019 21:30:00 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yowko.com/tags/unit-test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>嘗試為gRPC 中的 stream RPC 加上 Unit Test</title>
      <link>https://blog.yowko.com/csharp-grpc-stream-unit-test/</link>
      <pubDate>Wed, 19 Jun 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/csharp-grpc-stream-unit-test/</guid>
      <description>嘗試為gRPC 中的 stream RPC 加上 Unit Test 之前筆記 C# 搭配 gRPC 中使用 stream RPC 紀錄到在 gRPC 中使用 stream RPC 的操作語法，但實際應用在專案上時卻卡關，主因是單元測試出現錯誤，</description>
    </item>
    
    <item>
      <title>為 .NET Core Middleware 加上 Unit Test</title>
      <link>https://blog.yowko.com/dotnet-core-middieware-unit-test/</link>
      <pubDate>Sun, 28 Apr 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/dotnet-core-middieware-unit-test/</guid>
      <description>為 .NET Core Middleware 加上 Unit Test .NET Core 的 Middleware 在 .NET Core 的 pipeline 中扮演了非常重要的角色，因此在實際應用上更需要確保功能與結果符合預期。第一次寫 middleware 的 unit test 順手紀錄過程，看看在</description>
    </item>
    
    <item>
      <title>如何取得 NUnit 當前執行的測試方法名稱</title>
      <link>https://blog.yowko.com/nunit-current-test-name/</link>
      <pubDate>Sun, 10 Mar 2019 23:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/nunit-current-test-name/</guid>
      <description>如何取得 NUnit 當前執行的測試方法名稱 看到 如何取得 NUnit 當前執行的測試方法名稱 這個標題，相信不少有 Unit Test 經驗的開發者都會疑惑：為什麼會需要當下的測試方法</description>
    </item>
    
    <item>
      <title>使用命令列指令 (VSTest.Console.exe) 執行 MSTest V2 測試</title>
      <link>https://blog.yowko.com/vstest-console-mstest-v2/</link>
      <pubDate>Mon, 09 Apr 2018 01:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/vstest-console-mstest-v2/</guid>
      <description>使用命令列指令 (VSTest.Console.exe) 執行 MSTest V2 測試 之前筆記 使用 MSTest.exe 指令來進行測試 曾經介紹到使用 MSTest.exe 在 cmmand line 環境中執行測試，筆記結尾有提到未支援 MSTest V2 的測試功能，在原本使用</description>
    </item>
    
    <item>
      <title>ASP.NET Web API Unit Test 出現需要加入 `System.Web.Http` 參考錯誤</title>
      <link>https://blog.yowko.com/unit-test-need-systemwebhttp/</link>
      <pubDate>Sun, 08 Apr 2018 10:48:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-need-systemwebhttp/</guid>
      <description>ASP.NET Web API Unit Test 出現需要加入 System.Web.Http 參考錯誤 為 ASP.NET Web API 加上 unit test 時，在加入 action 實際動作後 Visual Studio 就提示需要加入 System.Web.Http 參考，仔細回想這個問題也不是第一次遇到了，只是過去</description>
    </item>
    
    <item>
      <title>.Net 專案在 Git commit 前自動執行 Unit Test</title>
      <link>https://blog.yowko.com/git-hook-pre-commit-unit-test/</link>
      <pubDate>Tue, 19 Sep 2017 23:45:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/git-hook-pre-commit-unit-test/</guid>
      <description>.Net 專案在 Git commit 前自動執行 Unit Test 身為一個優秀的工程師對於提升專案品質都有一定的堅持，但對於 Unit Test 所帶來的效益，相信大家應該都會給予正面評價。而專案測</description>
    </item>
    
    <item>
      <title>讓 MSTest 支援使用資料集進行重覆測試</title>
      <link>https://blog.yowko.com/mstest-datasource/</link>
      <pubDate>Tue, 01 Aug 2017 23:52:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mstest-datasource/</guid>
      <description>讓 MSTest 支援使用資料集進行重覆測試 之前文章 NUnit 幾個參數化測試的方式 介紹到如何在 NUnit 單元測試中使用 TestCase、TestCaseSource、Va</description>
    </item>
    
    <item>
      <title>如何 Mock Private Method 的回傳值 - 使用 JuskMock</title>
      <link>https://blog.yowko.com/mock-private-method-juskmock/</link>
      <pubDate>Mon, 10 Jul 2017 01:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mock-private-method-juskmock/</guid>
      <description>如何 Mock Private Method 的回傳值 - 使用 JuskMock 前一篇筆記 使用 Moq 來 Mock protected Method 文末心得中提到傳言中付費的 mock framewrok 號稱無論是什麼狀況都能 mock，想說改天要找個機會來測試一下</description>
    </item>
    
    <item>
      <title>使用 Moq 來 Mock protected Method</title>
      <link>https://blog.yowko.com/moq-mock-protected-method/</link>
      <pubDate>Sun, 09 Jul 2017 20:20:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/moq-mock-protected-method/</guid>
      <description>使用 Moq 來 Mock protected Method 跟同事討論到在進行單元測試時，目標方法使用到其他非 public 方法，而且想要 mock 這個方法的回傳值該怎麼做？ 其實這個問題我之前也思考過，一直</description>
    </item>
    
    <item>
      <title>使用 Pickles 搭配 SpecFlow 產生即時更新文件(living documentation)</title>
      <link>https://blog.yowko.com/pickles-specflow/</link>
      <pubDate>Tue, 27 Jun 2017 22:47:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/pickles-specflow/</guid>
      <description>使用 Pickles 搭配 SpecFlow 產生即時更新文件(living documentation) 你有遇過類似的狀況嗎？：改了 code 卻忘了改註解 或是 看既有 code 時發現 code 行為與註解說明不同？ 這兩種情況在我</description>
    </item>
    
    <item>
      <title>為 Web Api 的 Message Handler 加上單元測試</title>
      <link>https://blog.yowko.com/web-api-message-handler-unit-test/</link>
      <pubDate>Sun, 25 Jun 2017 12:18:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/web-api-message-handler-unit-test/</guid>
      <description>為 Web Api 的 Message Handler 加上單元測試 之前在 為 ASP.NET WEB API 加上簡易的 Token 驗證 中曾經使用過 Message Handler 為 ASP.NET Web Api 加上簡易驗證。 後來在 TDD 課堂中聽到可以為 Message Handler 加上單元測試，於是就</description>
    </item>
    
    <item>
      <title>使用 MSTest.exe 指令來進行測試</title>
      <link>https://blog.yowko.com/mstest-exe/</link>
      <pubDate>Thu, 22 Jun 2017 23:12:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mstest-exe/</guid>
      <description>使用 MSTest.exe 指令來進行測試 MSTest.exe 是用於執行 MSTest 測試的命令列命令，功能與 Nunit-console 相同，都是用來讓我們在沒有 Visual Studio 的情境下可以執行測試，像是 CI Server，就讓我們</description>
    </item>
    
    <item>
      <title>餵資料集給 SpecFlow 來執行測試及驗證</title>
      <link>https://blog.yowko.com/specflow-outline/</link>
      <pubDate>Wed, 21 Jun 2017 23:16:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/specflow-outline/</guid>
      <description>餵資料集給 SpecFlow 來執行測試及驗證 之前文章 使用 SpecFlow 建立人語化的單元測試 已經大致了解如何使用近似人類語言來描述需求跟寫測試案例，透過這樣的方式不僅讓需</description>
    </item>
    
    <item>
      <title>驗證 private method 但會使用的 static 資料的做法 - PrivateType 與 PrivateObject 搭配</title>
      <link>https://blog.yowko.com/privatetype-in-privateobject/</link>
      <pubDate>Tue, 20 Jun 2017 09:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/privatetype-in-privateobject/</guid>
      <description>驗證 private method 但會使用的 static 資料的做法 - PrivateType 與 PrivateObject 搭配 一連幾篇筆記(Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType、Unit Test 想驗證 private static</description>
    </item>
    
    <item>
      <title>Unit Test 想驗證 private method 該怎麼做？ - 使用 PrivateObject</title>
      <link>https://blog.yowko.com/unit-test-private-method/</link>
      <pubDate>Mon, 19 Jun 2017 01:14:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-private-method/</guid>
      <description>Unit Test 想驗證 private method 該怎麼做？ - 使用 PrivateObject Unit Test 該拿 private 屬性及欄位怎麼辦？ - 使用 PrivateObject 針對的是 private 而且是 non-static 的 field 或是 property，Unit Test 想驗證 private static method 該怎麼</description>
    </item>
    
    <item>
      <title>Unit Test 該拿 private 屬性及欄位怎麼辦？ - 使用 PrivateObject</title>
      <link>https://blog.yowko.com/unit-test-private-field-property/</link>
      <pubDate>Mon, 19 Jun 2017 00:32:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-private-field-property/</guid>
      <description>Unit Test 該拿 private 屬性及欄位怎麼辦？ - 使用 PrivateObject 在 Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType 使用 NSubstitute 產生假物件後，透過 PrivateType 設定給原本是 private static 的屬性，但文末也提供 PrivateType 是</description>
    </item>
    
    <item>
      <title>Unit Test 想驗證 private static method 該怎麼做？ - 使用 PrivateType</title>
      <link>https://blog.yowko.com/unit-test-static-method/</link>
      <pubDate>Sun, 18 Jun 2017 21:26:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-static-method/</guid>
      <description>Unit Test 想驗證 private static method 該怎麼做？ - 使用 PrivateType TDD 的第一天課程中就提到，以單元測試的角度 private method 不需單獨進行測試，在驗證 public 及 internal method 的過程中自然會涵蓋到 private or protected me</description>
    </item>
    
    <item>
      <title>Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType</title>
      <link>https://blog.yowko.com/unit-test-static-field-property/</link>
      <pubDate>Sat, 17 Jun 2017 23:18:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-static-field-property/</guid>
      <description>Unit Test 該拿 static 屬性及欄位怎麼辦？ - 使用 PrivateType 自從上完第二次 TDD 課程後，對於新專案的開發充滿著信心，躍躍欲試不算新學到但有新理解的技能，只是過程還是跌跌</description>
    </item>
    
    <item>
      <title>Unit Test 如何驗證 ASP.NET Web Api 的 IHttpActionResult</title>
      <link>https://blog.yowko.com/unit-test-web-api-ihttpactionresult/</link>
      <pubDate>Thu, 15 Jun 2017 23:39:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-web-api-ihttpactionresult/</guid>
      <description>Unit Test 如何驗證 ASP.NET Web Api 的 IHttpActionResult 經過 91 哥三周的 TDD 訓練，我竟自大地以為我會 unit test 了，新專案到手立馬開啟 TDD 開發模式，不要臉地覺得同事寫的 api 可測試性低相當不可</description>
    </item>
    
    <item>
      <title>使用 SpecFlow 建立人語化的單元測試</title>
      <link>https://blog.yowko.com/specflow/</link>
      <pubDate>Tue, 13 Jun 2017 01:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/specflow/</guid>
      <description>使用 SpecFlow 建立人語化的單元測試 如何寫出良好可讀性的程式是個持續性的挑戰，也可能是永無止盡的挑戰，而測試程式雖然目的是測試，但終究是程式，也需要具</description>
    </item>
    
    <item>
      <title>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 2</title>
      <link>https://blog.yowko.com/tdd-day-2/</link>
      <pubDate>Sat, 10 Jun 2017 01:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/tdd-day-2/</guid>
      <description>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 2 TDD 來到了第二天，邀請我參加這次 TDD 課程的前同事 - Dino 問了我個問題：這樣參加完課程，如果沒有馬上應用或是應</description>
    </item>
    
    <item>
      <title>使用 PageObject(Page Object Pattern) 建立物件導向的 Web UI 測試程式</title>
      <link>https://blog.yowko.com/pageobject-web-ui-test/</link>
      <pubDate>Fri, 09 Jun 2017 21:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/pageobject-web-ui-test/</guid>
      <description>使用 PageObject(Page Object Pattern) 建立物件導向的 Web UI 測試程式 從 使用 Selenium IDE 與 C# 做 Web UI 測試 介紹如何使用 Selenium IDE 錄製網頁操作再轉換為 c# 測試案例，讓測試程式也能觸發 Web UI 的測試驗證</description>
    </item>
    
    <item>
      <title>使用 Fluent Automation 與 Selenium 打造語意化 Web UI 測試程式</title>
      <link>https://blog.yowko.com/fluent-automation-selenium-web-ui-test/</link>
      <pubDate>Thu, 08 Jun 2017 00:14:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/fluent-automation-selenium-web-ui-test/</guid>
      <description>使用 Fluent Automation 與 Selenium 打造語意化 Web UI 測試程式 之前文章 使用 Selenium IDE 與 C# 做 Web UI 測試，介紹了如何使用 Selenium IDE 錄製網頁操作並將過程 export 成 c# 測試程式，雖然很方便但 Selenium api 太像</description>
    </item>
    
    <item>
      <title>使用 Selenium IDE 與 C# 做 Web UI 測試</title>
      <link>https://blog.yowko.com/selenium-ide-csharp-web-ui-test/</link>
      <pubDate>Mon, 05 Jun 2017 21:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/selenium-ide-csharp-web-ui-test/</guid>
      <description>使用 Selenium IDE 與 C# 做 Web UI 測試 網頁 UI 及前端技術變化很快，也愈來愈專業，分工愈來愈細，除了前後端獨立的 unit test 之外，前後端介接完成後的整合測試也是重點之一</description>
    </item>
    
    <item>
      <title>Unit Test 中各個 Test Framework 的初始化及清除用法</title>
      <link>https://blog.yowko.com/unit-test-initialize-cleanup/</link>
      <pubDate>Sat, 03 Jun 2017 10:42:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-initialize-cleanup/</guid>
      <description>Unit Test 中各個 Test Framework 的初始化及清除用法 最近因為 TDD 課程的關係，比較常使用各個 Test Framework 的功能，在寫作業時發現對於各個 Test Framework 的初始化及清除用法不是那麼清楚，常</description>
    </item>
    
    <item>
      <title>如何 Debug 你做的 Visual Studio 擴充套件(vsix)</title>
      <link>https://blog.yowko.com/debug-vsix/</link>
      <pubDate>Wed, 31 May 2017 00:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/debug-vsix/</guid>
      <description>如何 Debug 你做的 Visual Studio 擴充套件(vsix) 從 bot framework project template 到最近做的 xUnit.net 2.0、NUnit2、NUnit3 test framework，前前後後也上架了四個擴充套</description>
    </item>
    
    <item>
      <title>右鍵選單 Create Unit Tests (建立單元測試) 選項不見？！</title>
      <link>https://blog.yowko.com/missing-create-unit-tests/</link>
      <pubDate>Tue, 30 May 2017 16:46:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/missing-create-unit-tests/</guid>
      <description>右鍵選單 Create Unit Tests (建立單元測試) 選項不見？！ 這是什麼情況？！ 是叫我不要寫 Unit Test 嗎XD，還是人品真的差成這樣，既然人品問題這麼嚴重，當然要紀錄一下</description>
    </item>
    
    <item>
      <title>Test Framework 套件不好用嗎？！ 自己做一個囉</title>
      <link>https://blog.yowko.com/customize-test-framework-project-template/</link>
      <pubDate>Mon, 29 May 2017 18:08:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/customize-test-framework-project-template/</guid>
      <description>Test Framework 套件不好用嗎？！ 自己做一個囉 前幾天在測試不同 Test Framework 特性時發現 NuGet 上 Visual Studio 2017 沒有 xUnit.net 2.0 的專案範本套件 (在 Visual Studio 2017 中安裝其他 Test Framework - NUnit)，所以就</description>
    </item>
    
    <item>
      <title>在 Visual Studio 2017 中安裝其他 Test Framework - xUnit.net 2.0</title>
      <link>https://blog.yowko.com/visual-studio-2017-test-framework-xunit/</link>
      <pubDate>Mon, 29 May 2017 00:34:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/visual-studio-2017-test-framework-xunit/</guid>
      <description>在 Visual Studio 2017 中安裝其他 Test Framework - xUnit.net 2.0 文章 在 Visual Studio 2017 中安裝其他 Test Framework - NUnit 中測試安裝不同的 Test Framework 時，發現在 Visual Studio 2017 中竟然無法直接使用 xUnit 專案範本 create unit test，著實</description>
    </item>
    
    <item>
      <title>在 Visual Studio 2017 中安裝其他 Test Framework - NUnit</title>
      <link>https://blog.yowko.com/visual-studio-2017-test-framework-nunit/</link>
      <pubDate>Sun, 28 May 2017 00:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/visual-studio-2017-test-framework-nunit/</guid>
      <description>在 Visual Studio 2017 中安裝其他 Test Framework - NUnit 透過 Visual Studio 2017 建立專案後，可以使用的 Test Framework 預設只有 MSTest 與 MSTestv2，而 MSTest 一般普遍認為功能較陽春，而會想改使用 NUnit 或是 x</description>
    </item>
    
    <item>
      <title>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exception)</title>
      <link>https://blog.yowko.com/mstest-nunit-xunit-exception/</link>
      <pubDate>Sat, 27 May 2017 01:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mstest-nunit-xunit-exception/</guid>
      <description>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exceptio</description>
    </item>
    
    <item>
      <title>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 1</title>
      <link>https://blog.yowko.com/tdd-day-1/</link>
      <pubDate>Tue, 23 May 2017 22:47:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/tdd-day-1/</guid>
      <description>自動測試與 TDD 實務開發 (使用 C# ) 心得 - Day 1 About 參加課程 測試的重要性大部份的工程師都懂，也都 想 做，只是更多時候絕大多數人都停留在 想 這個階段，這跟常</description>
    </item>
    
    <item>
      <title>NUnit 幾個參數化測試的方式</title>
      <link>https://blog.yowko.com/nunit-parameterized-test/</link>
      <pubDate>Mon, 17 Apr 2017 23:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/nunit-parameterized-test/</guid>
      <description>NUnit 幾個參數化測試的方式 QA 同事最近正在進行一個龐大計劃：打算將上百個單元測試，整併為一個。剛聽到這個需求，我當然是持反對意見，將那麼多測試整併</description>
    </item>
    
    <item>
      <title>如何使用 NUnit3 console 在沒有 Visual Studio 的環境下執行 NUnit 測試</title>
      <link>https://blog.yowko.com/nunit3-console/</link>
      <pubDate>Sun, 16 Apr 2017 18:11:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/nunit3-console/</guid>
      <description>如何使用 NUnit3 console 在沒有 Visual Studio 的環境下執行 NUnit 測試 一般情況下我們都是透過 Visual Studio 來開發測試程式，但並非所有環境都有 Visula Studio 像是 CI Server 一般都不會安裝 Visual Studio</description>
    </item>
    
    <item>
      <title>Fake Assembly 無法自動產生 *.Fakes dll 及出現 build fail</title>
      <link>https://blog.yowko.com/add-fake-assembly-error/</link>
      <pubDate>Sat, 25 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/add-fake-assembly-error/</guid>
      <description>Fake Assembly 無法自動產生 *.Fakes dll 及出現 build fail 在 如何 Mock System.Web.Hosting.HostingEnvironment.MapPath 虛擬路徑 提到同事想要 mock System.Web.Hosting.HostingEnvironment.MapPath 的值，試了半天決定用 fake dll 的方法來直接解決，但過程不太順利，所以留下紀錄 重現問</description>
    </item>
    
    <item>
      <title>如何 Mock System.Web.Hosting.HostingEnvironment.MapPath 虛擬路徑</title>
      <link>https://blog.yowko.com/mock-hostingenvironment-mappath/</link>
      <pubDate>Fri, 24 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mock-hostingenvironment-mappath/</guid>
      <description>如何 Mock System.Web.Hosting.HostingEnvironment.MapPath 虛擬路徑 同事想要為負責的專案加上測試保護，讓之後的修改可以降低風險，但很快地就遇上問題：專案在開發階段時並沒有加上任何測試，專案的部</description>
    </item>
    
    <item>
      <title>MSTest,NUnit 3,xUnit.net 2.0 比較</title>
      <link>https://blog.yowko.com/mstest-nunit-xunit/</link>
      <pubDate>Wed, 15 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mstest-nunit-xunit/</guid>
      <description>MSTest,NUnit 3,xUnit.net 2.0 比較 最近新專案期望使用較多的測試來保障程式品質，所以又到了要選擇相關工具的時候，首先遇到的就是測試框架 (Test Framework)：MSTe</description>
    </item>
    
    <item>
      <title>Visual Studio 2013 Unit Testing 的好用套件</title>
      <link>https://blog.yowko.com/visual-studio-2013-unit-test-plugin/</link>
      <pubDate>Mon, 13 Feb 2017 00:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/visual-studio-2013-unit-test-plugin/</guid>
      <description>Visual Studio 2013 Unit Testing 的好用套件 公司有些專案仍然使用 Visual Studio 2013，為了有更好的程式品質，慢慢地各專案都需要加上測試，所以就遇到有些好用套件需要另外處理的</description>
    </item>
    
    <item>
      <title>Visual Studio 2015 如何產生 NUnit 或 xUnit 的測試專案</title>
      <link>https://blog.yowko.com/visual-studio-2015-use-nunit-xunit/</link>
      <pubDate>Mon, 06 Feb 2017 00:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/visual-studio-2015-use-nunit-xunit/</guid>
      <description>Visual Studio 2015 如何產生 NUnit 或 xUnit 的測試專案 Visual Studio 2015 預設使用 MSTest 做為預設的 test framework 來產生測試專案，這篇筆記紀錄想要使用 NUnit 或是 xUnit test framework 時該安裝的套件 預設僅有 MSTest method 右鍵 &amp;ndash;&amp;gt;</description>
    </item>
    
  </channel>
</rss>