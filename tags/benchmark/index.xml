<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Benchmark on Yowko&#39;s Notes</title>
    <link>https://blog.yowko.com/tags/benchmark/</link>
    <description>Recent content in Benchmark on Yowko&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Nov 2019 21:30:00 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yowko.com/tags/benchmark/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C# (.NET Core 2) 啟用 gRPC 壓縮</title>
      <link>https://blog.yowko.com/dotnet-core-2-grpc-compression/</link>
      <pubDate>Sat, 16 Nov 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/dotnet-core-2-grpc-compression/</guid>
      <description>C# (.NET Core 2) 啟用 gRPC 壓縮 目前專案在大資料量傳遞時會透過 gRPC stream，不過因為是非對稱式資料內容，採用 chunk byte 來傳輸，以避免單次 gRPC 的 message size 限制問題，但以</description>
    </item>
    
    <item>
      <title>[Benchmark] 使用 C# 對 InfluxDB insert 操作的效能數據</title>
      <link>https://blog.yowko.com/csharp-influxdb-benchmark/</link>
      <pubDate>Sun, 22 Sep 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/csharp-influxdb-benchmark/</guid>
      <description>[Benchmark] 使用 C# 對 InfluxDB insert 操作的效能數據 之前筆記 使用 C# 存取 InfluxDB 紀錄了 C# 在 InfluxDB 的基本 CRUD，也提到新專案可能會使用 InfluxDB 儲存資料，在了解 C# 的基本用法後接著就來確</description>
    </item>
    
    <item>
      <title>HttpClient 無法反應 DNS 異動的解決方式</title>
      <link>https://blog.yowko.com/httpclient-not-respect-dns-change/</link>
      <pubDate>Sat, 05 Jan 2019 23:45:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/httpclient-not-respect-dns-change/</guid>
      <description>HttpClient 無法反應 DNS 異動的解決方式 之前筆記 探討 HttpClient 可能的問題 提到使用 HttpCLient 時避免 socket 耗盡的方式就是只建立一個 HttpClient instance (透過 static or singleton)，但這樣的方式</description>
    </item>
    
    <item>
      <title>[Benchmark] DB 物件對映至 C# class 的做法</title>
      <link>https://blog.yowko.com/object-relation-mapping/</link>
      <pubDate>Tue, 01 Jan 2019 00:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/object-relation-mapping/</guid>
      <description>[Benchmark] DB 物件對映至 C# class 的做法 跟同事討論到 ORM 的優劣，當然各有擁護的對象，但相同的目標卻很一致：速度快，而在 速度快 這個基本前提下，我個人覺得還有討論</description>
    </item>
    
  </channel>
</rss>