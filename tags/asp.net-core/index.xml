<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>asp.net core on Yowko&#39;s Notes</title>
    <link>https://blog.yowko.com/tags/asp.net-core/</link>
    <description>Recent content in asp.net core on Yowko&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Sep 2020 21:30:00 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yowko.com/tags/asp.net-core/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 ASP.NET Core BackgroundService 進行 gRPC healthy check</title>
      <link>https://blog.yowko.com/aspdotnet-core-backgroundservice-grpc-healthy-check/</link>
      <pubDate>Sun, 06 Sep 2020 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/aspdotnet-core-backgroundservice-grpc-healthy-check/</guid>
      <description>使用 ASP.NET Core BackgroundService 進行 gRPC healthy check 之前筆記 使用 ASP.NET Core middleware 進行 gRPC healthy check 紀錄到如何使用 ASP.NET Core 內建的 Health Check middleware 來進行 gRPC service 的檢查，當時有看到 Steve Gordon 的 HEALTH CHECKS WITH GRPC AND ASP.NET CORE 3.0 使用 serive 本身的</description>
    </item>
    
    <item>
      <title>使用 ASP.NET Core middleware 進行 gRPC healthy check</title>
      <link>https://blog.yowko.com/aspdotnet-core-middleware-grpc-healthy-check/</link>
      <pubDate>Mon, 31 Aug 2020 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/aspdotnet-core-middleware-grpc-healthy-check/</guid>
      <description>使用 ASP.NET Core middleware 進行 gRPC healthy check 這個需求來自於某次的 issue：有個 service 的回應時好時壞，沒有規律，這讓我想起當年在壽險公司資訊部門使用 asp 提供服務的故事，當</description>
    </item>
    
    <item>
      <title>將 ASP.NET Core 部署至 Docker 中</title>
      <link>https://blog.yowko.com/aspnet-core-docker/</link>
      <pubDate>Wed, 24 Apr 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/aspnet-core-docker/</guid>
      <description>將 ASP.NET Core 部署至 Docker 中 最近專案在 macOS 上開發 ASP.NET Core 的 Web API，完成後再透過 Docker 包成 image 準備建立 container，流程很直覺，加上 CI CD 同事都已經準備好了，所</description>
    </item>
    
  </channel>
</rss>