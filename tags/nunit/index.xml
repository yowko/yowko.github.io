<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NUnit on Yowko&#39;s Notes</title>
    <link>https://blog.yowko.com/tags/nunit/</link>
    <description>Recent content in NUnit on Yowko&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 10 Mar 2019 23:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yowko.com/tags/nunit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何取得 NUnit 當前執行的測試方法名稱</title>
      <link>https://blog.yowko.com/nunit-current-test-name/</link>
      <pubDate>Sun, 10 Mar 2019 23:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/nunit-current-test-name/</guid>
      <description>如何取得 NUnit 當前執行的測試方法名稱 看到 如何取得 NUnit 當前執行的測試方法名稱 這個標題，相信不少有 Unit Test 經驗的開發者都會疑惑：為什麼會需要當下的測試方法</description>
    </item>
    
    <item>
      <title>Unit Test 如何驗證 ASP.NET Web Api 的 IHttpActionResult</title>
      <link>https://blog.yowko.com/unit-test-web-api-ihttpactionresult/</link>
      <pubDate>Thu, 15 Jun 2017 23:39:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-web-api-ihttpactionresult/</guid>
      <description>Unit Test 如何驗證 ASP.NET Web Api 的 IHttpActionResult 經過 91 哥三周的 TDD 訓練，我竟自大地以為我會 unit test 了，新專案到手立馬開啟 TDD 開發模式，不要臉地覺得同事寫的 api 可測試性低相當不可</description>
    </item>
    
    <item>
      <title>使用 SpecFlow 建立人語化的單元測試</title>
      <link>https://blog.yowko.com/specflow/</link>
      <pubDate>Tue, 13 Jun 2017 01:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/specflow/</guid>
      <description>使用 SpecFlow 建立人語化的單元測試 如何寫出良好可讀性的程式是個持續性的挑戰，也可能是永無止盡的挑戰，而測試程式雖然目的是測試，但終究是程式，也需要具</description>
    </item>
    
    <item>
      <title>使用 Selenium IDE 與 C# 做 Web UI 測試</title>
      <link>https://blog.yowko.com/selenium-ide-csharp-web-ui-test/</link>
      <pubDate>Mon, 05 Jun 2017 21:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/selenium-ide-csharp-web-ui-test/</guid>
      <description>使用 Selenium IDE 與 C# 做 Web UI 測試 網頁 UI 及前端技術變化很快，也愈來愈專業，分工愈來愈細，除了前後端獨立的 unit test 之外，前後端介接完成後的整合測試也是重點之一</description>
    </item>
    
    <item>
      <title>Unit Test 中各個 Test Framework 的初始化及清除用法</title>
      <link>https://blog.yowko.com/unit-test-initialize-cleanup/</link>
      <pubDate>Sat, 03 Jun 2017 10:42:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/unit-test-initialize-cleanup/</guid>
      <description>Unit Test 中各個 Test Framework 的初始化及清除用法 最近因為 TDD 課程的關係，比較常使用各個 Test Framework 的功能，在寫作業時發現對於各個 Test Framework 的初始化及清除用法不是那麼清楚，常</description>
    </item>
    
    <item>
      <title>如何 Debug 你做的 Visual Studio 擴充套件(vsix)</title>
      <link>https://blog.yowko.com/debug-vsix/</link>
      <pubDate>Wed, 31 May 2017 00:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/debug-vsix/</guid>
      <description>如何 Debug 你做的 Visual Studio 擴充套件(vsix) 從 bot framework project template 到最近做的 xUnit.net 2.0、NUnit2、NUnit3 test framework，前前後後也上架了四個擴充套</description>
    </item>
    
    <item>
      <title>Test Framework 套件不好用嗎？！ 自己做一個囉</title>
      <link>https://blog.yowko.com/customize-test-framework-project-template/</link>
      <pubDate>Mon, 29 May 2017 18:08:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/customize-test-framework-project-template/</guid>
      <description>Test Framework 套件不好用嗎？！ 自己做一個囉 前幾天在測試不同 Test Framework 特性時發現 NuGet 上 Visual Studio 2017 沒有 xUnit.net 2.0 的專案範本套件 (在 Visual Studio 2017 中安裝其他 Test Framework - NUnit)，所以就</description>
    </item>
    
    <item>
      <title>在 Visual Studio 2017 中安裝其他 Test Framework - NUnit</title>
      <link>https://blog.yowko.com/visual-studio-2017-test-framework-nunit/</link>
      <pubDate>Sun, 28 May 2017 00:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/visual-studio-2017-test-framework-nunit/</guid>
      <description>在 Visual Studio 2017 中安裝其他 Test Framework - NUnit 透過 Visual Studio 2017 建立專案後，可以使用的 Test Framework 預設只有 MSTest 與 MSTestv2，而 MSTest 一般普遍認為功能較陽春，而會想改使用 NUnit 或是 x</description>
    </item>
    
    <item>
      <title>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exception)</title>
      <link>https://blog.yowko.com/mstest-nunit-xunit-exception/</link>
      <pubDate>Sat, 27 May 2017 01:00:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mstest-nunit-xunit-exception/</guid>
      <description>使用 MSTest、Nunit 3、xUnit.net 2.0、NSubstitute、FluentAssertions 驗證例外(exceptio</description>
    </item>
    
    <item>
      <title>NUnit 幾個參數化測試的方式</title>
      <link>https://blog.yowko.com/nunit-parameterized-test/</link>
      <pubDate>Mon, 17 Apr 2017 23:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/nunit-parameterized-test/</guid>
      <description>NUnit 幾個參數化測試的方式 QA 同事最近正在進行一個龐大計劃：打算將上百個單元測試，整併為一個。剛聽到這個需求，我當然是持反對意見，將那麼多測試整併</description>
    </item>
    
    <item>
      <title>如何使用 NUnit3 console 在沒有 Visual Studio 的環境下執行 NUnit 測試</title>
      <link>https://blog.yowko.com/nunit3-console/</link>
      <pubDate>Sun, 16 Apr 2017 18:11:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/nunit3-console/</guid>
      <description>如何使用 NUnit3 console 在沒有 Visual Studio 的環境下執行 NUnit 測試 一般情況下我們都是透過 Visual Studio 來開發測試程式，但並非所有環境都有 Visula Studio 像是 CI Server 一般都不會安裝 Visual Studio</description>
    </item>
    
    <item>
      <title>MSTest,NUnit 3,xUnit.net 2.0 比較</title>
      <link>https://blog.yowko.com/mstest-nunit-xunit/</link>
      <pubDate>Wed, 15 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mstest-nunit-xunit/</guid>
      <description>MSTest,NUnit 3,xUnit.net 2.0 比較 最近新專案期望使用較多的測試來保障程式品質，所以又到了要選擇相關工具的時候，首先遇到的就是測試框架 (Test Framework)：MSTe</description>
    </item>
    
    <item>
      <title>Visual Studio 2015 如何產生 NUnit 或 xUnit 的測試專案</title>
      <link>https://blog.yowko.com/visual-studio-2015-use-nunit-xunit/</link>
      <pubDate>Mon, 06 Feb 2017 00:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/visual-studio-2015-use-nunit-xunit/</guid>
      <description>Visual Studio 2015 如何產生 NUnit 或 xUnit 的測試專案 Visual Studio 2015 預設使用 MSTest 做為預設的 test framework 來產生測試專案，這篇筆記紀錄想要使用 NUnit 或是 xUnit test framework 時該安裝的套件 預設僅有 MSTest method 右鍵 &amp;ndash;&amp;gt;</description>
    </item>
    
  </channel>
</rss>