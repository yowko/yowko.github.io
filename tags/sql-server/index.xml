<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL Server on Yowko&#39;s Notes</title><link>https://blog.yowko.com/tags/sql-server/</link><description>Recent content in SQL Server on Yowko&#39;s Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 02 Aug 2018 02:40:00 +0800</lastBuildDate><atom:link href="https://blog.yowko.com/tags/sql-server/index.xml" rel="self" type="application/rss+xml"/><item><title>安裝 SQL Server 2017 出現 exit code 1638</title><link>https://blog.yowko.com/sql-server-1638/</link><pubDate>Thu, 02 Aug 2018 02:40:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-1638/</guid><description>安裝 SQL Server 2017 出現 exit code 1638 今天拿到新的工作用電腦，首先當然就是安裝所有開發必備工具與軟體，其中一個便是 local 開發用的 DB instance，既然都要重新安</description></item><item><title>如何避免多個 Entity Framework 6 instance 造成資料覆蓋問題 (DB First - SQL Server)</title><link>https://blog.yowko.com/entityframework-6-concurrency/</link><pubDate>Sun, 27 May 2018 21:54:00 +0800</pubDate><guid>https://blog.yowko.com/entityframework-6-concurrency/</guid><description>如何避免多個 Entity Framework 6 instance 造成資料覆蓋問題 (DB First - SQL Server) 前後台分離且共同存取 table 或是同時有多台機器甚至是修改資料不經由 Entity Framework 都是平常開發上很常見的情境，但</description></item><item><title>C# 使用 Dapper 連線 DB 時指定逾時時間 (timeout)：0x80004005</title><link>https://blog.yowko.com/dapper-timeout/</link><pubDate>Sun, 22 Apr 2018 23:34:00 +0800</pubDate><guid>https://blog.yowko.com/dapper-timeout/</guid><description>C# 使用 Dapper 連線 DB 時指定逾時時間 (timeout)：0x80004005 最近專案在 production 環境執行時常常遇到 [Win32Exception (0x80004005): The wait operation timed out]，造成程式未完整執行，</description></item><item><title>IIS 存取 LocalDB (.MDF) 時出現 Error 52</title><link>https://blog.yowko.com/iis-localdb-mdf-error-52/</link><pubDate>Sun, 04 Feb 2018 00:01:00 +0800</pubDate><guid>https://blog.yowko.com/iis-localdb-mdf-error-52/</guid><description>IIS 存取 LocalDB (.MDF) 時出現 Error 52 資料庫是網頁應用程式儲存資料最常見的方式，存取資料的操作方法也最廣為人知，只是資料庫本身有維護及管理成本，如果目的只是本</description></item><item><title>ASP.NET Identity 搭配 DataBase first 與 SQL Server</title><link>https://blog.yowko.com/aspnet-identity-db-first-mssql/</link><pubDate>Wed, 08 Nov 2017 23:58:00 +0800</pubDate><guid>https://blog.yowko.com/aspnet-identity-db-first-mssql/</guid><description>ASP.NET Identity 搭配 DataBase first 與 SQL Server 之前曾經輕描淡寫地介紹過 ASP.NET Identity 預設使用 Code First 機制。 在 MVC 預設專案範本中，會在 Regiser 時建立 ASP.NET Identity 的相關 db table 及 code first 需要用到的 __MigrationHistory table，</description></item><item><title>SQL Server - 無法建立 Database Diagrams</title><link>https://blog.yowko.com/database-diagrams-backend-version/</link><pubDate>Wed, 11 Oct 2017 22:16:00 +0800</pubDate><guid>https://blog.yowko.com/database-diagrams-backend-version/</guid><description>SQL Server - 無法建立 Database Diagrams 想要了解 table 間的關聯與 table 的欄位屬性相關資訊，透過 SQL Server 的 Database Diagrams 是最直接方便的，所以新專案的部份功能想透過 Database Diagrams 來釐清 table 間相對關係，</description></item><item><title>如何得知 script 執行時間 - Stopwatch in SQL Server ？！</title><link>https://blog.yowko.com/stopwatch-in-sql-server/</link><pubDate>Fri, 30 Jun 2017 23:53:00 +0800</pubDate><guid>https://blog.yowko.com/stopwatch-in-sql-server/</guid><description>如何得知 script 執行時間 - Stopwatch in SQL Server ？！ SQL script 執行緩慢偶爾就會出現在討論的話題中，script 優化也是 db 效能調校最直接有效跟成本效益比最高的方式。 只是</description></item><item><title>使用 SQL Server CDC (Change Data Capture) 來追蹤資料變更</title><link>https://blog.yowko.com/sql-server-cdc-change-data-capture/</link><pubDate>Thu, 29 Jun 2017 23:28:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-cdc-change-data-capture/</guid><description>使用 SQL Server CDC (Change Data Capture) 來追蹤資料變更 同事在追查一個 issue，但追一追總是卡在 db 資料面，不知道 db 的資料變化歷程，所以遲遲找不出問題發生原因，所以想</description></item><item><title>SQL Server 無法修改資料表定義？！</title><link>https://blog.yowko.com/sql-server-cahnges-not-permitted/</link><pubDate>Fri, 23 Jun 2017 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-cahnges-not-permitted/</guid><description>SQL Server 無法修改資料表定義？！ 沒辦法直接修改 SQL Server 資料表定義的問題，說常見也不是很常見，但也不算罕見，畢竟通常只需要設定一次，剛好我常常安裝新的測</description></item><item><title>SQL Server 如何紀錄執行錯誤</title><link>https://blog.yowko.com/sql-server-log-exception/</link><pubDate>Tue, 25 Apr 2017 02:07:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-log-exception/</guid><description>SQL Server 如何紀錄執行錯誤 程式在 production 環境上出現錯誤，大家會怎麼 debug 呢？最傳統也最普遍的做法當然就是追查各式各樣的 log，現在發生錯誤的對象換做是 db 該怎</description></item><item><title>相同的 SQL script 在 Stored Procedure 裡跑比較慢？！</title><link>https://blog.yowko.com/sql-script-parameter-sniffing/</link><pubDate>Sun, 23 Apr 2017 02:57:00 +0800</pubDate><guid>https://blog.yowko.com/sql-script-parameter-sniffing/</guid><description>相同的 SQL script 在 Stored Procedure 裡跑比較慢？！ 你遇過把原本執行效率不錯的 sql script 搬到 stored procedure 後執行效率大降的情形嗎？我遇到一次：問題發生原因是 parameter sniffing (參數探測)，至於</description></item><item><title>SQL Server 字串分割 function 的效能調校</title><link>https://blog.yowko.com/sql-server-split-string-function/</link><pubDate>Fri, 21 Apr 2017 02:08:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-split-string-function/</guid><description>SQL Server 字串分割 function 的效能調校 過去曾經參加某個效能調校的研討會，相關資訊已經不可考，就連講師是誰都沒有印象，但卻對其提出的效能調校 guideline 有很深的體悟，</description></item><item><title>三種用來備份還原 SQL Server schema 與資料的做法</title><link>https://blog.yowko.com/sql-server-backup-restore/</link><pubDate>Sun, 16 Apr 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-backup-restore/</guid><description>三種用來備份還原 SQL Server schema 與資料的做法 部份公司團隊在專案開發流程上有較多的環境需要建置，或是有時需要針對不同環境的資料及 schema 進行除錯與比對時就是件</description></item><item><title>你認識 SQL Server 的資料層應用程式(Data-tier Applications - DAC)嗎?</title><link>https://blog.yowko.com/sql-server-dac/</link><pubDate>Fri, 14 Apr 2017 02:39:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-dac/</guid><description>你認識 SQL Server 的資料層應用程式(Data-tier Applications - DAC)嗎? DAC 首次出現於 SQL Server 2008 R2 ，但直至今日經過了這麼久時間還是很少聽到其他人討論這個功能</description></item><item><title>如何快速比對資料庫結構差異並產生同步指令</title><link>https://blog.yowko.com/sql-server-schema-compare/</link><pubDate>Mon, 10 Apr 2017 00:20:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-schema-compare/</guid><description>如何快速比對資料庫結構差異並產生同步指令 之前文章 如何為 SQL SERVER 建立資料庫版控 簡短地介紹如何使用 SQL Server Data Tools (SSDT) 來將資料庫物件轉換為程式碼以利進行版控，</description></item><item><title>如何為 SQL SERVER 建立資料庫版控</title><link>https://blog.yowko.com/sql-server-version-control/</link><pubDate>Sun, 09 Apr 2017 21:21:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-version-control/</guid><description>如何為 SQL SERVER 建立資料庫版控 程式碼版控的重要性對於開發人員不言可喻，但很常遇到的問題是資料庫相依：程式有完整版控但每個版本對應的資料庫 schema 或是資料</description></item><item><title>SQL Server 無法新增資料庫圖表(database diagram)</title><link>https://blog.yowko.com/sql-server-database-diagram/</link><pubDate>Thu, 06 Apr 2017 23:23:00 +0800</pubDate><guid>https://blog.yowko.com/sql-server-database-diagram/</guid><description>QL Server 無法新增資料庫圖表(database diagram) 因為之前工作常需要建立新的資料庫及資料表，在保哥指導下學會使用以資料庫圖表(database dia</description></item><item><title>解決 SQL Server 安裝錯誤代碼 - 0x858C001B</title><link>https://blog.yowko.com/sql-server-0x858c001b/</link><pubDate>Thu, 26 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sql-server-0x858c001b/</guid><description>解決 SQL Server 安裝錯誤代碼 - 0x858C001B 雖然 DB 功能不怎樣，不過為了加速開發本機 SQL Server 到也安裝好幾次，今天遇到嚴重錯誤，紀錄一下原因 過去為了查問題方便 google 相關資訊</description></item><item><title>關於清除 SQL Server 查詢快取的那些事</title><link>https://blog.yowko.com/sql-server-clear-cache/</link><pubDate>Tue, 27 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sql-server-clear-cache/</guid><description>關於清除 SQL Server 查詢快取的那些事 之前的筆記 試著學會看懂 SQL Server IO 統計資訊 中，有粗略地介紹 SQL Server IO 的統計資訊，其中 logical reads(邏輯讀取) 是我們用來進行</description></item><item><title>試著看懂 SQL Server IO 統計資訊</title><link>https://blog.yowko.com/sql-server-io-statistics/</link><pubDate>Tue, 13 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sql-server-io-statistics/</guid><description>試著學會看懂 SQL Server IO 統計資訊 SQL Server IO 統計資訊是重要的效能調校依據，第一步就是嘗試看懂其中的涵意。 SET STATISTICS IO { ON | OFF } 用來開啟 IO 統計資訊 SET STATISTICS IO 設定動作</description></item></channel></rss>