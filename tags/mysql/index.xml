<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on Yowko&#39;s Notes</title><link>https://blog.yowko.com/tags/mysql/</link><description>Recent content in mysql on Yowko&#39;s Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 15 Jan 2024 00:30:00 +0800</lastBuildDate><atom:link href="https://blog.yowko.com/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>ClickHouse 使用 MySql Database Engine</title><link>https://blog.yowko.com/clickhouse-mysql-engine/</link><pubDate>Mon, 15 Jan 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/clickhouse-mysql-engine/</guid><description>ClickHouse 使用 MySql Database Engine 之前筆記 ClickHouse 在彙總資料時的效能優勢 紀錄到 ClickHouse 與 MySql 在特定查詢情境的效能差異，查閱官網文件時，發現 ClickHouse 除了支援自有的 table engine 之外，也支援其他 DB</description></item><item><title>ClickHouse 在彙總資料時的效能優勢</title><link>https://blog.yowko.com/clickhouse-aggregate-query-performance/</link><pubDate>Wed, 03 Jan 2024 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/clickhouse-aggregate-query-performance/</guid><description>ClickHouse 在彙總資料時的效能優勢 前提：雖然本篇筆記中使用了 MySql 做為範例，但主要是因為目前團隊使用 MySql，我對 MySql 相同熟悉點，而不是為了踩 MySql 捧 Clic</description></item><item><title>C# 如何快速新增大量資料至 MySQL</title><link>https://blog.yowko.com/csharp-mysql-bulk-insert/</link><pubDate>Fri, 22 Dec 2023 00:30:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-mysql-bulk-insert/</guid><description>C# 如何快速新增大量資料至 MySQL 最近在重現系統上遇到的狀況，初步懷疑是資料量過大，造成相關處理效能不佳，而連帶影響到系統後續運作，但這是初步懷疑，</description></item><item><title>使用 sysbench 來取得 ProxySQL 效能差異</title><link>https://blog.yowko.com/proxysql-benchmark-sysbench/</link><pubDate>Fri, 16 Jul 2021 12:30:00 +0800</pubDate><guid>https://blog.yowko.com/proxysql-benchmark-sysbench/</guid><description>使用 sysbench 來取得 ProxySQL 效能差異 在之前筆記 使用 ProxySQL 來簡化 MySQL 的讀寫分離 提到需要進行壓力測試取得透過 ProxySQL 與直接存取 MySQL 的效能數據差來評估是否採用 ProxySQL 今天就來紀錄使</description></item><item><title>使用 ProxySQL 來簡化 MySQL 的讀寫分離</title><link>https://blog.yowko.com/proxysql/</link><pubDate>Thu, 15 Jul 2021 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/proxysql/</guid><description>使用 ProxySQL 來簡化 MySQL 的讀寫分離 隨著系統使用者愈來愈多，對於 MySQL 的存取量也跟提高許多，為了增加系統整體 capacity，首先打算從 MySQL 著手調整起，在經過</description></item><item><title>安裝 mysql client</title><link>https://blog.yowko.com/install-mysql-client-only/</link><pubDate>Mon, 07 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/install-mysql-client-only/</guid><description>安裝 mysql client 程式更迭的過程，隨著功能的增加，不免需要 db 的 change 來配合，為了增加安裝性，所以打算封鎖 user 登入 mysql server 操作，僅透過 mysql client 來進行 patch，但又不</description></item></channel></rss>