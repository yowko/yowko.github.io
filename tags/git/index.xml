<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Yowko&#39;s Notes</title><link>https://blog.yowko.com/tags/git/</link><description>Recent content in Git on Yowko&#39;s Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 22 Dec 2020 21:30:00 +0800</lastBuildDate><atom:link href="https://blog.yowko.com/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>快速更換 mac 中的所有 git repository 位置</title><link>https://blog.yowko.com/mac-change-git-url/</link><pubDate>Tue, 22 Dec 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/mac-change-git-url/</guid><description>快速更換 mac 中的所有 git repository 位置 最近團隊移動了 git server 的位置，所以 git repository 的 url 也就跟著改變了，只是這麼一來團隊那些數十個 repository 要逐一修改顯得有些浪費時間，所以</description></item><item><title>Git Submodule partial clone</title><link>https://blog.yowko.com/git-submodule-partial-clone/</link><pubDate>Sun, 19 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-submodule-partial-clone/</guid><description>Git Submodule partial clone 之前筆記 Git partial clone 嘗試了期待已久的 partial clone 功能，雖然跟預期有落差，但對於想要的目標有了不同想法 之前以為 partial clone 可以在既有 repo 的內容中，疉加另個 repo 的</description></item><item><title>Git partial clone</title><link>https://blog.yowko.com/git-partial-clone/</link><pubDate>Sat, 18 Jul 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-partial-clone/</guid><description>Git partial clone Git 2.19.0 發表了 Partial Clone 功能，技術細節可以參考 Partial Clone Design Notes 這功能從我開始使用 Git 就覺得需要了，因為 Git 跟過去中央式版控不同，不是以路徑為使用基準，所以沒</description></item><item><title>Git Force Push 後如何更新 Repository</title><link>https://blog.yowko.com/git-pull-after-force-push/</link><pubDate>Sat, 23 May 2020 22:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-pull-after-force-push/</guid><description>Git Force Push 後如何更新 Repository 在之前筆記 清除 Git Commit 紀錄 提到打算將開發時期的 commit history 都清除，來個重新開始，但在完成 repository 整理後，團隊其他人還是得繼續往下開發，在找不</description></item><item><title>清除 Git Commit 紀錄</title><link>https://blog.yowko.com/clean-git-commit-history/</link><pubDate>Sat, 23 May 2020 21:30:00 +0800</pubDate><guid>https://blog.yowko.com/clean-git-commit-history/</guid><description>清除 Git Commit 紀錄 為了加快 Git clone 的速度，在之前筆記 加快大型 GIT Repository 下載速度(指定 depth) 曾經紀錄到使用 --depth 參數，用來限縮 clone 的資料量，只是預設情境下大家不會刻意加</description></item><item><title>為 Windows Container 安裝 Git - Part2</title><link>https://blog.yowko.com/windows-container-install-git/</link><pubDate>Tue, 19 Feb 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/windows-container-install-git/</guid><description>為 Windows Container 安裝 Git - Part2 昨天提到同事想要在 Windows Container 上安裝 Git 當做 base image 再用來擴充其他功能，但沒辦法直接安裝，所以在 為 Windows Container 安裝 Git 介紹到透過 Chocolatey 安裝 Git 的做法 雖然知</description></item><item><title>為 Windows Container 安裝 Git</title><link>https://blog.yowko.com/windows-container-git/</link><pubDate>Mon, 18 Feb 2019 20:40:00 +0800</pubDate><guid>https://blog.yowko.com/windows-container-git/</guid><description>為 Windows Container 安裝 Git 同事想要在 Windows Container 上安裝 Git 當做 base image 再用來擴充其他功能，但 Git for Windows 僅提供 .exe 版本，沒辦法用 msiexec，直接用 .exe 安裝又無法避開 popup 視窗問題</description></item><item><title>清除 Windows 上的 git 驗證資訊(Credential)</title><link>https://blog.yowko.com/clear-windows-credential/</link><pubDate>Tue, 17 Apr 2018 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/clear-windows-credential/</guid><description>清除 Windows 上的 git 驗證資訊(Credential) 公司電腦的安全性設定要求固定時間需要修改個人 AD 密碼，連帶其他內部系統密碼也會一並被修改，之前修改</description></item><item><title>加快大型 GIT Repository 下載速度(指定 depth)</title><link>https://blog.yowko.com/git-clone-depth/</link><pubDate>Sat, 07 Apr 2018 16:33:00 +0800</pubDate><guid>https://blog.yowko.com/git-clone-depth/</guid><description>加快大型 GIT Repository 下載速度(指定 depth) 同事反應有個專案在經年累月的發展下，快速成長到每次 clone 都要個十幾二十分鐘，後來甚至有次在 production deploy 時還完全卡死，無法正確</description></item><item><title>使用 GIT 找出特定期間內特定檔案的修改資料</title><link>https://blog.yowko.com/git-log-specific-files/</link><pubDate>Mon, 26 Feb 2018 23:17:00 +0800</pubDate><guid>https://blog.yowko.com/git-log-specific-files/</guid><description>使用 GIT 找出特定期間內特定檔案的修改資料 過去幾次 production 環境的更版都遇到 config 異常的狀況，輕則只影響特定功能，嚴重的讓整個 application 都 crash，根本原因是 config 的</description></item><item><title>TortoiseGit 與遠端操作的功能不見了？！</title><link>https://blog.yowko.com/tortoisegit-missing-options/</link><pubDate>Mon, 27 Nov 2017 23:29:00 +0800</pubDate><guid>https://blog.yowko.com/tortoisegit-missing-options/</guid><description>TortoiseGit 與遠端操作的功能不見了？！ 同事反應他電腦上的 TortoiseGit 無法與遠端 Repository 互動(包括 push、fetch、pull&amp;hellip;)，原本以為是權限問題，</description></item><item><title>使用 Git ADD 指令出現錯誤</title><link>https://blog.yowko.com/git-lf-replace-crlf-error/</link><pubDate>Fri, 17 Nov 2017 23:54:00 +0800</pubDate><guid>https://blog.yowko.com/git-lf-replace-crlf-error/</guid><description>使用 Git ADD 指令出現錯誤 同事反應無法使用 TortoiseGit 將新檔案 commit，後來進一步發現連加入 index 都不行，我接手後發現原現 git add 指令無法正常使用，一度以為是安</description></item><item><title>Git Push 出現 501 Not Implemented 錯誤</title><link>https://blog.yowko.com/git-push-501-not-implemented/</link><pubDate>Mon, 06 Nov 2017 23:53:00 +0800</pubDate><guid>https://blog.yowko.com/git-push-501-not-implemented/</guid><description>Git Push 出現 501 Not Implemented 錯誤 這是同事遇到的問題，雖然最後有順利解決問題，但仍然搞不清問題發生的原因。 同事在 Push 某個 repository 時出現 error: RPC failed; HTTP 501 curl 22 The requested URL returned error: 501 Not Implemented</description></item><item><title>Git Submodule 指定 Branch</title><link>https://blog.yowko.com/git-submodule-specific-branch/</link><pubDate>Thu, 12 Oct 2017 23:25:00 +0800</pubDate><guid>https://blog.yowko.com/git-submodule-specific-branch/</guid><description>Git Submodule 指定 Branch 曾經在 Git 專案引用其他 Repository 的作法(Git Submodule) 介紹過如何使用 Git submodule 來引用其他 repository 內容，最近同事在使用 Git submodule 時發現預設使用 master branch，問到該如</description></item><item><title>.NET 專案在 Git commit 前自動執行 Unit Test</title><link>https://blog.yowko.com/git-hook-pre-commit-unit-test/</link><pubDate>Tue, 19 Sep 2017 23:45:00 +0800</pubDate><guid>https://blog.yowko.com/git-hook-pre-commit-unit-test/</guid><description>.NET 專案在 Git commit 前自動執行 Unit Test 身為一個優秀的工程師對於提升專案品質都有一定的堅持，但對於 Unit Test 所帶來的效益，相信大家應該都會給予正面評價。而專案測</description></item><item><title>Git 如何還原已經 push 的 commit</title><link>https://blog.yowko.com/git-revert/</link><pubDate>Sun, 17 Sep 2017 22:34:00 +0800</pubDate><guid>https://blog.yowko.com/git-revert/</guid><description>Git 如何還原已經 push 的 commit 同事在完成新功能的開發後，已經將 feature branch merge 至 master 中也 push 至 Git server 上，並通過了 CI server 的檢查，正等待著良辰吉時的到來，準備上線至 production 接著就</description></item><item><title>使用 Git LFS 儲存大型檔案</title><link>https://blog.yowko.com/git-lfs/</link><pubDate>Fri, 25 Aug 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/git-lfs/</guid><description>使用 Git LFS 儲存大型檔案 分散式版控 Git 雖然已經改善了許多集中式版控的缺點，但針對內容 hash 的作法對於大型 binary 檔案，效能還是不夠令人滿意，針對這個問題 GitHub 與</description></item><item><title>關於 Git 刪除 Remote Branch</title><link>https://blog.yowko.com/git-delete-remote-branch/</link><pubDate>Thu, 03 Aug 2017 23:56:00 +0800</pubDate><guid>https://blog.yowko.com/git-delete-remote-branch/</guid><description>關於 Git 刪除 Remote Branch 今天同事問到為什麼從 Git Server 上刪除 branch 後，local 還是看得到被刪除的 branch，仔細想想我好像沒有這樣操作過，所以做了幾個實驗，</description></item><item><title>修改 Git Server Repository Branch 名稱</title><link>https://blog.yowko.com/git-rename-remote-branch/</link><pubDate>Tue, 25 Jul 2017 23:10:00 +0800</pubDate><guid>https://blog.yowko.com/git-rename-remote-branch/</guid><description>修改 Git Server Repository Branch 名稱 公司的版控正在從 SVN 轉為 Git，過程中當然問題不斷，其中 Repository 的命名方式與 Branch 的用法都是大家討論的重點，但這是比較偏流程跟政策面的決</description></item><item><title>Git webhook 如何驅動 Jenkins 的參數化建置 (Build with Parameters)</title><link>https://blog.yowko.com/webhook-jenkins-build-with-parameter/</link><pubDate>Wed, 05 Jul 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/webhook-jenkins-build-with-parameter/</guid><description>Git webhook 如何驅動 Jenkins 的參數化建置 (Build with Parameters) 之前文章 Jenkins 2 將其他 job 名稱變成可選擇的參數、Jenkins 2 如何建立 Pipeline job 曾經簡單地介紹過模組化 build flow 的想法，透過</description></item><item><title>在 GitHub Repository 中加上 License 宣告</title><link>https://blog.yowko.com/github-repository-license/</link><pubDate>Tue, 06 Jun 2017 21:00:00 +0800</pubDate><guid>https://blog.yowko.com/github-repository-license/</guid><description>在 GitHub Repository 中加上 License 宣告 之前在紀錄嘗試不同技術的過程默默地也完成了許多不同的成品，大多數內容也都是透過網路搜尋而來，所以就放在 GitHub 希望有機會讓有類似</description></item><item><title>Git 修改資料夾名稱的做法</title><link>https://blog.yowko.com/git-mv/</link><pubDate>Fri, 26 May 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/git-mv/</guid><description>Git 修改資料夾名稱的做法 同事想要調整 Git repository 的 folder 名稱，以往 SVN 的修改方式就是直接修改資料夾名稱，然後 commit，一切搞定：因為 SVN 是檔案 base 的版控，它</description></item><item><title>在 Jenkins 2 使用有 Submodule 的 Git Repository</title><link>https://blog.yowko.com/jenkins-git-submodule/</link><pubDate>Wed, 17 May 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-git-submodule/</guid><description>在 Jenkins 2 使用有 Submodule 的 Git Repository 前幾天文章 Git 專案引用其他 Repository 的作法(Git Submodule) 介紹了如何使用 Git Submodule 的功能來拆解專案的相依性，讓 repository 可以引用其他外部 repository 檔案或是 source c</description></item><item><title>如何使用 Git Attributes 來避免 web.config(app.config) 連線字串的機敏資訊被 commit</title><link>https://blog.yowko.com/git-attributes-prevent-commit-password/</link><pubDate>Mon, 15 May 2017 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-attributes-prevent-commit-password/</guid><description>如何使用 Git Attributes 來避免 web.config(app.config) 連線字串的機敏資訊被 commit 自從 GitHub 與雲端服務盛行以來，你一定有聽過類似的鄉野傳聞：某個開發人員不慎把雲端服務的帳號及密碼 commit 至 G</description></item><item><title>使用 Git Attributes 的合併策略(Merge Strategy) 避免特定檔案被變更</title><link>https://blog.yowko.com/git-attributes-merge-strategy/</link><pubDate>Sun, 14 May 2017 12:31:00 +0800</pubDate><guid>https://blog.yowko.com/git-attributes-merge-strategy/</guid><description>使用 Git Attributes 的合併策略(Merge Strategy) 避免特定檔案被變更 公司專案在經由 CI - Continuous integration (Jenkins) 成功 build 後會將 build 結果全部 commit 回 SVN，以確保最後的 production code 是有被版控的，如</description></item><item><title>Git 專案引用其他 Repository 的作法(Git Submodule)</title><link>https://blog.yowko.com/git-submodule/</link><pubDate>Sat, 13 May 2017 10:55:00 +0800</pubDate><guid>https://blog.yowko.com/git-submodule/</guid><description>Git 專案引用其他 Repository 的作法(Git Submodule) 最近公司正在大刀闊斧地將專案從 SVN 搬到 Git 上，流程的改變、不同的版控觀念以及操作方式不免造成些衝擊，但這些只要經</description></item><item><title>Git 如何針對其他路徑下的 Repository 執行指令</title><link>https://blog.yowko.com/git-command-from-another-directory/</link><pubDate>Fri, 12 May 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-command-from-another-directory/</guid><description>Git 如何針對其他路徑下的 Repository 執行指令 一般來說我們都會直接在專案 repository 的所在目錄下執行 git 指令，今天同事問的這個問題就是因為不是一般的人為操作：同事使用</description></item><item><title>Jenkins 該如何使用 SSH 存取 AD(LDAP) 驗證的 Git server</title><link>https://blog.yowko.com/jenkins-ssh-ad-ldap-git-server/</link><pubDate>Tue, 09 May 2017 23:30:00 +0800</pubDate><guid>https://blog.yowko.com/jenkins-ssh-ad-ldap-git-server/</guid><description>Jenkins 該如何使用 SSH 存取 AD(LDAP) 驗證的 Git server 最近公司的專案正積極地從 SVN 搬遷到 GIT，所以連帶的 CI Server - Jenkins 這邊的 SCM (Source Code Management) 也需要一併調整，同事為了不想寫死帳號密</description></item><item><title>Windows 環境下為 Git Repository 加上 Git Hook</title><link>https://blog.yowko.com/git-hook-windows/</link><pubDate>Sun, 07 May 2017 01:30:00 +0800</pubDate><guid>https://blog.yowko.com/git-hook-windows/</guid><description>Windows 環境下為 Git Repository 加上 Git Hook 同事因為專案相依的關係，在不同 branch 間可能會誤用不同屬性或是方式，所以想在 repository 切換 branch 時加入提示，提醒工程師記得切換相依專案的</description></item><item><title>Git 如何設定一次 Push 至多個 Remote Repository</title><link>https://blog.yowko.com/git-push-multiple-remote-repository/</link><pubDate>Fri, 28 Apr 2017 01:00:00 +0800</pubDate><guid>https://blog.yowko.com/git-push-multiple-remote-repository/</guid><description>Git 如何設定一次 Push 至多個 Remote Repository 相信你一定不想看到辛苦寫完的程式，因為意外造成 Source Code 遺失，當然還擇良好的 Git server 服務是必要條件，但再穩固的服務也有可能出</description></item><item><title>GitHub Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (GitHub Plugin)</title><link>https://blog.yowko.com/github-plugin-jenkins-webhook/</link><pubDate>Sat, 11 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/github-plugin-jenkins-webhook/</guid><description>GitHub Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (GitHub Plugin) 之前筆記 遠端 Git Repository 有 merge 時自動通知 Jenkins 2 進行編譯建置 (webhook) 紀錄了如何以 GitHub 為例設定 Git server 提供的 webhook 功能與 Jenkins 2 建置自動</description></item><item><title>遠端 Git Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (webhook)</title><link>https://blog.yowko.com/git-repository-jenkins-webhook/</link><pubDate>Fri, 10 Feb 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/git-repository-jenkins-webhook/</guid><description>遠端 Git Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (webhook) 之前筆記 如何使用 Jenkins 2.0 建置 .NET 專案 紀錄到該如何使用 Jenkins 2 來建置 .NET 專案，為了讓整個開發建置流程更加自動化也</description></item><item><title>為 SourceTree 設定需驗證的 proxy</title><link>https://blog.yowko.com/sourcetree-proxy/</link><pubDate>Sun, 08 Jan 2017 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/sourcetree-proxy/</guid><description>SourceTree 設定需驗證代理伺服器(proxy with authentication) SourceTree 是套 GUI 介面相較於 TortoiseGIT 有較多正面評價的 GIT 管理工具，相較於 TortoiseGIT 只有 Windows 版本，SourceTree 有 Windows 跟 MAC 版本，</description></item><item><title>為 TortoiseGit 設定需驗證的 proxy</title><link>https://blog.yowko.com/tortoisegit-proxy/</link><pubDate>Fri, 30 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/tortoisegit-proxy/</guid><description>為 TortoiseGit 設定需驗證的 proxy Windows 下進行 Git 相關操作， TortoiseGit 是非常便捷的工具，不僅操作介面和熟悉的 TortoiseSVN 大致相同，加上大多數的 git 指令都有實作，絕大多情境都可以透過 TortoiseGit</description></item><item><title>Git reset 的三種模式( soft mixed hard )比較</title><link>https://blog.yowko.com/git-reset-type/</link><pubDate>Sun, 25 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/git-reset-type/</guid><description>Git reset 的三種模式( soft mixed hard )比較 git reset 的三種主要模式(&amp;ndash;soft, &amp;ndash;mixed,&amp;ndash;hard)，一直困擾著我不太</description></item><item><title>在Local Git Remote SVN(本機使用 Git，版控 Server 使用 SVN)</title><link>https://blog.yowko.com/local-git-remote-svn/</link><pubDate>Mon, 12 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/local-git-remote-svn/</guid><description>Local Git Remote SVN(本機使用 Git，版控 Server 使用 SVN) 大家一定或多或少感受到 Git 愈來愈多人採用，為了不輸別人(咦?)應該是為了體會 Git 的過人之處，最好的方式</description></item></channel></rss>