<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cache on Yowko&#39;s Notes</title>
    <link>https://blog.yowko.com/tags/cache/</link>
    <description>Recent content in Cache on Yowko&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 Mar 2017 01:42:34 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yowko.com/tags/cache/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 5 使用動態條件與動態欄位</title>
      <link>https://blog.yowko.com/net-framework-memorycache-5/</link>
      <pubDate>Sat, 11 Mar 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/net-framework-memorycache-5/</guid>
      <description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 5 使用動態條件與動態欄位 一直以為 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 4 使用泛型來簡化 是 .NET MemoryCache 系列的最後一篇，壓根忘</description>
    </item>
    
    <item>
      <title>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 1 (使用 Strings 型別)</title>
      <link>https://blog.yowko.com/dotnet-redis-strings/</link>
      <pubDate>Sat, 18 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/dotnet-redis-strings/</guid>
      <description>如何在 .NET 程式中使用 Redis 做為 Cache Server - Part 1 (使用 Strings 型別) 在前面文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，也使用 .NET Framework</description>
    </item>
    
    <item>
      <title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 4 使用泛型來簡化</title>
      <link>https://blog.yowko.com/net-framework-memorycache-4/</link>
      <pubDate>Fri, 17 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/net-framework-memorycache-4/</guid>
      <description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 4 使用泛型來簡化 經過第一篇文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，也在 使</description>
    </item>
    
    <item>
      <title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db</title>
      <link>https://blog.yowko.com/net-framework-memorycache-2/</link>
      <pubDate>Thu, 16 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/net-framework-memorycache-2/</guid>
      <description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db 經過前一篇文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，文末也</description>
    </item>
    
    <item>
      <title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 3 隱藏的效能瓶頸</title>
      <link>https://blog.yowko.com/net-framework-memorycache-3/</link>
      <pubDate>Thu, 16 Feb 2017 01:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/net-framework-memorycache-3/</guid>
      <description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 3 隱藏的效能瓶頸 之前筆記 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db 解決程式可能 ddos db 的重大缺失，最近重新</description>
    </item>
    
    <item>
      <title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db</title>
      <link>https://blog.yowko.com/net-framework-memorycache-2/</link>
      <pubDate>Tue, 31 Jan 2017 00:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/net-framework-memorycache-2/</guid>
      <description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 2 使用 lock 避免 ddos db 經過前一篇文章 使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 介紹了最簡單達到 cache 資料的方法，文末也</description>
    </item>
    
    <item>
      <title>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法</title>
      <link>https://blog.yowko.com/net-framework-memorycache-1/</link>
      <pubDate>Mon, 30 Jan 2017 00:42:34 +0800</pubDate>
      
      <guid>https://blog.yowko.com/net-framework-memorycache-1/</guid>
      <description>使用 .NET Framework 內建的 MemoryCache 來 Cache 常用資料 - Part 1 極簡做法 程式多多少少有些資料或設定是經常需要使用的，如果這些資料異動頻率低的特性就可以考慮將其加入 cach</description>
    </item>
    
  </channel>
</rss>