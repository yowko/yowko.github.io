<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on Yowko&#39;s Notes</title><link>https://blog.yowko.com/tags/javascript/</link><description>Recent content in JavaScript on Yowko&#39;s Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 01 Nov 2018 00:42:34 +0800</lastBuildDate><atom:link href="https://blog.yowko.com/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>為 Hugo 加上 InstantClick</title><link>https://blog.yowko.com/hugo-js/</link><pubDate>Thu, 01 Nov 2018 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/hugo-js/</guid><description>為 Hugo 加上 InstantClick 前幾天 Larry 哥閒聊問到 Hugo 在引用其他 js 套件上的支援度時舉了 InstantClick.js 的例子，無奈小弟書讀得不夠多，沒用過 InstantClick.js，Larr</description></item><item><title>C# DateTime 轉 JavaScript Date (依使用者偏好區域來顯示時間)</title><link>https://blog.yowko.com/csharp-datetime-javascript-date/</link><pubDate>Mon, 05 Feb 2018 00:17:00 +0800</pubDate><guid>https://blog.yowko.com/csharp-datetime-javascript-date/</guid><description>C# DateTime 轉 JavaScript Date (依使用者偏好區域來顯示時間) 同事負責的頁面會有不同時區的 user 來瀏覽，時間類型的顯示會直接影響 user 的使用者體驗，尤其是各式公告跟有時效</description></item><item><title>使用 Moment.js 來簡化 JavaScript 的時間處理</title><link>https://blog.yowko.com/moment-js/</link><pubDate>Sat, 20 Jan 2018 22:22:00 +0800</pubDate><guid>https://blog.yowko.com/moment-js/</guid><description>使用 Moment.js 來簡化 JavaScript 的時間處理 專案的前端頁面在 user 要求加速整個流程下，使用了一套 library - Date Range Picker 方便使用者可以在同一個 input 中同時選擇 start date 與 end date 也讓整體操作獲</description></item><item><title>JavaScript 偵測 Request 來自瀏覽器的 Go Back (回到上一頁)</title><link>https://blog.yowko.com/javascript-detect-request-from-go-back/</link><pubDate>Mon, 08 Jan 2018 19:01:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-detect-request-from-go-back/</guid><description>JavaScript 偵測 Request 來自瀏覽器的 Go Back (回到上一頁) 這是自己寫的 bug 所衍生出來的需求，大意是如果 user 在某個頁面執行 submit 動作後會 redirect 到新頁面，但如果 user 此時按下 go back 再</description></item><item><title>JavaScript 從陣列中取出符合條件的第一個物件 (C# LINQ 的 FirstOrDefault)</title><link>https://blog.yowko.com/javascript-firstordefault/</link><pubDate>Mon, 25 Dec 2017 13:25:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-firstordefault/</guid><description>JavaScript 從陣列中取出符合條件的第一個物件 (C# LINQ 的 FirstOrDefault) 之前筆記 JavaScript 依屬性值過濾陣列取得完整物件 紀錄到如何將陣列中的符合特定屬性值條件的物件取出，與本文要介</description></item><item><title>JavaScript 依屬性值過濾陣列取得完整物件</title><link>https://blog.yowko.com/javascript-filter-array-by-value/</link><pubDate>Sun, 24 Dec 2017 15:48:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-filter-array-by-value/</guid><description>JavaScript 依屬性值過濾陣列取得完整物件 之前筆記 JavaScript 在遞迴陣列中取得特定屬性值 紀錄到如何將依屬性名稱取出陣列物件屬性值，當時需求是為了取得物件內包含的所</description></item><item><title>JavaScript 在遞迴陣列中取得特定屬性值</title><link>https://blog.yowko.com/javascript-recursive-map/</link><pubDate>Sun, 24 Dec 2017 00:59:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-recursive-map/</guid><description>JavaScript 在遞迴陣列中取得特定屬性值 之前筆記 JavaScript Array 的加總 紀錄到 int Array 的加總及 object Array 依屬性名稱加總內容的做法，今天則是要來紀錄如何將遞迴陣列中的特定屬性取出</description></item><item><title>JavaScript Array 的加總</title><link>https://blog.yowko.com/javascript-array-sum/</link><pubDate>Fri, 22 Dec 2017 03:51:00 +0800</pubDate><guid>https://blog.yowko.com/javascript-array-sum/</guid><description>JavaScript Array 的加總 最近的專案中因為前端互動性強，採用了較多的 JavaScript 來處理畫面互動性，雖然身為一名網站開發工程師，JS 並不算陌生，但實際開發時還是經常需要</description></item><item><title>在 Visual Studio 中使用 WebPack 來編譯 Vue.js</title><link>https://blog.yowko.com/visual-studio-webpack-vuejs/</link><pubDate>Mon, 13 Nov 2017 02:45:00 +0800</pubDate><guid>https://blog.yowko.com/visual-studio-webpack-vuejs/</guid><description>在 Visual Studio 中使用 WebPack 來編譯 Vue.js 筆記 使用 Webpack 來編譯 Vue.js Single File Components (.vue) 紀錄著使用 webpack 來編譯 .vue 檔案的做法，而我平常主要還是使用 Visual Studio 開發，所以還是得將 WebPack 及 Visual Studio 做個整合，</description></item><item><title>使用 Webpack 來編譯 Vue.js Single File Components (.vue)</title><link>https://blog.yowko.com/webpack-vue-file/</link><pubDate>Sun, 12 Nov 2017 22:24:00 +0800</pubDate><guid>https://blog.yowko.com/webpack-vue-file/</guid><description>使用 Webpack 來編譯 Vue.js Single File Components (.vue) 最近因為新專案的部份頁面有較多的互動功能，所以打算透過 Vue.js 來處理，其中某些功能在多個頁面間可以共用，就使用了 Vue.js 的 Single File Components (.vue)</description></item><item><title>Vue.js 2.0 基礎 API 與 Directives 用法範例</title><link>https://blog.yowko.com/vue-js-2-example/</link><pubDate>Thu, 22 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/vue-js-2-example/</guid><description>Vue.js 2.0 基礎 API 與 Directives 用法範例 Vue.js 因為方便性及效能突出，備受矚目，雖然發展迅速，但整體的說明文件仍然相當不足，讓使用時的便利降低不少，相信過段時間一定</description></item><item><title>將 Reveal.js 簡報匯出成 PDF</title><link>https://blog.yowko.com/revealjs-pdf/</link><pubDate>Sat, 17 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/revealjs-pdf/</guid><description>將 Reveal.js 簡報匯出成 PDF 之前筆記曾經紀錄到如何使用 Reveal.js 搭配 Markdown 語法來製作簡報，可以大幅減少製作簡報的時間成本，但簡報除了實際報告的呈現之外，另一個重點是</description></item><item><title>用 Markdown 與 Reveal.js 來製作簡報</title><link>https://blog.yowko.com/markdown-revealjs/</link><pubDate>Fri, 02 Dec 2016 00:42:34 +0800</pubDate><guid>https://blog.yowko.com/markdown-revealjs/</guid><description>用 Markdown 與 Reveal.js 來製作簡報 相信很多人對於 Markdown 的簡易語法愛不釋手，而 Reveal.js 是一套可以使用 Markdown 語法以 HTML 呈現的簡報框架 透過將 Markdown 與 Reveal.js 結合就可以讓我們在學習過程中所累</description></item></channel></rss>