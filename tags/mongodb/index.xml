<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MongoDB on Yowko&#39;s Notes</title>
    <link>https://blog.yowko.com/tags/mongodb/</link>
    <description>Recent content in MongoDB on Yowko&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 10 May 2020 21:30:00 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yowko.com/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Compose 建立 MongoDB Replica Set</title>
      <link>https://blog.yowko.com/docker-compose-mongodb-replica-set/</link>
      <pubDate>Sun, 10 May 2020 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/docker-compose-mongodb-replica-set/</guid>
      <description>Docker Compose 建立 MongoDB Replica Set 因為之前筆記 MongoDB Cli Replica Set 連線方式 需要建立測試環境，想起最早之前的筆記 使用 docker 建立 MongoDB Replica Set 但使用起來並不是很好用，所以興起筆記其他建立 MongoDB</description>
    </item>
    
    <item>
      <title>MongoDB Cli Replica Set 連線方式</title>
      <link>https://blog.yowko.com/mongodb-cli-replica-set/</link>
      <pubDate>Sat, 09 May 2020 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mongodb-cli-replica-set/</guid>
      <description>MongoDB Cli Replica Set 連線方式 這是在建立 MongoDB patch 資料自動化流程時遇到的問題：需要進行 MongoDB data patch 的開發人員將需要執行的 MongoDB script 提供 .js 格式的檔案，再透過 MongoDB Cli 來匯入執行 從一</description>
    </item>
    
    <item>
      <title>MongoDB CPU High 問題追查紀錄</title>
      <link>https://blog.yowko.com/mongodb-cpu-high/</link>
      <pubDate>Sun, 04 Aug 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mongodb-cpu-high/</guid>
      <description>MongoDB CPU High 問題追查紀錄 在之前筆記 取得 MongoDB SDK 實際產生的指令 中提到是為了追查 MongoDB 的效能問題而需要取得 MongoDB driver 實際產生的 script，既然 script 已經順利取得，就可</description>
    </item>
    
    <item>
      <title>取得 MongoDB SDK 實際產生的指令</title>
      <link>https://blog.yowko.com/mongodb-interceptor/</link>
      <pubDate>Sat, 03 Aug 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mongodb-interceptor/</guid>
      <description>取得 MongoDB SDK 實際產生的指令 之前曾經在 取得 Entity Framework 存取 DB 時的實際 SQL Script 提到如果都透過 EntityFramework 來存取 DB，有時候遇到的效能瓶頸是因為 EntityFramework 沒有使用正確的 index 或是執行計</description>
    </item>
    
    <item>
      <title>.Net Core 操作 MongoDB 出現 MongoWaitQueueFullException</title>
      <link>https://blog.yowko.com/csharp-mongodb-waitqueuefullexception/</link>
      <pubDate>Sun, 28 Jul 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/csharp-mongodb-waitqueuefullexception/</guid>
      <description>.Net Core 操作 MongoDB 出現 MongoWaitQueueFullException 之前筆記 在 Docker Compose file 3 下限制 CPU 與 Memory 中提到同事反應說某個專案在執行時會造成 MongoDB CPU high，最後引發 docker service crash，一直沒有找到 root ca</description>
    </item>
    
    <item>
      <title>使用 docker 建立 MongoDB Replica Set</title>
      <link>https://blog.yowko.com/docker-mongodb-replica-set/</link>
      <pubDate>Thu, 07 Mar 2019 01:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/docker-mongodb-replica-set/</guid>
      <description>使用 docker 建立 MongoDB Replica Set 前幾天筆記 使用 docker 建立 Redis Cluster - 更新版 提到為了要測試 Redis 完整 cluster 功能但又不想每次都重頭建立三組 Master-Slave 以及三個 Sentinel，所以透過 docker-compose 來</description>
    </item>
    
    <item>
      <title>[Benchmark] 使用 C# 對 NoSQL insert 操作的效能數據</title>
      <link>https://blog.yowko.com/nosql-insert-benchmark/</link>
      <pubDate>Sun, 24 Feb 2019 21:30:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/nosql-insert-benchmark/</guid>
      <description>[Benchmark] 使用 C# 對 NoSQL insert 操作的效能數據 最近專案需要將收到的原始 request 內容直接儲存下來，以備日後有問題或是後續加工使用。 針對這類只有 insert 跟 select 操作的需要，過去大</description>
    </item>
    
    <item>
      <title>使用 C# 存取 MongoDB</title>
      <link>https://blog.yowko.com/csharp-mangodb/</link>
      <pubDate>Sat, 16 Feb 2019 22:40:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/csharp-mangodb/</guid>
      <description>使用 C# 存取 MongoDB 之前筆記 使用 C# 存取 Cassandra 提到想要將 log 存放至 NoSQL 中而正在嘗試某幾套 NoSQL，現在就來看看 MongoDB 的使用吧 基本環境說明 在 mac 上使用 docker 建立 Mong</description>
    </item>
    
    <item>
      <title>將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中 - MongoDB 版</title>
      <link>https://blog.yowko.com/aspnet-identity-aspnet-mvc-empty-mongodb/</link>
      <pubDate>Mon, 30 Jul 2018 23:03:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/aspnet-identity-aspnet-mvc-empty-mongodb/</guid>
      <description>將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中 - MongoDB 版 在之前筆記 將 ASP.NET Identity 加至 ASP.NET MVC Empty 專案中 中有提到我個人事實上比較喜歡 MVC Empty 專案範本的乾淨風格，當時也是因為不想讓專案中有過</description>
    </item>
    
    <item>
      <title>使用 MongoDB 儲存 ASP.NET Identity 資料</title>
      <link>https://blog.yowko.com/aspnet-identity-mongodb/</link>
      <pubDate>Fri, 20 Jul 2018 16:36:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/aspnet-identity-mongodb/</guid>
      <description>使用 MongoDB 儲存 ASP.NET Identity 資料 近期處理的某個專案需要 website 來呈現報表類資訊，起初 user 說只需要基本的登入，不需要其他使用者相關功能(e.g. 修改密碼、權限管理、</description>
    </item>
    
    <item>
      <title>C# 搭配 MongoDB 的連線寫法</title>
      <link>https://blog.yowko.com/mongodb-connectionstring/</link>
      <pubDate>Sun, 10 Jun 2018 20:26:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mongodb-connectionstring/</guid>
      <description>C# 搭配 MongoDB 的連線寫法 最近有個新專案需要儲存 json 格式的資料，MongoDB 是考慮的選項之一，評估的過程中才發現我沒有 C# 連線 MongoDB 的使用筆記，雖然專案時</description>
    </item>
    
    <item>
      <title>使用 Elastic Stack (ELK) 來監控 MongoDB</title>
      <link>https://blog.yowko.com/elk-mongodb-monitor/</link>
      <pubDate>Sat, 12 May 2018 00:23:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/elk-mongodb-monitor/</guid>
      <description>使用 Elastic Stack (ELK) 來監控 MongoDB 之前筆記 Windows 平台上安裝 Elastic Stack (ELK - Elasticsearch , Logstash , Kibana) 提到因為想要將部份系統資料餵進 ELK 用來監控及除錯，順手紀錄 Windows 平台上架設 Elastic Stack (ELK - Elasticsearch , Logstash ,</description>
    </item>
    
    <item>
      <title>在 Windows 啟用 MongoDB Replica Set 驗證</title>
      <link>https://blog.yowko.com/windows-mongodb-replica-set-auth/</link>
      <pubDate>Sun, 10 Sep 2017 23:13:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/windows-mongodb-replica-set-auth/</guid>
      <description>在 Windows 啟用 MongoDB Replica Set 驗證 之前曾在 為 MongoDB 加上驗證機制 介紹過如何為 MongoDB 建立驗證授權機制，為資料加上基本保護，也在 MongoDB 在 Windows 上的 HA 機制 - Replica sets 介紹 MongoDB 的 HA 機制 - Replica Set</description>
    </item>
    
    <item>
      <title>MongoDB 在 Windows 上的 HA 機制 - Replica Sets</title>
      <link>https://blog.yowko.com/mongodb-windows-ha-replica-sets/</link>
      <pubDate>Tue, 05 Sep 2017 01:19:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mongodb-windows-ha-replica-sets/</guid>
      <description>MongoDB 在 Windows 上的 HA 機制 - Replica Sets 嚴格來說 MongoDB 在 HA 上支援過兩種作法：1. Master-Slave 2. Replica Set，但官網已正式公告從 MongoDB 3.2 起開始不再將 master-slave 視為 cluster 機制的一部份，詳細內容請參</description>
    </item>
    
    <item>
      <title>為 MongoDB 加上驗證機制</title>
      <link>https://blog.yowko.com/mongodb-enable-auth/</link>
      <pubDate>Tue, 29 Aug 2017 00:54:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/mongodb-enable-auth/</guid>
      <description>為 MongoDB 加上驗證機制 資訊安全總是資訊相關工作者的罩門之一：功能愈加愈多、時程愈縮愈短、製作費用愈來愈少，而要求卻愈來愈難，常常為了滿足合約上明列</description>
    </item>
    
    <item>
      <title>如何在 Windows 環境安裝及設定 MongoDB</title>
      <link>https://blog.yowko.com/windows-mongodb/</link>
      <pubDate>Wed, 23 Aug 2017 00:35:00 +0800</pubDate>
      
      <guid>https://blog.yowko.com/windows-mongodb/</guid>
      <description>如何在 Windows 環境安裝及設定 MongoDB 最近專案因為資料變異幅度較大，如果使用傳統關聯式資料庫來儲存資料，table schema 很難設計，所以打算利用 MongoDB schema-free 的特性來儲存</description>
    </item>
    
  </channel>
</rss>